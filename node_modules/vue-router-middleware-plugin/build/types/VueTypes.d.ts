import { Middleware, MiddlewarePipeline } from './MiddlewareTypes';
export interface Plugin {
}
export interface Vue {
    use?: (plugin: Plugin, router?: Router) => void;
    [key: string]: any;
}
export declare type RouteHook = (to: Route, from: Route, next: RouteResolver) => void;
export interface Router {
    routeHook: RouteHook;
    beforeEach?: (routeHook: RouteHook) => void;
}
export declare type RouteResolver = (arg?: boolean | string | Route) => void;
export interface RouteContext {
    to?: Route;
    from?: Route;
    next?: RouteResolver;
    [key: string]: any;
}
export interface RouteMeta {
    middleware?: Middleware[] | Middleware | MiddlewarePipeline;
}
export interface Route {
    meta: RouteMeta;
}
