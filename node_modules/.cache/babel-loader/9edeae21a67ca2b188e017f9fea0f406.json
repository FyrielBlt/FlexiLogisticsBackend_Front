{"ast":null,"code":"import Url from \"../Api.js\";\nimport axios from \"axios\";\nconst Token = localStorage.getItem('token');\nexport default {\n  state: {\n    ListeOffres: []\n  },\n  getters: {\n    ListeOffres(state) {\n      return state.ListeOffres;\n    }\n\n  },\n  mutations: {\n    GetListeOffre(state, value) {\n      state.ListeOffres = value;\n    },\n\n    // AccepterOffreSeule(state, OffreId) {\n    //     state.ListeOffres.filter(el => el.idOffre == OffreId.OffreId)[0].idEtat = OffreId.idEtatEnCours;\n    //     state.ListeOffres.filter(el => el.idOffre == OffreId.OffreId)[0].prixFinale =\n    //       state.ListeOffres.filter(el => el.idOffre == OffreId.OffreId)[0].prix + 10;\n    //     console.log(state.ListeOffres.filter(el => el.idOffre == OffreId.OffreId)[0])\n    //     axios.put(Url + \"offres/\" + state.ListeOffres.filter(el => el.idOffre == OffreId.OffreId)[0].idOffre, state.ListeOffres.filter(el => el.idOffre == OffreId.OffreId)[0], {\n    //       headers: {\n    //         Authorization: 'Bearer ' + Token\n    //       }\n    //     }).then(res => {\n    //       console.log(\"en cour\")\n    //     });\n    //   console.log(\"bravo\")\n    // },\n    RefuserTout(state, ListeOffresId) {\n      //refuser tout les offres puis accepter juste les choisit s\n      for (var j = 0; j < state.ListeOffres.length; j++) {\n        state.ListeOffres[j].idEtat = ListeOffresId.idEtatRefuser;\n        let off = state.ListeOffres[j];\n        off.idEtatNavigation = null;\n        axios.put(Url + \"offres/\" + off.idOffre, off, {\n          headers: {\n            Authorization: 'Bearer ' + Token\n          }\n        }).then(res => {\n          console.log(\"res :1\");\n          console.log(off);\n        });\n      }\n\n      console.log(\"malek\"); //accepter les choisits + donner l'offre au client \n      // for (var i = 0; i < ListeOffresId.ListeOffresId.length; i++) {\n      //   state.ListeOffres.filter(el => el.idOffre == ListeOffresId.ListeOffresId[i])[0].idEtat = ListeOffresId.idEtatEnCours;\n      //   state.ListeOffres.filter(el => el.idOffre == ListeOffresId.ListeOffresId[i])[0].prixFinale =\n      //   state.ListeOffres.filter(el => el.idOffre == ListeOffresId.ListeOffresId[i])[0].prix + 10;\n      //  var of= state.ListeOffres.filter(el => el.idOffre == ListeOffresId.ListeOffresId[i])[0];\n      //   of.idEtatNavigation=null;\n      // // console.log(of)\n      //    axios.put(Url + \"offres/\" + of.idOffre, of, {\n      //     headers: {\n      //       Authorization: 'Bearer ' + Token\n      //     }\n      //   }).then(res => {\n      //     console.log(\"res 2 :\")\n      //     console.log(of)\n      //   });\n      //   console.log(\"bravo\")\n      // }\n      //console.log(\"bravo\")\n    },\n\n    // AccepterOffre(state, ListeOffresId) {\n    //   // //refuser tout les offres puis accepter juste les choisit s\n    //   // for (var j = 0; j < state.ListeOffres.length; j++) {\n    //   //   state.ListeOffres[j].idEtat = ListeOffresId.idEtatRefuser;\n    //   //   var off =state.ListeOffres[j];\n    //   //   off.idEtatNavigation=null;\n    //   //   axios.put(Url + \"offres/\" + off.idOffre, off, {\n    //   //     headers: {\n    //   //       Authorization: 'Bearer ' + Token\n    //   //     }\n    //   //   }).then(res=>{\n    //   //     console.log(\"res :1\")\n    //   //     console.log(off)\n    //   //   });\n    //   // }\n    //   // console.log(\"malek\")\n    //   //accepter les choisits + donner l'offre au client \n    //   for (var i = 0; i < ListeOffresId.ListeOffresId.length; i++) {\n    //     state.ListeOffres.filter(el => el.idOffre == ListeOffresId.ListeOffresId[i])[0].idEtat = ListeOffresId.idEtatEnCours;\n    //     state.ListeOffres.filter(el => el.idOffre == ListeOffresId.ListeOffresId[i])[0].prixFinale =\n    //     state.ListeOffres.filter(el => el.idOffre == ListeOffresId.ListeOffresId[i])[0].prix + 10;\n    //     let of = state.ListeOffres.filter(el => el.idOffre == ListeOffresId.ListeOffresId[i])[0];\n    //     of.idEtatNavigation=null;\n    //   // console.log(of)\n    //      axios.put(Url + \"offres/\" + of.idOffre, of, {\n    //       headers: {\n    //         Authorization: 'Bearer ' + Token\n    //       }\n    //     }).then(res => {\n    //       console.log(\"res 2 :\")\n    //       console.log(of)\n    //     });\n    //     console.log(\"bravo\")\n    //   }\n    //   //console.log(\"bravo\")\n    // },\n    AnnulerAccepter(state, annuler) {\n      state.ListeOffres[annuler.index].idEtat = annuler.idEtatRefuser;\n      let offre = state.ListeOffres[annuler.index];\n      offre.idEtatNavigation = null;\n      axios.put(Url + \"offres/\" + annuler.idOffre, offre, {\n        headers: {\n          Authorization: 'Bearer ' + Token\n        }\n      }).then(res => {\n        console.log(\"AnnulerAccepter\");\n      });\n    },\n\n    ValiderAccepter(state, valider) {\n      //refuser tout les offres puis accepter juste les choisit s\n      for (var j = 0; j < state.ListeOffres.length; j++) {\n        state.ListeOffres[j].idEtat = valider.idEtatRefuser;\n        axios.put(Url + \"offres/\" + state.ListeOffres[j].idOffre, state.ListeOffres[j], {\n          headers: {\n            Authorization: 'Bearer ' + Token\n          }\n        }).then();\n      } // state.ListeOffres[valider.index].idEtat=valider.idEtatAccepter;\n      // let offre=state.ListeOffres[valider.index];\n      // offre.idEtatNavigation=null;\n\n    }\n\n  },\n  actions: {\n    // Accepter_Offre({ commit }, ListeOffresId) {\n    //   commit('AccepterOffre', ListeOffresId);\n    // },\n    Accepter_Offre_seule({\n      commit\n    }, ListeOffresId) {\n      commit('AccepterOffreSeule', ListeOffresId);\n    },\n\n    Get_ListeOffre({\n      commit\n    }, value) {\n      commit('GetListeOffre', value);\n    },\n\n    Annuler_Accepter({\n      commit\n    }, annuler) {\n      commit('AnnulerAccepter', annuler);\n    },\n\n    Valider_Accepter({\n      commit\n    }, valider) {\n      commit('ValiderAccepter', valider);\n    },\n\n    Refuser_Tout({\n      commit\n    }, valider) {\n      commit('RefuserTout', valider);\n    }\n\n  }\n};","map":{"version":3,"sources":["C:/Users/Karim Omrane/Desktop/PFE FI/FRONT/src/store/offreRecu/Offre.js"],"names":["Url","axios","Token","localStorage","getItem","state","ListeOffres","getters","mutations","GetListeOffre","value","RefuserTout","ListeOffresId","j","length","idEtat","idEtatRefuser","off","idEtatNavigation","put","idOffre","headers","Authorization","then","res","console","log","AnnulerAccepter","annuler","index","offre","ValiderAccepter","valider","actions","Accepter_Offre_seule","commit","Get_ListeOffre","Annuler_Accepter","Valider_Accepter","Refuser_Tout"],"mappings":"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","sourcesContent":["import Url from \"../Api.js\";\nimport axios from \"axios\";\nconst Token = localStorage.getItem('token');\nexport default {\n  state: {\n    ListeOffres: [],\n\n  },\n  getters: {\n    ListeOffres(state) {\n      return state.ListeOffres;\n    }\n  },\n  mutations: {\n    GetListeOffre(state, value) {\n      state.ListeOffres = value;\n    },\n    // AccepterOffreSeule(state, OffreId) {\n     \n\n    //     state.ListeOffres.filter(el => el.idOffre == OffreId.OffreId)[0].idEtat = OffreId.idEtatEnCours;\n    //     state.ListeOffres.filter(el => el.idOffre == OffreId.OffreId)[0].prixFinale =\n    //       state.ListeOffres.filter(el => el.idOffre == OffreId.OffreId)[0].prix + 10;\n    //     console.log(state.ListeOffres.filter(el => el.idOffre == OffreId.OffreId)[0])\n    //     axios.put(Url + \"offres/\" + state.ListeOffres.filter(el => el.idOffre == OffreId.OffreId)[0].idOffre, state.ListeOffres.filter(el => el.idOffre == OffreId.OffreId)[0], {\n    //       headers: {\n    //         Authorization: 'Bearer ' + Token\n    //       }\n    //     }).then(res => {\n    //       console.log(\"en cour\")\n    //     });\n      \n\n    //   console.log(\"bravo\")\n\n\n\n    // },\n    RefuserTout(state, ListeOffresId) {\n      //refuser tout les offres puis accepter juste les choisit s\n      for (var j = 0; j < state.ListeOffres.length; j++) {\n        state.ListeOffres[j].idEtat = ListeOffresId.idEtatRefuser;\n        let off =state.ListeOffres[j];\n        off.idEtatNavigation=null;\n        axios.put(Url + \"offres/\" + off.idOffre, off, {\n          headers: {\n            Authorization: 'Bearer ' + Token\n          }\n        }).then(res=>{\n          console.log(\"res :1\")\n          console.log(off)\n        });\n      }\n      console.log(\"malek\")\n      //accepter les choisits + donner l'offre au client \n      // for (var i = 0; i < ListeOffresId.ListeOffresId.length; i++) {\n      //   state.ListeOffres.filter(el => el.idOffre == ListeOffresId.ListeOffresId[i])[0].idEtat = ListeOffresId.idEtatEnCours;\n      //   state.ListeOffres.filter(el => el.idOffre == ListeOffresId.ListeOffresId[i])[0].prixFinale =\n      //   state.ListeOffres.filter(el => el.idOffre == ListeOffresId.ListeOffresId[i])[0].prix + 10;\n      //  var of= state.ListeOffres.filter(el => el.idOffre == ListeOffresId.ListeOffresId[i])[0];\n      //   of.idEtatNavigation=null;\n      // // console.log(of)\n      //    axios.put(Url + \"offres/\" + of.idOffre, of, {\n      //     headers: {\n      //       Authorization: 'Bearer ' + Token\n      //     }\n      //   }).then(res => {\n      //     console.log(\"res 2 :\")\n      //     console.log(of)\n      //   });\n      //   console.log(\"bravo\")\n      // }\n\n      //console.log(\"bravo\")\n\n\n\n    },\n    // AccepterOffre(state, ListeOffresId) {\n    //   // //refuser tout les offres puis accepter juste les choisit s\n    //   // for (var j = 0; j < state.ListeOffres.length; j++) {\n    //   //   state.ListeOffres[j].idEtat = ListeOffresId.idEtatRefuser;\n    //   //   var off =state.ListeOffres[j];\n    //   //   off.idEtatNavigation=null;\n    //   //   axios.put(Url + \"offres/\" + off.idOffre, off, {\n    //   //     headers: {\n    //   //       Authorization: 'Bearer ' + Token\n    //   //     }\n    //   //   }).then(res=>{\n    //   //     console.log(\"res :1\")\n    //   //     console.log(off)\n    //   //   });\n    //   // }\n    //   // console.log(\"malek\")\n    //   //accepter les choisits + donner l'offre au client \n    //   for (var i = 0; i < ListeOffresId.ListeOffresId.length; i++) {\n    //     state.ListeOffres.filter(el => el.idOffre == ListeOffresId.ListeOffresId[i])[0].idEtat = ListeOffresId.idEtatEnCours;\n    //     state.ListeOffres.filter(el => el.idOffre == ListeOffresId.ListeOffresId[i])[0].prixFinale =\n    //     state.ListeOffres.filter(el => el.idOffre == ListeOffresId.ListeOffresId[i])[0].prix + 10;\n    //     let of = state.ListeOffres.filter(el => el.idOffre == ListeOffresId.ListeOffresId[i])[0];\n    //     of.idEtatNavigation=null;\n    //   // console.log(of)\n    //      axios.put(Url + \"offres/\" + of.idOffre, of, {\n    //       headers: {\n    //         Authorization: 'Bearer ' + Token\n    //       }\n    //     }).then(res => {\n    //       console.log(\"res 2 :\")\n    //       console.log(of)\n    //     });\n    //     console.log(\"bravo\")\n    //   }\n\n    //   //console.log(\"bravo\")\n\n\n\n    // },\n    AnnulerAccepter(state, annuler){\n      \n      state.ListeOffres[annuler.index].idEtat=annuler.idEtatRefuser;\n      let offre=state.ListeOffres[annuler.index];\n      offre.idEtatNavigation=null;\n      axios.put(Url + \"offres/\" +annuler.idOffre ,offre,{\n        headers: {\n          Authorization: 'Bearer ' + Token\n        }\n      }).then(res => {\n        console.log(\"AnnulerAccepter\")\n      });\n    },\n    ValiderAccepter(state, valider){\n       //refuser tout les offres puis accepter juste les choisit s\n       for (var j = 0; j < state.ListeOffres.length; j++) {\n        state.ListeOffres[j].idEtat = valider.idEtatRefuser;\n        axios.put(Url + \"offres/\" + state.ListeOffres[j].idOffre, state.ListeOffres[j], {\n          headers: {\n            Authorization: 'Bearer ' + Token\n          }\n        }).then();\n      }\n\n      // state.ListeOffres[valider.index].idEtat=valider.idEtatAccepter;\n      // let offre=state.ListeOffres[valider.index];\n      // offre.idEtatNavigation=null;\n   \n    },\n  },\n  actions: {\n\n\n    // Accepter_Offre({ commit }, ListeOffresId) {\n    //   commit('AccepterOffre', ListeOffresId);\n    // },\n    Accepter_Offre_seule({ commit }, ListeOffresId) {\n      commit('AccepterOffreSeule', ListeOffresId);\n    },\n    Get_ListeOffre({ commit }, value) {\n      commit('GetListeOffre', value);\n    },\n    Annuler_Accepter({ commit }, annuler) {\n      commit('AnnulerAccepter', annuler);\n    },\n    Valider_Accepter({ commit }, valider) {\n      commit('ValiderAccepter', valider);\n    },\n    Refuser_Tout({ commit }, valider) {\n      commit('RefuserTout', valider);\n    },\n  },\n};\n\n"]},"metadata":{},"sourceType":"module"}