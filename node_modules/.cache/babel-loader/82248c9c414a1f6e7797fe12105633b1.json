{"ast":null,"code":"/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2020 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n(function webpackUniversalModuleDefinition(root, factory) {\n  if (typeof exports === 'object' && typeof module === 'object') module.exports = factory();else if (typeof define === 'function' && define.amd) define(\"pdfjs-dist/web/pdf_viewer\", [], factory);else if (typeof exports === 'object') exports[\"pdfjs-dist/web/pdf_viewer\"] = factory();else root[\"pdfjs-dist/web/pdf_viewer\"] = root.pdfjsViewer = factory();\n})(this, function () {\n  return (\n    /******/\n    function (modules) {\n      // webpackBootstrap\n\n      /******/\n      // The module cache\n\n      /******/\n      var installedModules = {};\n      /******/\n\n      /******/\n      // The require function\n\n      /******/\n\n      function __w_pdfjs_require__(moduleId) {\n        /******/\n\n        /******/\n        // Check if module is in cache\n\n        /******/\n        if (installedModules[moduleId]) {\n          /******/\n          return installedModules[moduleId].exports;\n          /******/\n        }\n        /******/\n        // Create a new module (and put it into the cache)\n\n        /******/\n\n\n        var module = installedModules[moduleId] = {\n          /******/\n          i: moduleId,\n\n          /******/\n          l: false,\n\n          /******/\n          exports: {}\n          /******/\n\n        };\n        /******/\n\n        /******/\n        // Execute the module function\n\n        /******/\n\n        modules[moduleId].call(module.exports, module, module.exports, __w_pdfjs_require__);\n        /******/\n\n        /******/\n        // Flag the module as loaded\n\n        /******/\n\n        module.l = true;\n        /******/\n\n        /******/\n        // Return the exports of the module\n\n        /******/\n\n        return module.exports;\n        /******/\n      }\n      /******/\n\n      /******/\n\n      /******/\n      // expose the modules object (__webpack_modules__)\n\n      /******/\n\n\n      __w_pdfjs_require__.m = modules;\n      /******/\n\n      /******/\n      // expose the module cache\n\n      /******/\n\n      __w_pdfjs_require__.c = installedModules;\n      /******/\n\n      /******/\n      // define getter function for harmony exports\n\n      /******/\n\n      __w_pdfjs_require__.d = function (exports, name, getter) {\n        /******/\n        if (!__w_pdfjs_require__.o(exports, name)) {\n          /******/\n          Object.defineProperty(exports, name, {\n            enumerable: true,\n            get: getter\n          });\n          /******/\n        }\n        /******/\n\n      };\n      /******/\n\n      /******/\n      // define __esModule on exports\n\n      /******/\n\n\n      __w_pdfjs_require__.r = function (exports) {\n        /******/\n        if (typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n          /******/\n          Object.defineProperty(exports, Symbol.toStringTag, {\n            value: 'Module'\n          });\n          /******/\n        }\n        /******/\n\n\n        Object.defineProperty(exports, '__esModule', {\n          value: true\n        });\n        /******/\n      };\n      /******/\n\n      /******/\n      // create a fake namespace object\n\n      /******/\n      // mode & 1: value is a module id, require it\n\n      /******/\n      // mode & 2: merge all properties of value into the ns\n\n      /******/\n      // mode & 4: return value when already ns object\n\n      /******/\n      // mode & 8|1: behave like require\n\n      /******/\n\n\n      __w_pdfjs_require__.t = function (value, mode) {\n        /******/\n        if (mode & 1) value = __w_pdfjs_require__(value);\n        /******/\n\n        if (mode & 8) return value;\n        /******/\n\n        if (mode & 4 && typeof value === 'object' && value && value.__esModule) return value;\n        /******/\n\n        var ns = Object.create(null);\n        /******/\n\n        __w_pdfjs_require__.r(ns);\n        /******/\n\n\n        Object.defineProperty(ns, 'default', {\n          enumerable: true,\n          value: value\n        });\n        /******/\n\n        if (mode & 2 && typeof value != 'string') for (var key in value) __w_pdfjs_require__.d(ns, key, function (key) {\n          return value[key];\n        }.bind(null, key));\n        /******/\n\n        return ns;\n        /******/\n      };\n      /******/\n\n      /******/\n      // getDefaultExport function for compatibility with non-harmony modules\n\n      /******/\n\n\n      __w_pdfjs_require__.n = function (module) {\n        /******/\n        var getter = module && module.__esModule ?\n        /******/\n        function getDefault() {\n          return module['default'];\n        } :\n        /******/\n        function getModuleExports() {\n          return module;\n        };\n        /******/\n\n        __w_pdfjs_require__.d(getter, 'a', getter);\n        /******/\n\n\n        return getter;\n        /******/\n      };\n      /******/\n\n      /******/\n      // Object.prototype.hasOwnProperty.call\n\n      /******/\n\n\n      __w_pdfjs_require__.o = function (object, property) {\n        return Object.prototype.hasOwnProperty.call(object, property);\n      };\n      /******/\n\n      /******/\n      // __webpack_public_path__\n\n      /******/\n\n\n      __w_pdfjs_require__.p = \"\";\n      /******/\n\n      /******/\n\n      /******/\n      // Load entry module and return exports\n\n      /******/\n\n      return __w_pdfjs_require__(__w_pdfjs_require__.s = 0);\n      /******/\n    }\n    /************************************************************************/\n\n    /******/\n    ([\n    /* 0 */\n\n    /***/\n    function (module, exports, __w_pdfjs_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      Object.defineProperty(exports, \"AnnotationLayerBuilder\", {\n        enumerable: true,\n        get: function () {\n          return _annotation_layer_builder.AnnotationLayerBuilder;\n        }\n      });\n      Object.defineProperty(exports, \"DefaultAnnotationLayerFactory\", {\n        enumerable: true,\n        get: function () {\n          return _annotation_layer_builder.DefaultAnnotationLayerFactory;\n        }\n      });\n      Object.defineProperty(exports, \"DefaultTextLayerFactory\", {\n        enumerable: true,\n        get: function () {\n          return _text_layer_builder.DefaultTextLayerFactory;\n        }\n      });\n      Object.defineProperty(exports, \"TextLayerBuilder\", {\n        enumerable: true,\n        get: function () {\n          return _text_layer_builder.TextLayerBuilder;\n        }\n      });\n      Object.defineProperty(exports, \"EventBus\", {\n        enumerable: true,\n        get: function () {\n          return _ui_utils.EventBus;\n        }\n      });\n      Object.defineProperty(exports, \"NullL10n\", {\n        enumerable: true,\n        get: function () {\n          return _ui_utils.NullL10n;\n        }\n      });\n      Object.defineProperty(exports, \"ProgressBar\", {\n        enumerable: true,\n        get: function () {\n          return _ui_utils.ProgressBar;\n        }\n      });\n      Object.defineProperty(exports, \"PDFLinkService\", {\n        enumerable: true,\n        get: function () {\n          return _pdf_link_service.PDFLinkService;\n        }\n      });\n      Object.defineProperty(exports, \"SimpleLinkService\", {\n        enumerable: true,\n        get: function () {\n          return _pdf_link_service.SimpleLinkService;\n        }\n      });\n      Object.defineProperty(exports, \"DownloadManager\", {\n        enumerable: true,\n        get: function () {\n          return _download_manager.DownloadManager;\n        }\n      });\n      Object.defineProperty(exports, \"GenericL10n\", {\n        enumerable: true,\n        get: function () {\n          return _genericl10n.GenericL10n;\n        }\n      });\n      Object.defineProperty(exports, \"PDFFindController\", {\n        enumerable: true,\n        get: function () {\n          return _pdf_find_controller.PDFFindController;\n        }\n      });\n      Object.defineProperty(exports, \"PDFHistory\", {\n        enumerable: true,\n        get: function () {\n          return _pdf_history.PDFHistory;\n        }\n      });\n      Object.defineProperty(exports, \"PDFPageView\", {\n        enumerable: true,\n        get: function () {\n          return _pdf_page_view.PDFPageView;\n        }\n      });\n      Object.defineProperty(exports, \"PDFSinglePageViewer\", {\n        enumerable: true,\n        get: function () {\n          return _pdf_single_page_viewer.PDFSinglePageViewer;\n        }\n      });\n      Object.defineProperty(exports, \"PDFViewer\", {\n        enumerable: true,\n        get: function () {\n          return _pdf_viewer.PDFViewer;\n        }\n      });\n\n      var _annotation_layer_builder = __w_pdfjs_require__(1);\n\n      var _text_layer_builder = __w_pdfjs_require__(5);\n\n      var _ui_utils = __w_pdfjs_require__(3);\n\n      var _pdf_link_service = __w_pdfjs_require__(4);\n\n      var _download_manager = __w_pdfjs_require__(6);\n\n      var _genericl10n = __w_pdfjs_require__(8);\n\n      var _pdf_find_controller = __w_pdfjs_require__(10);\n\n      var _pdf_history = __w_pdfjs_require__(12);\n\n      var _pdf_page_view = __w_pdfjs_require__(13);\n\n      var _pdf_single_page_viewer = __w_pdfjs_require__(15);\n\n      var _pdf_viewer = __w_pdfjs_require__(17);\n\n      const pdfjsVersion = '2.5.207';\n      const pdfjsBuild = '0974d605';\n      /***/\n    },\n    /* 1 */\n\n    /***/\n    function (module, exports, __w_pdfjs_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.DefaultAnnotationLayerFactory = exports.AnnotationLayerBuilder = void 0;\n\n      var _pdfjsLib = __w_pdfjs_require__(2);\n\n      var _ui_utils = __w_pdfjs_require__(3);\n\n      var _pdf_link_service = __w_pdfjs_require__(4);\n\n      class AnnotationLayerBuilder {\n        constructor({\n          pageDiv,\n          pdfPage,\n          linkService,\n          downloadManager,\n          imageResourcesPath = \"\",\n          renderInteractiveForms = false,\n          l10n = _ui_utils.NullL10n\n        }) {\n          this.pageDiv = pageDiv;\n          this.pdfPage = pdfPage;\n          this.linkService = linkService;\n          this.downloadManager = downloadManager;\n          this.imageResourcesPath = imageResourcesPath;\n          this.renderInteractiveForms = renderInteractiveForms;\n          this.l10n = l10n;\n          this.div = null;\n          this._cancelled = false;\n        }\n\n        render(viewport, intent = \"display\") {\n          this.pdfPage.getAnnotations({\n            intent\n          }).then(annotations => {\n            if (this._cancelled) {\n              return;\n            }\n\n            const parameters = {\n              viewport: viewport.clone({\n                dontFlip: true\n              }),\n              div: this.div,\n              annotations,\n              page: this.pdfPage,\n              imageResourcesPath: this.imageResourcesPath,\n              renderInteractiveForms: this.renderInteractiveForms,\n              linkService: this.linkService,\n              downloadManager: this.downloadManager\n            };\n\n            if (this.div) {\n              _pdfjsLib.AnnotationLayer.update(parameters);\n            } else {\n              if (annotations.length === 0) {\n                return;\n              }\n\n              this.div = document.createElement(\"div\");\n              this.div.className = \"annotationLayer\";\n              this.pageDiv.appendChild(this.div);\n              parameters.div = this.div;\n\n              _pdfjsLib.AnnotationLayer.render(parameters);\n\n              this.l10n.translate(this.div);\n            }\n          });\n        }\n\n        cancel() {\n          this._cancelled = true;\n        }\n\n        hide() {\n          if (!this.div) {\n            return;\n          }\n\n          this.div.setAttribute(\"hidden\", \"true\");\n        }\n\n      }\n\n      exports.AnnotationLayerBuilder = AnnotationLayerBuilder;\n\n      class DefaultAnnotationLayerFactory {\n        createAnnotationLayerBuilder(pageDiv, pdfPage, imageResourcesPath = \"\", renderInteractiveForms = false, l10n = _ui_utils.NullL10n) {\n          return new AnnotationLayerBuilder({\n            pageDiv,\n            pdfPage,\n            imageResourcesPath,\n            renderInteractiveForms,\n            linkService: new _pdf_link_service.SimpleLinkService(),\n            l10n\n          });\n        }\n\n      }\n\n      exports.DefaultAnnotationLayerFactory = DefaultAnnotationLayerFactory;\n      /***/\n    },\n    /* 2 */\n\n    /***/\n    function (module, exports, __w_pdfjs_require__) {\n      \"use strict\";\n\n      let pdfjsLib;\n\n      if (typeof window !== \"undefined\" && window[\"pdfjs-dist/build/pdf\"]) {\n        pdfjsLib = window[\"pdfjs-dist/build/pdf\"];\n      } else {\n        pdfjsLib = require(\"../build/pdf.js\");\n      }\n\n      module.exports = pdfjsLib;\n      /***/\n    },\n    /* 3 */\n\n    /***/\n    function (module, exports, __w_pdfjs_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.isValidRotation = isValidRotation;\n      exports.isValidScrollMode = isValidScrollMode;\n      exports.isValidSpreadMode = isValidSpreadMode;\n      exports.isPortraitOrientation = isPortraitOrientation;\n      exports.clamp = clamp;\n      exports.getPDFFileNameFromURL = getPDFFileNameFromURL;\n      exports.noContextMenuHandler = noContextMenuHandler;\n      exports.parseQueryString = parseQueryString;\n      exports.backtrackBeforeAllVisibleElements = backtrackBeforeAllVisibleElements;\n      exports.getVisibleElements = getVisibleElements;\n      exports.roundToDivide = roundToDivide;\n      exports.getPageSizeInches = getPageSizeInches;\n      exports.approximateFraction = approximateFraction;\n      exports.getOutputScale = getOutputScale;\n      exports.scrollIntoView = scrollIntoView;\n      exports.watchScroll = watchScroll;\n      exports.binarySearchFirstItem = binarySearchFirstItem;\n      exports.normalizeWheelEventDelta = normalizeWheelEventDelta;\n      exports.waitOnEventOrTimeout = waitOnEventOrTimeout;\n      exports.moveToEndOfArray = moveToEndOfArray;\n      exports.WaitOnType = exports.animationStarted = exports.ProgressBar = exports.EventBus = exports.NullL10n = exports.SpreadMode = exports.ScrollMode = exports.TextLayerMode = exports.RendererType = exports.PresentationModeState = exports.VERTICAL_PADDING = exports.SCROLLBAR_PADDING = exports.MAX_AUTO_SCALE = exports.UNKNOWN_SCALE = exports.MAX_SCALE = exports.MIN_SCALE = exports.DEFAULT_SCALE = exports.DEFAULT_SCALE_VALUE = exports.CSS_UNITS = exports.AutoPrintRegExp = void 0;\n      const CSS_UNITS = 96.0 / 72.0;\n      exports.CSS_UNITS = CSS_UNITS;\n      const DEFAULT_SCALE_VALUE = \"auto\";\n      exports.DEFAULT_SCALE_VALUE = DEFAULT_SCALE_VALUE;\n      const DEFAULT_SCALE = 1.0;\n      exports.DEFAULT_SCALE = DEFAULT_SCALE;\n      const MIN_SCALE = 0.1;\n      exports.MIN_SCALE = MIN_SCALE;\n      const MAX_SCALE = 10.0;\n      exports.MAX_SCALE = MAX_SCALE;\n      const UNKNOWN_SCALE = 0;\n      exports.UNKNOWN_SCALE = UNKNOWN_SCALE;\n      const MAX_AUTO_SCALE = 1.25;\n      exports.MAX_AUTO_SCALE = MAX_AUTO_SCALE;\n      const SCROLLBAR_PADDING = 40;\n      exports.SCROLLBAR_PADDING = SCROLLBAR_PADDING;\n      const VERTICAL_PADDING = 5;\n      exports.VERTICAL_PADDING = VERTICAL_PADDING;\n      const PresentationModeState = {\n        UNKNOWN: 0,\n        NORMAL: 1,\n        CHANGING: 2,\n        FULLSCREEN: 3\n      };\n      exports.PresentationModeState = PresentationModeState;\n      const RendererType = {\n        CANVAS: \"canvas\",\n        SVG: \"svg\"\n      };\n      exports.RendererType = RendererType;\n      const TextLayerMode = {\n        DISABLE: 0,\n        ENABLE: 1,\n        ENABLE_ENHANCE: 2\n      };\n      exports.TextLayerMode = TextLayerMode;\n      const ScrollMode = {\n        UNKNOWN: -1,\n        VERTICAL: 0,\n        HORIZONTAL: 1,\n        WRAPPED: 2\n      };\n      exports.ScrollMode = ScrollMode;\n      const SpreadMode = {\n        UNKNOWN: -1,\n        NONE: 0,\n        ODD: 1,\n        EVEN: 2\n      };\n      exports.SpreadMode = SpreadMode;\n      const AutoPrintRegExp = /\\bprint\\s*\\(/;\n      exports.AutoPrintRegExp = AutoPrintRegExp;\n\n      function formatL10nValue(text, args) {\n        if (!args) {\n          return text;\n        }\n\n        return text.replace(/\\{\\{\\s*(\\w+)\\s*\\}\\}/g, (all, name) => {\n          return name in args ? args[name] : \"{{\" + name + \"}}\";\n        });\n      }\n\n      const NullL10n = {\n        async getLanguage() {\n          return \"en-us\";\n        },\n\n        async getDirection() {\n          return \"ltr\";\n        },\n\n        async get(property, args, fallback) {\n          return formatL10nValue(fallback, args);\n        },\n\n        async translate(element) {}\n\n      };\n      exports.NullL10n = NullL10n;\n\n      function getOutputScale(ctx) {\n        const devicePixelRatio = window.devicePixelRatio || 1;\n        const backingStoreRatio = ctx.webkitBackingStorePixelRatio || ctx.mozBackingStorePixelRatio || ctx.msBackingStorePixelRatio || ctx.oBackingStorePixelRatio || ctx.backingStorePixelRatio || 1;\n        const pixelRatio = devicePixelRatio / backingStoreRatio;\n        return {\n          sx: pixelRatio,\n          sy: pixelRatio,\n          scaled: pixelRatio !== 1\n        };\n      }\n\n      function scrollIntoView(element, spot, skipOverflowHiddenElements = false) {\n        let parent = element.offsetParent;\n\n        if (!parent) {\n          console.error(\"offsetParent is not set -- cannot scroll\");\n          return;\n        }\n\n        let offsetY = element.offsetTop + element.clientTop;\n        let offsetX = element.offsetLeft + element.clientLeft;\n\n        while (parent.clientHeight === parent.scrollHeight && parent.clientWidth === parent.scrollWidth || skipOverflowHiddenElements && getComputedStyle(parent).overflow === \"hidden\") {\n          if (parent.dataset._scaleY) {\n            offsetY /= parent.dataset._scaleY;\n            offsetX /= parent.dataset._scaleX;\n          }\n\n          offsetY += parent.offsetTop;\n          offsetX += parent.offsetLeft;\n          parent = parent.offsetParent;\n\n          if (!parent) {\n            return;\n          }\n        }\n\n        if (spot) {\n          if (spot.top !== undefined) {\n            offsetY += spot.top;\n          }\n\n          if (spot.left !== undefined) {\n            offsetX += spot.left;\n            parent.scrollLeft = offsetX;\n          }\n        }\n\n        parent.scrollTop = offsetY;\n      }\n\n      function watchScroll(viewAreaElement, callback) {\n        const debounceScroll = function (evt) {\n          if (rAF) {\n            return;\n          }\n\n          rAF = window.requestAnimationFrame(function viewAreaElementScrolled() {\n            rAF = null;\n            const currentX = viewAreaElement.scrollLeft;\n            const lastX = state.lastX;\n\n            if (currentX !== lastX) {\n              state.right = currentX > lastX;\n            }\n\n            state.lastX = currentX;\n            const currentY = viewAreaElement.scrollTop;\n            const lastY = state.lastY;\n\n            if (currentY !== lastY) {\n              state.down = currentY > lastY;\n            }\n\n            state.lastY = currentY;\n            callback(state);\n          });\n        };\n\n        const state = {\n          right: true,\n          down: true,\n          lastX: viewAreaElement.scrollLeft,\n          lastY: viewAreaElement.scrollTop,\n          _eventHandler: debounceScroll\n        };\n        let rAF = null;\n        viewAreaElement.addEventListener(\"scroll\", debounceScroll, true);\n        return state;\n      }\n\n      function parseQueryString(query) {\n        const parts = query.split(\"&\");\n        const params = Object.create(null);\n\n        for (let i = 0, ii = parts.length; i < ii; ++i) {\n          const param = parts[i].split(\"=\");\n          const key = param[0].toLowerCase();\n          const value = param.length > 1 ? param[1] : null;\n          params[decodeURIComponent(key)] = decodeURIComponent(value);\n        }\n\n        return params;\n      }\n\n      function binarySearchFirstItem(items, condition) {\n        let minIndex = 0;\n        let maxIndex = items.length - 1;\n\n        if (maxIndex < 0 || !condition(items[maxIndex])) {\n          return items.length;\n        }\n\n        if (condition(items[minIndex])) {\n          return minIndex;\n        }\n\n        while (minIndex < maxIndex) {\n          const currentIndex = minIndex + maxIndex >> 1;\n          const currentItem = items[currentIndex];\n\n          if (condition(currentItem)) {\n            maxIndex = currentIndex;\n          } else {\n            minIndex = currentIndex + 1;\n          }\n        }\n\n        return minIndex;\n      }\n\n      function approximateFraction(x) {\n        if (Math.floor(x) === x) {\n          return [x, 1];\n        }\n\n        const xinv = 1 / x;\n        const limit = 8;\n\n        if (xinv > limit) {\n          return [1, limit];\n        } else if (Math.floor(xinv) === xinv) {\n          return [1, xinv];\n        }\n\n        const x_ = x > 1 ? xinv : x;\n        let a = 0,\n            b = 1,\n            c = 1,\n            d = 1;\n\n        while (true) {\n          const p = a + c,\n                q = b + d;\n\n          if (q > limit) {\n            break;\n          }\n\n          if (x_ <= p / q) {\n            c = p;\n            d = q;\n          } else {\n            a = p;\n            b = q;\n          }\n        }\n\n        let result;\n\n        if (x_ - a / b < c / d - x_) {\n          result = x_ === x ? [a, b] : [b, a];\n        } else {\n          result = x_ === x ? [c, d] : [d, c];\n        }\n\n        return result;\n      }\n\n      function roundToDivide(x, div) {\n        const r = x % div;\n        return r === 0 ? x : Math.round(x - r + div);\n      }\n\n      function getPageSizeInches({\n        view,\n        userUnit,\n        rotate\n      }) {\n        const [x1, y1, x2, y2] = view;\n        const changeOrientation = rotate % 180 !== 0;\n        const width = (x2 - x1) / 72 * userUnit;\n        const height = (y2 - y1) / 72 * userUnit;\n        return {\n          width: changeOrientation ? height : width,\n          height: changeOrientation ? width : height\n        };\n      }\n\n      function backtrackBeforeAllVisibleElements(index, views, top) {\n        if (index < 2) {\n          return index;\n        }\n\n        let elt = views[index].div;\n        let pageTop = elt.offsetTop + elt.clientTop;\n\n        if (pageTop >= top) {\n          elt = views[index - 1].div;\n          pageTop = elt.offsetTop + elt.clientTop;\n        }\n\n        for (let i = index - 2; i >= 0; --i) {\n          elt = views[i].div;\n\n          if (elt.offsetTop + elt.clientTop + elt.clientHeight <= pageTop) {\n            break;\n          }\n\n          index = i;\n        }\n\n        return index;\n      }\n\n      function getVisibleElements(scrollEl, views, sortByVisibility = false, horizontal = false) {\n        const top = scrollEl.scrollTop,\n              bottom = top + scrollEl.clientHeight;\n        const left = scrollEl.scrollLeft,\n              right = left + scrollEl.clientWidth;\n\n        function isElementBottomAfterViewTop(view) {\n          const element = view.div;\n          const elementBottom = element.offsetTop + element.clientTop + element.clientHeight;\n          return elementBottom > top;\n        }\n\n        function isElementRightAfterViewLeft(view) {\n          const element = view.div;\n          const elementRight = element.offsetLeft + element.clientLeft + element.clientWidth;\n          return elementRight > left;\n        }\n\n        const visible = [],\n              numViews = views.length;\n        let firstVisibleElementInd = numViews === 0 ? 0 : binarySearchFirstItem(views, horizontal ? isElementRightAfterViewLeft : isElementBottomAfterViewTop);\n\n        if (firstVisibleElementInd > 0 && firstVisibleElementInd < numViews && !horizontal) {\n          firstVisibleElementInd = backtrackBeforeAllVisibleElements(firstVisibleElementInd, views, top);\n        }\n\n        let lastEdge = horizontal ? right : -1;\n\n        for (let i = firstVisibleElementInd; i < numViews; i++) {\n          const view = views[i],\n                element = view.div;\n          const currentWidth = element.offsetLeft + element.clientLeft;\n          const currentHeight = element.offsetTop + element.clientTop;\n          const viewWidth = element.clientWidth,\n                viewHeight = element.clientHeight;\n          const viewRight = currentWidth + viewWidth;\n          const viewBottom = currentHeight + viewHeight;\n\n          if (lastEdge === -1) {\n            if (viewBottom >= bottom) {\n              lastEdge = viewBottom;\n            }\n          } else if ((horizontal ? currentWidth : currentHeight) > lastEdge) {\n            break;\n          }\n\n          if (viewBottom <= top || currentHeight >= bottom || viewRight <= left || currentWidth >= right) {\n            continue;\n          }\n\n          const hiddenHeight = Math.max(0, top - currentHeight) + Math.max(0, viewBottom - bottom);\n          const hiddenWidth = Math.max(0, left - currentWidth) + Math.max(0, viewRight - right);\n          const percent = (viewHeight - hiddenHeight) * (viewWidth - hiddenWidth) * 100 / viewHeight / viewWidth | 0;\n          visible.push({\n            id: view.id,\n            x: currentWidth,\n            y: currentHeight,\n            view,\n            percent\n          });\n        }\n\n        const first = visible[0],\n              last = visible[visible.length - 1];\n\n        if (sortByVisibility) {\n          visible.sort(function (a, b) {\n            const pc = a.percent - b.percent;\n\n            if (Math.abs(pc) > 0.001) {\n              return -pc;\n            }\n\n            return a.id - b.id;\n          });\n        }\n\n        return {\n          first,\n          last,\n          views: visible\n        };\n      }\n\n      function noContextMenuHandler(evt) {\n        evt.preventDefault();\n      }\n\n      function isDataSchema(url) {\n        let i = 0;\n        const ii = url.length;\n\n        while (i < ii && url[i].trim() === \"\") {\n          i++;\n        }\n\n        return url.substring(i, i + 5).toLowerCase() === \"data:\";\n      }\n\n      function getPDFFileNameFromURL(url, defaultFilename = \"document.pdf\") {\n        if (typeof url !== \"string\") {\n          return defaultFilename;\n        }\n\n        if (isDataSchema(url)) {\n          console.warn(\"getPDFFileNameFromURL: \" + 'ignoring \"data:\" URL for performance reasons.');\n          return defaultFilename;\n        }\n\n        const reURI = /^(?:(?:[^:]+:)?\\/\\/[^\\/]+)?([^?#]*)(\\?[^#]*)?(#.*)?$/;\n        const reFilename = /[^\\/?#=]+\\.pdf\\b(?!.*\\.pdf\\b)/i;\n        const splitURI = reURI.exec(url);\n        let suggestedFilename = reFilename.exec(splitURI[1]) || reFilename.exec(splitURI[2]) || reFilename.exec(splitURI[3]);\n\n        if (suggestedFilename) {\n          suggestedFilename = suggestedFilename[0];\n\n          if (suggestedFilename.includes(\"%\")) {\n            try {\n              suggestedFilename = reFilename.exec(decodeURIComponent(suggestedFilename))[0];\n            } catch (ex) {}\n          }\n        }\n\n        return suggestedFilename || defaultFilename;\n      }\n\n      function normalizeWheelEventDelta(evt) {\n        let delta = Math.sqrt(evt.deltaX * evt.deltaX + evt.deltaY * evt.deltaY);\n        const angle = Math.atan2(evt.deltaY, evt.deltaX);\n\n        if (-0.25 * Math.PI < angle && angle < 0.75 * Math.PI) {\n          delta = -delta;\n        }\n\n        const MOUSE_DOM_DELTA_PIXEL_MODE = 0;\n        const MOUSE_DOM_DELTA_LINE_MODE = 1;\n        const MOUSE_PIXELS_PER_LINE = 30;\n        const MOUSE_LINES_PER_PAGE = 30;\n\n        if (evt.deltaMode === MOUSE_DOM_DELTA_PIXEL_MODE) {\n          delta /= MOUSE_PIXELS_PER_LINE * MOUSE_LINES_PER_PAGE;\n        } else if (evt.deltaMode === MOUSE_DOM_DELTA_LINE_MODE) {\n          delta /= MOUSE_LINES_PER_PAGE;\n        }\n\n        return delta;\n      }\n\n      function isValidRotation(angle) {\n        return Number.isInteger(angle) && angle % 90 === 0;\n      }\n\n      function isValidScrollMode(mode) {\n        return Number.isInteger(mode) && Object.values(ScrollMode).includes(mode) && mode !== ScrollMode.UNKNOWN;\n      }\n\n      function isValidSpreadMode(mode) {\n        return Number.isInteger(mode) && Object.values(SpreadMode).includes(mode) && mode !== SpreadMode.UNKNOWN;\n      }\n\n      function isPortraitOrientation(size) {\n        return size.width <= size.height;\n      }\n\n      const WaitOnType = {\n        EVENT: \"event\",\n        TIMEOUT: \"timeout\"\n      };\n      exports.WaitOnType = WaitOnType;\n\n      function waitOnEventOrTimeout({\n        target,\n        name,\n        delay = 0\n      }) {\n        return new Promise(function (resolve, reject) {\n          if (typeof target !== \"object\" || !(name && typeof name === \"string\") || !(Number.isInteger(delay) && delay >= 0)) {\n            throw new Error(\"waitOnEventOrTimeout - invalid parameters.\");\n          }\n\n          function handler(type) {\n            if (target instanceof EventBus) {\n              target._off(name, eventHandler);\n            } else {\n              target.removeEventListener(name, eventHandler);\n            }\n\n            if (timeout) {\n              clearTimeout(timeout);\n            }\n\n            resolve(type);\n          }\n\n          const eventHandler = handler.bind(null, WaitOnType.EVENT);\n\n          if (target instanceof EventBus) {\n            target._on(name, eventHandler);\n          } else {\n            target.addEventListener(name, eventHandler);\n          }\n\n          const timeoutHandler = handler.bind(null, WaitOnType.TIMEOUT);\n          const timeout = setTimeout(timeoutHandler, delay);\n        });\n      }\n\n      const animationStarted = new Promise(function (resolve) {\n        window.requestAnimationFrame(resolve);\n      });\n      exports.animationStarted = animationStarted;\n\n      function dispatchDOMEvent(eventName, args = null) {\n        throw new Error(\"Not implemented: dispatchDOMEvent\");\n      }\n\n      class EventBus {\n        constructor(options) {\n          this._listeners = Object.create(null);\n        }\n\n        on(eventName, listener) {\n          this._on(eventName, listener, {\n            external: true\n          });\n        }\n\n        off(eventName, listener) {\n          this._off(eventName, listener, {\n            external: true\n          });\n        }\n\n        dispatch(eventName) {\n          const eventListeners = this._listeners[eventName];\n\n          if (!eventListeners || eventListeners.length === 0) {\n            return;\n          }\n\n          const args = Array.prototype.slice.call(arguments, 1);\n          let externalListeners;\n          eventListeners.slice(0).forEach(function ({\n            listener,\n            external\n          }) {\n            if (external) {\n              if (!externalListeners) {\n                externalListeners = [];\n              }\n\n              externalListeners.push(listener);\n              return;\n            }\n\n            listener.apply(null, args);\n          });\n\n          if (externalListeners) {\n            externalListeners.forEach(function (listener) {\n              listener.apply(null, args);\n            });\n            externalListeners = null;\n          }\n        }\n\n        _on(eventName, listener, options = null) {\n          let eventListeners = this._listeners[eventName];\n\n          if (!eventListeners) {\n            this._listeners[eventName] = eventListeners = [];\n          }\n\n          eventListeners.push({\n            listener,\n            external: (options && options.external) === true\n          });\n        }\n\n        _off(eventName, listener, options = null) {\n          const eventListeners = this._listeners[eventName];\n\n          if (!eventListeners) {\n            return;\n          }\n\n          for (let i = 0, ii = eventListeners.length; i < ii; i++) {\n            if (eventListeners[i].listener === listener) {\n              eventListeners.splice(i, 1);\n              return;\n            }\n          }\n        }\n\n      }\n\n      exports.EventBus = EventBus;\n\n      function clamp(v, min, max) {\n        return Math.min(Math.max(v, min), max);\n      }\n\n      class ProgressBar {\n        constructor(id, {\n          height,\n          width,\n          units\n        } = {}) {\n          this.visible = true;\n          this.div = document.querySelector(id + \" .progress\");\n          this.bar = this.div.parentNode;\n          this.height = height || 100;\n          this.width = width || 100;\n          this.units = units || \"%\";\n          this.div.style.height = this.height + this.units;\n          this.percent = 0;\n        }\n\n        _updateBar() {\n          if (this._indeterminate) {\n            this.div.classList.add(\"indeterminate\");\n            this.div.style.width = this.width + this.units;\n            return;\n          }\n\n          this.div.classList.remove(\"indeterminate\");\n          const progressSize = this.width * this._percent / 100;\n          this.div.style.width = progressSize + this.units;\n        }\n\n        get percent() {\n          return this._percent;\n        }\n\n        set percent(val) {\n          this._indeterminate = isNaN(val);\n          this._percent = clamp(val, 0, 100);\n\n          this._updateBar();\n        }\n\n        setWidth(viewer) {\n          if (!viewer) {\n            return;\n          }\n\n          const container = viewer.parentNode;\n          const scrollbarWidth = container.offsetWidth - viewer.offsetWidth;\n\n          if (scrollbarWidth > 0) {\n            this.bar.style.width = `calc(100% - ${scrollbarWidth}px)`;\n          }\n        }\n\n        hide() {\n          if (!this.visible) {\n            return;\n          }\n\n          this.visible = false;\n          this.bar.classList.add(\"hidden\");\n          document.body.classList.remove(\"loadingInProgress\");\n        }\n\n        show() {\n          if (this.visible) {\n            return;\n          }\n\n          this.visible = true;\n          document.body.classList.add(\"loadingInProgress\");\n          this.bar.classList.remove(\"hidden\");\n        }\n\n      }\n\n      exports.ProgressBar = ProgressBar;\n\n      function moveToEndOfArray(arr, condition) {\n        const moved = [],\n              len = arr.length;\n        let write = 0;\n\n        for (let read = 0; read < len; ++read) {\n          if (condition(arr[read])) {\n            moved.push(arr[read]);\n          } else {\n            arr[write] = arr[read];\n            ++write;\n          }\n        }\n\n        for (let read = 0; write < len; ++read, ++write) {\n          arr[write] = moved[read];\n        }\n      }\n      /***/\n\n    },\n    /* 4 */\n\n    /***/\n    function (module, exports, __w_pdfjs_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.SimpleLinkService = exports.PDFLinkService = void 0;\n\n      var _ui_utils = __w_pdfjs_require__(3);\n\n      class PDFLinkService {\n        constructor({\n          eventBus,\n          externalLinkTarget = null,\n          externalLinkRel = null,\n          externalLinkEnabled = true,\n          ignoreDestinationZoom = false\n        } = {}) {\n          this.eventBus = eventBus;\n          this.externalLinkTarget = externalLinkTarget;\n          this.externalLinkRel = externalLinkRel;\n          this.externalLinkEnabled = externalLinkEnabled;\n          this._ignoreDestinationZoom = ignoreDestinationZoom;\n          this.baseUrl = null;\n          this.pdfDocument = null;\n          this.pdfViewer = null;\n          this.pdfHistory = null;\n          this._pagesRefCache = null;\n        }\n\n        setDocument(pdfDocument, baseUrl = null) {\n          this.baseUrl = baseUrl;\n          this.pdfDocument = pdfDocument;\n          this._pagesRefCache = Object.create(null);\n        }\n\n        setViewer(pdfViewer) {\n          this.pdfViewer = pdfViewer;\n        }\n\n        setHistory(pdfHistory) {\n          this.pdfHistory = pdfHistory;\n        }\n\n        get pagesCount() {\n          return this.pdfDocument ? this.pdfDocument.numPages : 0;\n        }\n\n        get page() {\n          return this.pdfViewer.currentPageNumber;\n        }\n\n        set page(value) {\n          this.pdfViewer.currentPageNumber = value;\n        }\n\n        get rotation() {\n          return this.pdfViewer.pagesRotation;\n        }\n\n        set rotation(value) {\n          this.pdfViewer.pagesRotation = value;\n        }\n\n        navigateTo(dest) {\n          const goToDestination = ({\n            namedDest,\n            explicitDest\n          }) => {\n            const destRef = explicitDest[0];\n            let pageNumber;\n\n            if (destRef instanceof Object) {\n              pageNumber = this._cachedPageNumber(destRef);\n\n              if (pageNumber === null) {\n                this.pdfDocument.getPageIndex(destRef).then(pageIndex => {\n                  this.cachePageRef(pageIndex + 1, destRef);\n                  goToDestination({\n                    namedDest,\n                    explicitDest\n                  });\n                }).catch(() => {\n                  console.error(`PDFLinkService.navigateTo: \"${destRef}\" is not ` + `a valid page reference, for dest=\"${dest}\".`);\n                });\n                return;\n              }\n            } else if (Number.isInteger(destRef)) {\n              pageNumber = destRef + 1;\n            } else {\n              console.error(`PDFLinkService.navigateTo: \"${destRef}\" is not ` + `a valid destination reference, for dest=\"${dest}\".`);\n              return;\n            }\n\n            if (!pageNumber || pageNumber < 1 || pageNumber > this.pagesCount) {\n              console.error(`PDFLinkService.navigateTo: \"${pageNumber}\" is not ` + `a valid page number, for dest=\"${dest}\".`);\n              return;\n            }\n\n            if (this.pdfHistory) {\n              this.pdfHistory.pushCurrentPosition();\n              this.pdfHistory.push({\n                namedDest,\n                explicitDest,\n                pageNumber\n              });\n            }\n\n            this.pdfViewer.scrollPageIntoView({\n              pageNumber,\n              destArray: explicitDest,\n              ignoreDestinationZoom: this._ignoreDestinationZoom\n            });\n          };\n\n          new Promise((resolve, reject) => {\n            if (typeof dest === \"string\") {\n              this.pdfDocument.getDestination(dest).then(destArray => {\n                resolve({\n                  namedDest: dest,\n                  explicitDest: destArray\n                });\n              });\n              return;\n            }\n\n            resolve({\n              namedDest: \"\",\n              explicitDest: dest\n            });\n          }).then(data => {\n            if (!Array.isArray(data.explicitDest)) {\n              console.error(`PDFLinkService.navigateTo: \"${data.explicitDest}\" is` + ` not a valid destination array, for dest=\"${dest}\".`);\n              return;\n            }\n\n            goToDestination(data);\n          });\n        }\n\n        getDestinationHash(dest) {\n          if (typeof dest === \"string\") {\n            return this.getAnchorUrl(\"#\" + escape(dest));\n          }\n\n          if (Array.isArray(dest)) {\n            const str = JSON.stringify(dest);\n            return this.getAnchorUrl(\"#\" + escape(str));\n          }\n\n          return this.getAnchorUrl(\"\");\n        }\n\n        getAnchorUrl(anchor) {\n          return (this.baseUrl || \"\") + anchor;\n        }\n\n        setHash(hash) {\n          let pageNumber, dest;\n\n          if (hash.includes(\"=\")) {\n            const params = (0, _ui_utils.parseQueryString)(hash);\n\n            if (\"search\" in params) {\n              this.eventBus.dispatch(\"findfromurlhash\", {\n                source: this,\n                query: params.search.replace(/\"/g, \"\"),\n                phraseSearch: params.phrase === \"true\"\n              });\n            }\n\n            if (\"page\" in params) {\n              pageNumber = params.page | 0 || 1;\n            }\n\n            if (\"zoom\" in params) {\n              const zoomArgs = params.zoom.split(\",\");\n              const zoomArg = zoomArgs[0];\n              const zoomArgNumber = parseFloat(zoomArg);\n\n              if (!zoomArg.includes(\"Fit\")) {\n                dest = [null, {\n                  name: \"XYZ\"\n                }, zoomArgs.length > 1 ? zoomArgs[1] | 0 : null, zoomArgs.length > 2 ? zoomArgs[2] | 0 : null, zoomArgNumber ? zoomArgNumber / 100 : zoomArg];\n              } else {\n                if (zoomArg === \"Fit\" || zoomArg === \"FitB\") {\n                  dest = [null, {\n                    name: zoomArg\n                  }];\n                } else if (zoomArg === \"FitH\" || zoomArg === \"FitBH\" || zoomArg === \"FitV\" || zoomArg === \"FitBV\") {\n                  dest = [null, {\n                    name: zoomArg\n                  }, zoomArgs.length > 1 ? zoomArgs[1] | 0 : null];\n                } else if (zoomArg === \"FitR\") {\n                  if (zoomArgs.length !== 5) {\n                    console.error('PDFLinkService.setHash: Not enough parameters for \"FitR\".');\n                  } else {\n                    dest = [null, {\n                      name: zoomArg\n                    }, zoomArgs[1] | 0, zoomArgs[2] | 0, zoomArgs[3] | 0, zoomArgs[4] | 0];\n                  }\n                } else {\n                  console.error(`PDFLinkService.setHash: \"${zoomArg}\" is not ` + \"a valid zoom value.\");\n                }\n              }\n            }\n\n            if (dest) {\n              this.pdfViewer.scrollPageIntoView({\n                pageNumber: pageNumber || this.page,\n                destArray: dest,\n                allowNegativeOffset: true\n              });\n            } else if (pageNumber) {\n              this.page = pageNumber;\n            }\n\n            if (\"pagemode\" in params) {\n              this.eventBus.dispatch(\"pagemode\", {\n                source: this,\n                mode: params.pagemode\n              });\n            }\n\n            if (\"nameddest\" in params) {\n              this.navigateTo(params.nameddest);\n            }\n          } else {\n            dest = unescape(hash);\n\n            try {\n              dest = JSON.parse(dest);\n\n              if (!Array.isArray(dest)) {\n                dest = dest.toString();\n              }\n            } catch (ex) {}\n\n            if (typeof dest === \"string\" || isValidExplicitDestination(dest)) {\n              this.navigateTo(dest);\n              return;\n            }\n\n            console.error(`PDFLinkService.setHash: \"${unescape(hash)}\" is not ` + \"a valid destination.\");\n          }\n        }\n\n        executeNamedAction(action) {\n          switch (action) {\n            case \"GoBack\":\n              if (this.pdfHistory) {\n                this.pdfHistory.back();\n              }\n\n              break;\n\n            case \"GoForward\":\n              if (this.pdfHistory) {\n                this.pdfHistory.forward();\n              }\n\n              break;\n\n            case \"NextPage\":\n              if (this.page < this.pagesCount) {\n                this.page++;\n              }\n\n              break;\n\n            case \"PrevPage\":\n              if (this.page > 1) {\n                this.page--;\n              }\n\n              break;\n\n            case \"LastPage\":\n              this.page = this.pagesCount;\n              break;\n\n            case \"FirstPage\":\n              this.page = 1;\n              break;\n\n            default:\n              break;\n          }\n\n          this.eventBus.dispatch(\"namedaction\", {\n            source: this,\n            action\n          });\n        }\n\n        cachePageRef(pageNum, pageRef) {\n          if (!pageRef) {\n            return;\n          }\n\n          const refStr = pageRef.gen === 0 ? `${pageRef.num}R` : `${pageRef.num}R${pageRef.gen}`;\n          this._pagesRefCache[refStr] = pageNum;\n        }\n\n        _cachedPageNumber(pageRef) {\n          const refStr = pageRef.gen === 0 ? `${pageRef.num}R` : `${pageRef.num}R${pageRef.gen}`;\n          return this._pagesRefCache && this._pagesRefCache[refStr] || null;\n        }\n\n        isPageVisible(pageNumber) {\n          return this.pdfViewer.isPageVisible(pageNumber);\n        }\n\n      }\n\n      exports.PDFLinkService = PDFLinkService;\n\n      function isValidExplicitDestination(dest) {\n        if (!Array.isArray(dest)) {\n          return false;\n        }\n\n        const destLength = dest.length;\n\n        if (destLength < 2) {\n          return false;\n        }\n\n        const page = dest[0];\n\n        if (!(typeof page === \"object\" && Number.isInteger(page.num) && Number.isInteger(page.gen)) && !(Number.isInteger(page) && page >= 0)) {\n          return false;\n        }\n\n        const zoom = dest[1];\n\n        if (!(typeof zoom === \"object\" && typeof zoom.name === \"string\")) {\n          return false;\n        }\n\n        let allowNull = true;\n\n        switch (zoom.name) {\n          case \"XYZ\":\n            if (destLength !== 5) {\n              return false;\n            }\n\n            break;\n\n          case \"Fit\":\n          case \"FitB\":\n            return destLength === 2;\n\n          case \"FitH\":\n          case \"FitBH\":\n          case \"FitV\":\n          case \"FitBV\":\n            if (destLength !== 3) {\n              return false;\n            }\n\n            break;\n\n          case \"FitR\":\n            if (destLength !== 6) {\n              return false;\n            }\n\n            allowNull = false;\n            break;\n\n          default:\n            return false;\n        }\n\n        for (let i = 2; i < destLength; i++) {\n          const param = dest[i];\n\n          if (!(typeof param === \"number\" || allowNull && param === null)) {\n            return false;\n          }\n        }\n\n        return true;\n      }\n\n      class SimpleLinkService {\n        constructor() {\n          this.externalLinkTarget = null;\n          this.externalLinkRel = null;\n          this.externalLinkEnabled = true;\n          this._ignoreDestinationZoom = false;\n        }\n\n        get pagesCount() {\n          return 0;\n        }\n\n        get page() {\n          return 0;\n        }\n\n        set page(value) {}\n\n        get rotation() {\n          return 0;\n        }\n\n        set rotation(value) {}\n\n        navigateTo(dest) {}\n\n        getDestinationHash(dest) {\n          return \"#\";\n        }\n\n        getAnchorUrl(hash) {\n          return \"#\";\n        }\n\n        setHash(hash) {}\n\n        executeNamedAction(action) {}\n\n        cachePageRef(pageNum, pageRef) {}\n\n        isPageVisible(pageNumber) {\n          return true;\n        }\n\n      }\n\n      exports.SimpleLinkService = SimpleLinkService;\n      /***/\n    },\n    /* 5 */\n\n    /***/\n    function (module, exports, __w_pdfjs_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.DefaultTextLayerFactory = exports.TextLayerBuilder = void 0;\n\n      var _pdfjsLib = __w_pdfjs_require__(2);\n\n      const EXPAND_DIVS_TIMEOUT = 300;\n\n      class TextLayerBuilder {\n        constructor({\n          textLayerDiv,\n          eventBus,\n          pageIndex,\n          viewport,\n          findController = null,\n          enhanceTextSelection = false\n        }) {\n          this.textLayerDiv = textLayerDiv;\n          this.eventBus = eventBus;\n          this.textContent = null;\n          this.textContentItemsStr = [];\n          this.textContentStream = null;\n          this.renderingDone = false;\n          this.pageIdx = pageIndex;\n          this.pageNumber = this.pageIdx + 1;\n          this.matches = [];\n          this.viewport = viewport;\n          this.textDivs = [];\n          this.findController = findController;\n          this.textLayerRenderTask = null;\n          this.enhanceTextSelection = enhanceTextSelection;\n          this._onUpdateTextLayerMatches = null;\n\n          this._bindMouse();\n        }\n\n        _finishRendering() {\n          this.renderingDone = true;\n\n          if (!this.enhanceTextSelection) {\n            const endOfContent = document.createElement(\"div\");\n            endOfContent.className = \"endOfContent\";\n            this.textLayerDiv.appendChild(endOfContent);\n          }\n\n          this.eventBus.dispatch(\"textlayerrendered\", {\n            source: this,\n            pageNumber: this.pageNumber,\n            numTextDivs: this.textDivs.length\n          });\n        }\n\n        render(timeout = 0) {\n          if (!(this.textContent || this.textContentStream) || this.renderingDone) {\n            return;\n          }\n\n          this.cancel();\n          this.textDivs = [];\n          const textLayerFrag = document.createDocumentFragment();\n          this.textLayerRenderTask = (0, _pdfjsLib.renderTextLayer)({\n            textContent: this.textContent,\n            textContentStream: this.textContentStream,\n            container: textLayerFrag,\n            viewport: this.viewport,\n            textDivs: this.textDivs,\n            textContentItemsStr: this.textContentItemsStr,\n            timeout,\n            enhanceTextSelection: this.enhanceTextSelection\n          });\n          this.textLayerRenderTask.promise.then(() => {\n            this.textLayerDiv.appendChild(textLayerFrag);\n\n            this._finishRendering();\n\n            this._updateMatches();\n          }, function (reason) {});\n\n          if (!this._onUpdateTextLayerMatches) {\n            this._onUpdateTextLayerMatches = evt => {\n              if (evt.pageIndex === this.pageIdx || evt.pageIndex === -1) {\n                this._updateMatches();\n              }\n            };\n\n            this.eventBus._on(\"updatetextlayermatches\", this._onUpdateTextLayerMatches);\n          }\n        }\n\n        cancel() {\n          if (this.textLayerRenderTask) {\n            this.textLayerRenderTask.cancel();\n            this.textLayerRenderTask = null;\n          }\n\n          if (this._onUpdateTextLayerMatches) {\n            this.eventBus._off(\"updatetextlayermatches\", this._onUpdateTextLayerMatches);\n\n            this._onUpdateTextLayerMatches = null;\n          }\n        }\n\n        setTextContentStream(readableStream) {\n          this.cancel();\n          this.textContentStream = readableStream;\n        }\n\n        setTextContent(textContent) {\n          this.cancel();\n          this.textContent = textContent;\n        }\n\n        _convertMatches(matches, matchesLength) {\n          if (!matches) {\n            return [];\n          }\n\n          const {\n            findController,\n            textContentItemsStr\n          } = this;\n          let i = 0,\n              iIndex = 0;\n          const end = textContentItemsStr.length - 1;\n          const queryLen = findController.state.query.length;\n          const result = [];\n\n          for (let m = 0, mm = matches.length; m < mm; m++) {\n            let matchIdx = matches[m];\n\n            while (i !== end && matchIdx >= iIndex + textContentItemsStr[i].length) {\n              iIndex += textContentItemsStr[i].length;\n              i++;\n            }\n\n            if (i === textContentItemsStr.length) {\n              console.error(\"Could not find a matching mapping\");\n            }\n\n            const match = {\n              begin: {\n                divIdx: i,\n                offset: matchIdx - iIndex\n              }\n            };\n\n            if (matchesLength) {\n              matchIdx += matchesLength[m];\n            } else {\n              matchIdx += queryLen;\n            }\n\n            while (i !== end && matchIdx > iIndex + textContentItemsStr[i].length) {\n              iIndex += textContentItemsStr[i].length;\n              i++;\n            }\n\n            match.end = {\n              divIdx: i,\n              offset: matchIdx - iIndex\n            };\n            result.push(match);\n          }\n\n          return result;\n        }\n\n        _renderMatches(matches) {\n          if (matches.length === 0) {\n            return;\n          }\n\n          const {\n            findController,\n            pageIdx,\n            textContentItemsStr,\n            textDivs\n          } = this;\n          const isSelectedPage = pageIdx === findController.selected.pageIdx;\n          const selectedMatchIdx = findController.selected.matchIdx;\n          const highlightAll = findController.state.highlightAll;\n          let prevEnd = null;\n          const infinity = {\n            divIdx: -1,\n            offset: undefined\n          };\n\n          function beginText(begin, className) {\n            const divIdx = begin.divIdx;\n            textDivs[divIdx].textContent = \"\";\n            appendTextToDiv(divIdx, 0, begin.offset, className);\n          }\n\n          function appendTextToDiv(divIdx, fromOffset, toOffset, className) {\n            const div = textDivs[divIdx];\n            const content = textContentItemsStr[divIdx].substring(fromOffset, toOffset);\n            const node = document.createTextNode(content);\n\n            if (className) {\n              const span = document.createElement(\"span\");\n              span.className = className;\n              span.appendChild(node);\n              div.appendChild(span);\n              return;\n            }\n\n            div.appendChild(node);\n          }\n\n          let i0 = selectedMatchIdx,\n              i1 = i0 + 1;\n\n          if (highlightAll) {\n            i0 = 0;\n            i1 = matches.length;\n          } else if (!isSelectedPage) {\n            return;\n          }\n\n          for (let i = i0; i < i1; i++) {\n            const match = matches[i];\n            const begin = match.begin;\n            const end = match.end;\n            const isSelected = isSelectedPage && i === selectedMatchIdx;\n            const highlightSuffix = isSelected ? \" selected\" : \"\";\n\n            if (isSelected) {\n              findController.scrollMatchIntoView({\n                element: textDivs[begin.divIdx],\n                pageIndex: pageIdx,\n                matchIndex: selectedMatchIdx\n              });\n            }\n\n            if (!prevEnd || begin.divIdx !== prevEnd.divIdx) {\n              if (prevEnd !== null) {\n                appendTextToDiv(prevEnd.divIdx, prevEnd.offset, infinity.offset);\n              }\n\n              beginText(begin);\n            } else {\n              appendTextToDiv(prevEnd.divIdx, prevEnd.offset, begin.offset);\n            }\n\n            if (begin.divIdx === end.divIdx) {\n              appendTextToDiv(begin.divIdx, begin.offset, end.offset, \"highlight\" + highlightSuffix);\n            } else {\n              appendTextToDiv(begin.divIdx, begin.offset, infinity.offset, \"highlight begin\" + highlightSuffix);\n\n              for (let n0 = begin.divIdx + 1, n1 = end.divIdx; n0 < n1; n0++) {\n                textDivs[n0].className = \"highlight middle\" + highlightSuffix;\n              }\n\n              beginText(end, \"highlight end\" + highlightSuffix);\n            }\n\n            prevEnd = end;\n          }\n\n          if (prevEnd) {\n            appendTextToDiv(prevEnd.divIdx, prevEnd.offset, infinity.offset);\n          }\n        }\n\n        _updateMatches() {\n          if (!this.renderingDone) {\n            return;\n          }\n\n          const {\n            findController,\n            matches,\n            pageIdx,\n            textContentItemsStr,\n            textDivs\n          } = this;\n          let clearedUntilDivIdx = -1;\n\n          for (let i = 0, ii = matches.length; i < ii; i++) {\n            const match = matches[i];\n            const begin = Math.max(clearedUntilDivIdx, match.begin.divIdx);\n\n            for (let n = begin, end = match.end.divIdx; n <= end; n++) {\n              const div = textDivs[n];\n              div.textContent = textContentItemsStr[n];\n              div.className = \"\";\n            }\n\n            clearedUntilDivIdx = match.end.divIdx + 1;\n          }\n\n          if (!findController || !findController.highlightMatches) {\n            return;\n          }\n\n          const pageMatches = findController.pageMatches[pageIdx] || null;\n          const pageMatchesLength = findController.pageMatchesLength[pageIdx] || null;\n          this.matches = this._convertMatches(pageMatches, pageMatchesLength);\n\n          this._renderMatches(this.matches);\n        }\n\n        _bindMouse() {\n          const div = this.textLayerDiv;\n          let expandDivsTimer = null;\n          div.addEventListener(\"mousedown\", evt => {\n            if (this.enhanceTextSelection && this.textLayerRenderTask) {\n              this.textLayerRenderTask.expandTextDivs(true);\n\n              if (expandDivsTimer) {\n                clearTimeout(expandDivsTimer);\n                expandDivsTimer = null;\n              }\n\n              return;\n            }\n\n            const end = div.querySelector(\".endOfContent\");\n\n            if (!end) {\n              return;\n            }\n\n            let adjustTop = evt.target !== div;\n            adjustTop = adjustTop && window.getComputedStyle(end).getPropertyValue(\"-moz-user-select\") !== \"none\";\n\n            if (adjustTop) {\n              const divBounds = div.getBoundingClientRect();\n              const r = Math.max(0, (evt.pageY - divBounds.top) / divBounds.height);\n              end.style.top = (r * 100).toFixed(2) + \"%\";\n            }\n\n            end.classList.add(\"active\");\n          });\n          div.addEventListener(\"mouseup\", () => {\n            if (this.enhanceTextSelection && this.textLayerRenderTask) {\n              expandDivsTimer = setTimeout(() => {\n                if (this.textLayerRenderTask) {\n                  this.textLayerRenderTask.expandTextDivs(false);\n                }\n\n                expandDivsTimer = null;\n              }, EXPAND_DIVS_TIMEOUT);\n              return;\n            }\n\n            const end = div.querySelector(\".endOfContent\");\n\n            if (!end) {\n              return;\n            }\n\n            end.style.top = \"\";\n            end.classList.remove(\"active\");\n          });\n        }\n\n      }\n\n      exports.TextLayerBuilder = TextLayerBuilder;\n\n      class DefaultTextLayerFactory {\n        createTextLayerBuilder(textLayerDiv, pageIndex, viewport, enhanceTextSelection = false, eventBus) {\n          return new TextLayerBuilder({\n            textLayerDiv,\n            pageIndex,\n            viewport,\n            enhanceTextSelection,\n            eventBus\n          });\n        }\n\n      }\n\n      exports.DefaultTextLayerFactory = DefaultTextLayerFactory;\n      /***/\n    },\n    /* 6 */\n\n    /***/\n    function (module, exports, __w_pdfjs_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.DownloadManager = void 0;\n\n      var _pdfjsLib = __w_pdfjs_require__(2);\n\n      var _viewer_compatibility = __w_pdfjs_require__(7);\n\n      ;\n      const DISABLE_CREATE_OBJECT_URL = _viewer_compatibility.viewerCompatibilityParams.disableCreateObjectURL || false;\n\n      function download(blobUrl, filename) {\n        const a = document.createElement(\"a\");\n\n        if (!a.click) {\n          throw new Error('DownloadManager: \"a.click()\" is not supported.');\n        }\n\n        a.href = blobUrl;\n        a.target = \"_parent\";\n\n        if (\"download\" in a) {\n          a.download = filename;\n        }\n\n        (document.body || document.documentElement).appendChild(a);\n        a.click();\n        a.remove();\n      }\n\n      class DownloadManager {\n        constructor({\n          disableCreateObjectURL = DISABLE_CREATE_OBJECT_URL\n        }) {\n          this.disableCreateObjectURL = disableCreateObjectURL;\n        }\n\n        downloadUrl(url, filename) {\n          if (!(0, _pdfjsLib.createValidAbsoluteUrl)(url, \"http://example.com\")) {\n            return;\n          }\n\n          download(url + \"#pdfjs.action=download\", filename);\n        }\n\n        downloadData(data, filename, contentType) {\n          if (navigator.msSaveBlob) {\n            navigator.msSaveBlob(new Blob([data], {\n              type: contentType\n            }), filename);\n            return;\n          }\n\n          const blobUrl = (0, _pdfjsLib.createObjectURL)(data, contentType, this.disableCreateObjectURL);\n          download(blobUrl, filename);\n        }\n\n        download(blob, url, filename) {\n          if (navigator.msSaveBlob) {\n            if (!navigator.msSaveBlob(blob, filename)) {\n              this.downloadUrl(url, filename);\n            }\n\n            return;\n          }\n\n          if (this.disableCreateObjectURL) {\n            this.downloadUrl(url, filename);\n            return;\n          }\n\n          const blobUrl = URL.createObjectURL(blob);\n          download(blobUrl, filename);\n        }\n\n      }\n\n      exports.DownloadManager = DownloadManager;\n      /***/\n    },\n    /* 7 */\n\n    /***/\n    function (module, exports, __w_pdfjs_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.viewerCompatibilityParams = void 0;\n      const compatibilityParams = Object.create(null);\n      {\n        const userAgent = typeof navigator !== \"undefined\" && navigator.userAgent || \"\";\n        const platform = typeof navigator !== \"undefined\" && navigator.platform || \"\";\n        const maxTouchPoints = typeof navigator !== \"undefined\" && navigator.maxTouchPoints || 1;\n        const isAndroid = /Android/.test(userAgent);\n        const isIE = /Trident/.test(userAgent);\n        const isIOS = /\\b(iPad|iPhone|iPod)(?=;)/.test(userAgent) || platform === \"MacIntel\" && maxTouchPoints > 1;\n        const isIOSChrome = /CriOS/.test(userAgent);\n\n        (function checkOnBlobSupport() {\n          if (isIE || isIOSChrome) {\n            compatibilityParams.disableCreateObjectURL = true;\n          }\n        })();\n\n        (function checkCanvasSizeLimitation() {\n          if (isIOS || isAndroid) {\n            compatibilityParams.maxCanvasPixels = 5242880;\n          }\n        })();\n      }\n      const viewerCompatibilityParams = Object.freeze(compatibilityParams);\n      exports.viewerCompatibilityParams = viewerCompatibilityParams;\n      /***/\n    },\n    /* 8 */\n\n    /***/\n    function (module, exports, __w_pdfjs_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.GenericL10n = void 0;\n\n      __w_pdfjs_require__(9);\n\n      const webL10n = document.webL10n;\n\n      class GenericL10n {\n        constructor(lang) {\n          this._lang = lang;\n          this._ready = new Promise((resolve, reject) => {\n            webL10n.setLanguage(lang, () => {\n              resolve(webL10n);\n            });\n          });\n        }\n\n        async getLanguage() {\n          const l10n = await this._ready;\n          return l10n.getLanguage();\n        }\n\n        async getDirection() {\n          const l10n = await this._ready;\n          return l10n.getDirection();\n        }\n\n        async get(property, args, fallback) {\n          const l10n = await this._ready;\n          return l10n.get(property, args, fallback);\n        }\n\n        async translate(element) {\n          const l10n = await this._ready;\n          return l10n.translate(element);\n        }\n\n      }\n\n      exports.GenericL10n = GenericL10n;\n      /***/\n    },\n    /* 9 */\n\n    /***/\n    function (module, exports, __w_pdfjs_require__) {\n      \"use strict\";\n\n      document.webL10n = function (window, document, undefined) {\n        var gL10nData = {};\n        var gTextData = '';\n        var gTextProp = 'textContent';\n        var gLanguage = '';\n        var gMacros = {};\n        var gReadyState = 'loading';\n        var gAsyncResourceLoading = true;\n\n        function getL10nResourceLinks() {\n          return document.querySelectorAll('link[type=\"application/l10n\"]');\n        }\n\n        function getL10nDictionary() {\n          var script = document.querySelector('script[type=\"application/l10n\"]');\n          return script ? JSON.parse(script.innerHTML) : null;\n        }\n\n        function getTranslatableChildren(element) {\n          return element ? element.querySelectorAll('*[data-l10n-id]') : [];\n        }\n\n        function getL10nAttributes(element) {\n          if (!element) return {};\n          var l10nId = element.getAttribute('data-l10n-id');\n          var l10nArgs = element.getAttribute('data-l10n-args');\n          var args = {};\n\n          if (l10nArgs) {\n            try {\n              args = JSON.parse(l10nArgs);\n            } catch (e) {\n              console.warn('could not parse arguments for #' + l10nId);\n            }\n          }\n\n          return {\n            id: l10nId,\n            args: args\n          };\n        }\n\n        function xhrLoadText(url, onSuccess, onFailure) {\n          onSuccess = onSuccess || function _onSuccess(data) {};\n\n          onFailure = onFailure || function _onFailure() {};\n\n          var xhr = new XMLHttpRequest();\n          xhr.open('GET', url, gAsyncResourceLoading);\n\n          if (xhr.overrideMimeType) {\n            xhr.overrideMimeType('text/plain; charset=utf-8');\n          }\n\n          xhr.onreadystatechange = function () {\n            if (xhr.readyState == 4) {\n              if (xhr.status == 200 || xhr.status === 0) {\n                onSuccess(xhr.responseText);\n              } else {\n                onFailure();\n              }\n            }\n          };\n\n          xhr.onerror = onFailure;\n          xhr.ontimeout = onFailure;\n\n          try {\n            xhr.send(null);\n          } catch (e) {\n            onFailure();\n          }\n        }\n\n        function parseResource(href, lang, successCallback, failureCallback) {\n          var baseURL = href.replace(/[^\\/]*$/, '') || './';\n\n          function evalString(text) {\n            if (text.lastIndexOf('\\\\') < 0) return text;\n            return text.replace(/\\\\\\\\/g, '\\\\').replace(/\\\\n/g, '\\n').replace(/\\\\r/g, '\\r').replace(/\\\\t/g, '\\t').replace(/\\\\b/g, '\\b').replace(/\\\\f/g, '\\f').replace(/\\\\{/g, '{').replace(/\\\\}/g, '}').replace(/\\\\\"/g, '\"').replace(/\\\\'/g, \"'\");\n          }\n\n          function parseProperties(text, parsedPropertiesCallback) {\n            var dictionary = {};\n            var reBlank = /^\\s*|\\s*$/;\n            var reComment = /^\\s*#|^\\s*$/;\n            var reSection = /^\\s*\\[(.*)\\]\\s*$/;\n            var reImport = /^\\s*@import\\s+url\\((.*)\\)\\s*$/i;\n            var reSplit = /^([^=\\s]*)\\s*=\\s*(.+)$/;\n\n            function parseRawLines(rawText, extendedSyntax, parsedRawLinesCallback) {\n              var entries = rawText.replace(reBlank, '').split(/[\\r\\n]+/);\n              var currentLang = '*';\n              var genericLang = lang.split('-', 1)[0];\n              var skipLang = false;\n              var match = '';\n\n              function nextEntry() {\n                while (true) {\n                  if (!entries.length) {\n                    parsedRawLinesCallback();\n                    return;\n                  }\n\n                  var line = entries.shift();\n                  if (reComment.test(line)) continue;\n\n                  if (extendedSyntax) {\n                    match = reSection.exec(line);\n\n                    if (match) {\n                      currentLang = match[1].toLowerCase();\n                      skipLang = currentLang !== '*' && currentLang !== lang && currentLang !== genericLang;\n                      continue;\n                    } else if (skipLang) {\n                      continue;\n                    }\n\n                    match = reImport.exec(line);\n\n                    if (match) {\n                      loadImport(baseURL + match[1], nextEntry);\n                      return;\n                    }\n                  }\n\n                  var tmp = line.match(reSplit);\n\n                  if (tmp && tmp.length == 3) {\n                    dictionary[tmp[1]] = evalString(tmp[2]);\n                  }\n                }\n              }\n\n              nextEntry();\n            }\n\n            function loadImport(url, callback) {\n              xhrLoadText(url, function (content) {\n                parseRawLines(content, false, callback);\n              }, function () {\n                console.warn(url + ' not found.');\n                callback();\n              });\n            }\n\n            parseRawLines(text, true, function () {\n              parsedPropertiesCallback(dictionary);\n            });\n          }\n\n          xhrLoadText(href, function (response) {\n            gTextData += response;\n            parseProperties(response, function (data) {\n              for (var key in data) {\n                var id,\n                    prop,\n                    index = key.lastIndexOf('.');\n\n                if (index > 0) {\n                  id = key.substring(0, index);\n                  prop = key.substring(index + 1);\n                } else {\n                  id = key;\n                  prop = gTextProp;\n                }\n\n                if (!gL10nData[id]) {\n                  gL10nData[id] = {};\n                }\n\n                gL10nData[id][prop] = data[key];\n              }\n\n              if (successCallback) {\n                successCallback();\n              }\n            });\n          }, failureCallback);\n        }\n\n        function loadLocale(lang, callback) {\n          if (lang) {\n            lang = lang.toLowerCase();\n          }\n\n          callback = callback || function _callback() {};\n\n          clear();\n          gLanguage = lang;\n          var langLinks = getL10nResourceLinks();\n          var langCount = langLinks.length;\n\n          if (langCount === 0) {\n            var dict = getL10nDictionary();\n\n            if (dict && dict.locales && dict.default_locale) {\n              console.log('using the embedded JSON directory, early way out');\n              gL10nData = dict.locales[lang];\n\n              if (!gL10nData) {\n                var defaultLocale = dict.default_locale.toLowerCase();\n\n                for (var anyCaseLang in dict.locales) {\n                  anyCaseLang = anyCaseLang.toLowerCase();\n\n                  if (anyCaseLang === lang) {\n                    gL10nData = dict.locales[lang];\n                    break;\n                  } else if (anyCaseLang === defaultLocale) {\n                    gL10nData = dict.locales[defaultLocale];\n                  }\n                }\n              }\n\n              callback();\n            } else {\n              console.log('no resource to load, early way out');\n            }\n\n            gReadyState = 'complete';\n            return;\n          }\n\n          var onResourceLoaded = null;\n          var gResourceCount = 0;\n\n          onResourceLoaded = function () {\n            gResourceCount++;\n\n            if (gResourceCount >= langCount) {\n              callback();\n              gReadyState = 'complete';\n            }\n          };\n\n          function L10nResourceLink(link) {\n            var href = link.href;\n\n            this.load = function (lang, callback) {\n              parseResource(href, lang, callback, function () {\n                console.warn(href + ' not found.');\n                console.warn('\"' + lang + '\" resource not found');\n                gLanguage = '';\n                callback();\n              });\n            };\n          }\n\n          for (var i = 0; i < langCount; i++) {\n            var resource = new L10nResourceLink(langLinks[i]);\n            resource.load(lang, onResourceLoaded);\n          }\n        }\n\n        function clear() {\n          gL10nData = {};\n          gTextData = '';\n          gLanguage = '';\n        }\n\n        function getPluralRules(lang) {\n          var locales2rules = {\n            'af': 3,\n            'ak': 4,\n            'am': 4,\n            'ar': 1,\n            'asa': 3,\n            'az': 0,\n            'be': 11,\n            'bem': 3,\n            'bez': 3,\n            'bg': 3,\n            'bh': 4,\n            'bm': 0,\n            'bn': 3,\n            'bo': 0,\n            'br': 20,\n            'brx': 3,\n            'bs': 11,\n            'ca': 3,\n            'cgg': 3,\n            'chr': 3,\n            'cs': 12,\n            'cy': 17,\n            'da': 3,\n            'de': 3,\n            'dv': 3,\n            'dz': 0,\n            'ee': 3,\n            'el': 3,\n            'en': 3,\n            'eo': 3,\n            'es': 3,\n            'et': 3,\n            'eu': 3,\n            'fa': 0,\n            'ff': 5,\n            'fi': 3,\n            'fil': 4,\n            'fo': 3,\n            'fr': 5,\n            'fur': 3,\n            'fy': 3,\n            'ga': 8,\n            'gd': 24,\n            'gl': 3,\n            'gsw': 3,\n            'gu': 3,\n            'guw': 4,\n            'gv': 23,\n            'ha': 3,\n            'haw': 3,\n            'he': 2,\n            'hi': 4,\n            'hr': 11,\n            'hu': 0,\n            'id': 0,\n            'ig': 0,\n            'ii': 0,\n            'is': 3,\n            'it': 3,\n            'iu': 7,\n            'ja': 0,\n            'jmc': 3,\n            'jv': 0,\n            'ka': 0,\n            'kab': 5,\n            'kaj': 3,\n            'kcg': 3,\n            'kde': 0,\n            'kea': 0,\n            'kk': 3,\n            'kl': 3,\n            'km': 0,\n            'kn': 0,\n            'ko': 0,\n            'ksb': 3,\n            'ksh': 21,\n            'ku': 3,\n            'kw': 7,\n            'lag': 18,\n            'lb': 3,\n            'lg': 3,\n            'ln': 4,\n            'lo': 0,\n            'lt': 10,\n            'lv': 6,\n            'mas': 3,\n            'mg': 4,\n            'mk': 16,\n            'ml': 3,\n            'mn': 3,\n            'mo': 9,\n            'mr': 3,\n            'ms': 0,\n            'mt': 15,\n            'my': 0,\n            'nah': 3,\n            'naq': 7,\n            'nb': 3,\n            'nd': 3,\n            'ne': 3,\n            'nl': 3,\n            'nn': 3,\n            'no': 3,\n            'nr': 3,\n            'nso': 4,\n            'ny': 3,\n            'nyn': 3,\n            'om': 3,\n            'or': 3,\n            'pa': 3,\n            'pap': 3,\n            'pl': 13,\n            'ps': 3,\n            'pt': 3,\n            'rm': 3,\n            'ro': 9,\n            'rof': 3,\n            'ru': 11,\n            'rwk': 3,\n            'sah': 0,\n            'saq': 3,\n            'se': 7,\n            'seh': 3,\n            'ses': 0,\n            'sg': 0,\n            'sh': 11,\n            'shi': 19,\n            'sk': 12,\n            'sl': 14,\n            'sma': 7,\n            'smi': 7,\n            'smj': 7,\n            'smn': 7,\n            'sms': 7,\n            'sn': 3,\n            'so': 3,\n            'sq': 3,\n            'sr': 11,\n            'ss': 3,\n            'ssy': 3,\n            'st': 3,\n            'sv': 3,\n            'sw': 3,\n            'syr': 3,\n            'ta': 3,\n            'te': 3,\n            'teo': 3,\n            'th': 0,\n            'ti': 4,\n            'tig': 3,\n            'tk': 3,\n            'tl': 4,\n            'tn': 3,\n            'to': 0,\n            'tr': 0,\n            'ts': 3,\n            'tzm': 22,\n            'uk': 11,\n            'ur': 3,\n            've': 3,\n            'vi': 0,\n            'vun': 3,\n            'wa': 4,\n            'wae': 3,\n            'wo': 0,\n            'xh': 3,\n            'xog': 3,\n            'yo': 0,\n            'zh': 0,\n            'zu': 3\n          };\n\n          function isIn(n, list) {\n            return list.indexOf(n) !== -1;\n          }\n\n          function isBetween(n, start, end) {\n            return start <= n && n <= end;\n          }\n\n          var pluralRules = {\n            '0': function (n) {\n              return 'other';\n            },\n            '1': function (n) {\n              if (isBetween(n % 100, 3, 10)) return 'few';\n              if (n === 0) return 'zero';\n              if (isBetween(n % 100, 11, 99)) return 'many';\n              if (n == 2) return 'two';\n              if (n == 1) return 'one';\n              return 'other';\n            },\n            '2': function (n) {\n              if (n !== 0 && n % 10 === 0) return 'many';\n              if (n == 2) return 'two';\n              if (n == 1) return 'one';\n              return 'other';\n            },\n            '3': function (n) {\n              if (n == 1) return 'one';\n              return 'other';\n            },\n            '4': function (n) {\n              if (isBetween(n, 0, 1)) return 'one';\n              return 'other';\n            },\n            '5': function (n) {\n              if (isBetween(n, 0, 2) && n != 2) return 'one';\n              return 'other';\n            },\n            '6': function (n) {\n              if (n === 0) return 'zero';\n              if (n % 10 == 1 && n % 100 != 11) return 'one';\n              return 'other';\n            },\n            '7': function (n) {\n              if (n == 2) return 'two';\n              if (n == 1) return 'one';\n              return 'other';\n            },\n            '8': function (n) {\n              if (isBetween(n, 3, 6)) return 'few';\n              if (isBetween(n, 7, 10)) return 'many';\n              if (n == 2) return 'two';\n              if (n == 1) return 'one';\n              return 'other';\n            },\n            '9': function (n) {\n              if (n === 0 || n != 1 && isBetween(n % 100, 1, 19)) return 'few';\n              if (n == 1) return 'one';\n              return 'other';\n            },\n            '10': function (n) {\n              if (isBetween(n % 10, 2, 9) && !isBetween(n % 100, 11, 19)) return 'few';\n              if (n % 10 == 1 && !isBetween(n % 100, 11, 19)) return 'one';\n              return 'other';\n            },\n            '11': function (n) {\n              if (isBetween(n % 10, 2, 4) && !isBetween(n % 100, 12, 14)) return 'few';\n              if (n % 10 === 0 || isBetween(n % 10, 5, 9) || isBetween(n % 100, 11, 14)) return 'many';\n              if (n % 10 == 1 && n % 100 != 11) return 'one';\n              return 'other';\n            },\n            '12': function (n) {\n              if (isBetween(n, 2, 4)) return 'few';\n              if (n == 1) return 'one';\n              return 'other';\n            },\n            '13': function (n) {\n              if (isBetween(n % 10, 2, 4) && !isBetween(n % 100, 12, 14)) return 'few';\n              if (n != 1 && isBetween(n % 10, 0, 1) || isBetween(n % 10, 5, 9) || isBetween(n % 100, 12, 14)) return 'many';\n              if (n == 1) return 'one';\n              return 'other';\n            },\n            '14': function (n) {\n              if (isBetween(n % 100, 3, 4)) return 'few';\n              if (n % 100 == 2) return 'two';\n              if (n % 100 == 1) return 'one';\n              return 'other';\n            },\n            '15': function (n) {\n              if (n === 0 || isBetween(n % 100, 2, 10)) return 'few';\n              if (isBetween(n % 100, 11, 19)) return 'many';\n              if (n == 1) return 'one';\n              return 'other';\n            },\n            '16': function (n) {\n              if (n % 10 == 1 && n != 11) return 'one';\n              return 'other';\n            },\n            '17': function (n) {\n              if (n == 3) return 'few';\n              if (n === 0) return 'zero';\n              if (n == 6) return 'many';\n              if (n == 2) return 'two';\n              if (n == 1) return 'one';\n              return 'other';\n            },\n            '18': function (n) {\n              if (n === 0) return 'zero';\n              if (isBetween(n, 0, 2) && n !== 0 && n != 2) return 'one';\n              return 'other';\n            },\n            '19': function (n) {\n              if (isBetween(n, 2, 10)) return 'few';\n              if (isBetween(n, 0, 1)) return 'one';\n              return 'other';\n            },\n            '20': function (n) {\n              if ((isBetween(n % 10, 3, 4) || n % 10 == 9) && !(isBetween(n % 100, 10, 19) || isBetween(n % 100, 70, 79) || isBetween(n % 100, 90, 99))) return 'few';\n              if (n % 1000000 === 0 && n !== 0) return 'many';\n              if (n % 10 == 2 && !isIn(n % 100, [12, 72, 92])) return 'two';\n              if (n % 10 == 1 && !isIn(n % 100, [11, 71, 91])) return 'one';\n              return 'other';\n            },\n            '21': function (n) {\n              if (n === 0) return 'zero';\n              if (n == 1) return 'one';\n              return 'other';\n            },\n            '22': function (n) {\n              if (isBetween(n, 0, 1) || isBetween(n, 11, 99)) return 'one';\n              return 'other';\n            },\n            '23': function (n) {\n              if (isBetween(n % 10, 1, 2) || n % 20 === 0) return 'one';\n              return 'other';\n            },\n            '24': function (n) {\n              if (isBetween(n, 3, 10) || isBetween(n, 13, 19)) return 'few';\n              if (isIn(n, [2, 12])) return 'two';\n              if (isIn(n, [1, 11])) return 'one';\n              return 'other';\n            }\n          };\n          var index = locales2rules[lang.replace(/-.*$/, '')];\n\n          if (!(index in pluralRules)) {\n            console.warn('plural form unknown for [' + lang + ']');\n            return function () {\n              return 'other';\n            };\n          }\n\n          return pluralRules[index];\n        }\n\n        gMacros.plural = function (str, param, key, prop) {\n          var n = parseFloat(param);\n          if (isNaN(n)) return str;\n          if (prop != gTextProp) return str;\n\n          if (!gMacros._pluralRules) {\n            gMacros._pluralRules = getPluralRules(gLanguage);\n          }\n\n          var index = '[' + gMacros._pluralRules(n) + ']';\n\n          if (n === 0 && key + '[zero]' in gL10nData) {\n            str = gL10nData[key + '[zero]'][prop];\n          } else if (n == 1 && key + '[one]' in gL10nData) {\n            str = gL10nData[key + '[one]'][prop];\n          } else if (n == 2 && key + '[two]' in gL10nData) {\n            str = gL10nData[key + '[two]'][prop];\n          } else if (key + index in gL10nData) {\n            str = gL10nData[key + index][prop];\n          } else if (key + '[other]' in gL10nData) {\n            str = gL10nData[key + '[other]'][prop];\n          }\n\n          return str;\n        };\n\n        function getL10nData(key, args, fallback) {\n          var data = gL10nData[key];\n\n          if (!data) {\n            console.warn('#' + key + ' is undefined.');\n\n            if (!fallback) {\n              return null;\n            }\n\n            data = fallback;\n          }\n\n          var rv = {};\n\n          for (var prop in data) {\n            var str = data[prop];\n            str = substIndexes(str, args, key, prop);\n            str = substArguments(str, args, key);\n            rv[prop] = str;\n          }\n\n          return rv;\n        }\n\n        function substIndexes(str, args, key, prop) {\n          var reIndex = /\\{\\[\\s*([a-zA-Z]+)\\(([a-zA-Z]+)\\)\\s*\\]\\}/;\n          var reMatch = reIndex.exec(str);\n          if (!reMatch || !reMatch.length) return str;\n          var macroName = reMatch[1];\n          var paramName = reMatch[2];\n          var param;\n\n          if (args && paramName in args) {\n            param = args[paramName];\n          } else if (paramName in gL10nData) {\n            param = gL10nData[paramName];\n          }\n\n          if (macroName in gMacros) {\n            var macro = gMacros[macroName];\n            str = macro(str, param, key, prop);\n          }\n\n          return str;\n        }\n\n        function substArguments(str, args, key) {\n          var reArgs = /\\{\\{\\s*(.+?)\\s*\\}\\}/g;\n          return str.replace(reArgs, function (matched_text, arg) {\n            if (args && arg in args) {\n              return args[arg];\n            }\n\n            if (arg in gL10nData) {\n              return gL10nData[arg];\n            }\n\n            console.log('argument {{' + arg + '}} for #' + key + ' is undefined.');\n            return matched_text;\n          });\n        }\n\n        function translateElement(element) {\n          var l10n = getL10nAttributes(element);\n          if (!l10n.id) return;\n          var data = getL10nData(l10n.id, l10n.args);\n\n          if (!data) {\n            console.warn('#' + l10n.id + ' is undefined.');\n            return;\n          }\n\n          if (data[gTextProp]) {\n            if (getChildElementCount(element) === 0) {\n              element[gTextProp] = data[gTextProp];\n            } else {\n              var children = element.childNodes;\n              var found = false;\n\n              for (var i = 0, l = children.length; i < l; i++) {\n                if (children[i].nodeType === 3 && /\\S/.test(children[i].nodeValue)) {\n                  if (found) {\n                    children[i].nodeValue = '';\n                  } else {\n                    children[i].nodeValue = data[gTextProp];\n                    found = true;\n                  }\n                }\n              }\n\n              if (!found) {\n                var textNode = document.createTextNode(data[gTextProp]);\n                element.insertBefore(textNode, element.firstChild);\n              }\n            }\n\n            delete data[gTextProp];\n          }\n\n          for (var k in data) {\n            element[k] = data[k];\n          }\n        }\n\n        function getChildElementCount(element) {\n          if (element.children) {\n            return element.children.length;\n          }\n\n          if (typeof element.childElementCount !== 'undefined') {\n            return element.childElementCount;\n          }\n\n          var count = 0;\n\n          for (var i = 0; i < element.childNodes.length; i++) {\n            count += element.nodeType === 1 ? 1 : 0;\n          }\n\n          return count;\n        }\n\n        function translateFragment(element) {\n          element = element || document.documentElement;\n          var children = getTranslatableChildren(element);\n          var elementCount = children.length;\n\n          for (var i = 0; i < elementCount; i++) {\n            translateElement(children[i]);\n          }\n\n          translateElement(element);\n        }\n\n        return {\n          get: function (key, args, fallbackString) {\n            var index = key.lastIndexOf('.');\n            var prop = gTextProp;\n\n            if (index > 0) {\n              prop = key.substring(index + 1);\n              key = key.substring(0, index);\n            }\n\n            var fallback;\n\n            if (fallbackString) {\n              fallback = {};\n              fallback[prop] = fallbackString;\n            }\n\n            var data = getL10nData(key, args, fallback);\n\n            if (data && prop in data) {\n              return data[prop];\n            }\n\n            return '{{' + key + '}}';\n          },\n          getData: function () {\n            return gL10nData;\n          },\n          getText: function () {\n            return gTextData;\n          },\n          getLanguage: function () {\n            return gLanguage;\n          },\n          setLanguage: function (lang, callback) {\n            loadLocale(lang, function () {\n              if (callback) callback();\n            });\n          },\n          getDirection: function () {\n            var rtlList = ['ar', 'he', 'fa', 'ps', 'ur'];\n            var shortCode = gLanguage.split('-', 1)[0];\n            return rtlList.indexOf(shortCode) >= 0 ? 'rtl' : 'ltr';\n          },\n          translate: translateFragment,\n          getReadyState: function () {\n            return gReadyState;\n          },\n          ready: function (callback) {\n            if (!callback) {\n              return;\n            } else if (gReadyState == 'complete' || gReadyState == 'interactive') {\n              window.setTimeout(function () {\n                callback();\n              });\n            } else if (document.addEventListener) {\n              document.addEventListener('localized', function once() {\n                document.removeEventListener('localized', once);\n                callback();\n              });\n            }\n          }\n        };\n      }(window, document);\n      /***/\n\n    },\n    /* 10 */\n\n    /***/\n    function (module, exports, __w_pdfjs_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.PDFFindController = exports.FindState = void 0;\n\n      var _pdfjsLib = __w_pdfjs_require__(2);\n\n      var _pdf_find_utils = __w_pdfjs_require__(11);\n\n      var _ui_utils = __w_pdfjs_require__(3);\n\n      const FindState = {\n        FOUND: 0,\n        NOT_FOUND: 1,\n        WRAPPED: 2,\n        PENDING: 3\n      };\n      exports.FindState = FindState;\n      const FIND_TIMEOUT = 250;\n      const MATCH_SCROLL_OFFSET_TOP = -50;\n      const MATCH_SCROLL_OFFSET_LEFT = -400;\n      const CHARACTERS_TO_NORMALIZE = {\n        \"\\u2018\": \"'\",\n        \"\\u2019\": \"'\",\n        \"\\u201A\": \"'\",\n        \"\\u201B\": \"'\",\n        \"\\u201C\": '\"',\n        \"\\u201D\": '\"',\n        \"\\u201E\": '\"',\n        \"\\u201F\": '\"',\n        \"\\u00BC\": \"1/4\",\n        \"\\u00BD\": \"1/2\",\n        \"\\u00BE\": \"3/4\"\n      };\n      let normalizationRegex = null;\n\n      function normalize(text) {\n        if (!normalizationRegex) {\n          const replace = Object.keys(CHARACTERS_TO_NORMALIZE).join(\"\");\n          normalizationRegex = new RegExp(`[${replace}]`, \"g\");\n        }\n\n        return text.replace(normalizationRegex, function (ch) {\n          return CHARACTERS_TO_NORMALIZE[ch];\n        });\n      }\n\n      class PDFFindController {\n        constructor({\n          linkService,\n          eventBus\n        }) {\n          this._linkService = linkService;\n          this._eventBus = eventBus;\n\n          this._reset();\n\n          eventBus._on(\"findbarclose\", this._onFindBarClose.bind(this));\n        }\n\n        get highlightMatches() {\n          return this._highlightMatches;\n        }\n\n        get pageMatches() {\n          return this._pageMatches;\n        }\n\n        get pageMatchesLength() {\n          return this._pageMatchesLength;\n        }\n\n        get selected() {\n          return this._selected;\n        }\n\n        get state() {\n          return this._state;\n        }\n\n        setDocument(pdfDocument) {\n          if (this._pdfDocument) {\n            this._reset();\n          }\n\n          if (!pdfDocument) {\n            return;\n          }\n\n          this._pdfDocument = pdfDocument;\n\n          this._firstPageCapability.resolve();\n        }\n\n        executeCommand(cmd, state) {\n          if (!state) {\n            return;\n          }\n\n          const pdfDocument = this._pdfDocument;\n\n          if (this._state === null || this._shouldDirtyMatch(cmd, state)) {\n            this._dirtyMatch = true;\n          }\n\n          this._state = state;\n\n          if (cmd !== \"findhighlightallchange\") {\n            this._updateUIState(FindState.PENDING);\n          }\n\n          this._firstPageCapability.promise.then(() => {\n            if (!this._pdfDocument || pdfDocument && this._pdfDocument !== pdfDocument) {\n              return;\n            }\n\n            this._extractText();\n\n            const findbarClosed = !this._highlightMatches;\n            const pendingTimeout = !!this._findTimeout;\n\n            if (this._findTimeout) {\n              clearTimeout(this._findTimeout);\n              this._findTimeout = null;\n            }\n\n            if (cmd === \"find\") {\n              this._findTimeout = setTimeout(() => {\n                this._nextMatch();\n\n                this._findTimeout = null;\n              }, FIND_TIMEOUT);\n            } else if (this._dirtyMatch) {\n              this._nextMatch();\n            } else if (cmd === \"findagain\") {\n              this._nextMatch();\n\n              if (findbarClosed && this._state.highlightAll) {\n                this._updateAllPages();\n              }\n            } else if (cmd === \"findhighlightallchange\") {\n              if (pendingTimeout) {\n                this._nextMatch();\n              } else {\n                this._highlightMatches = true;\n              }\n\n              this._updateAllPages();\n            } else {\n              this._nextMatch();\n            }\n          });\n        }\n\n        scrollMatchIntoView({\n          element = null,\n          pageIndex = -1,\n          matchIndex = -1\n        }) {\n          if (!this._scrollMatches || !element) {\n            return;\n          } else if (matchIndex === -1 || matchIndex !== this._selected.matchIdx) {\n            return;\n          } else if (pageIndex === -1 || pageIndex !== this._selected.pageIdx) {\n            return;\n          }\n\n          this._scrollMatches = false;\n          const spot = {\n            top: MATCH_SCROLL_OFFSET_TOP,\n            left: MATCH_SCROLL_OFFSET_LEFT\n          };\n          (0, _ui_utils.scrollIntoView)(element, spot, true);\n        }\n\n        _reset() {\n          this._highlightMatches = false;\n          this._scrollMatches = false;\n          this._pdfDocument = null;\n          this._pageMatches = [];\n          this._pageMatchesLength = [];\n          this._state = null;\n          this._selected = {\n            pageIdx: -1,\n            matchIdx: -1\n          };\n          this._offset = {\n            pageIdx: null,\n            matchIdx: null,\n            wrapped: false\n          };\n          this._extractTextPromises = [];\n          this._pageContents = [];\n          this._matchesCountTotal = 0;\n          this._pagesToSearch = null;\n          this._pendingFindMatches = Object.create(null);\n          this._resumePageIdx = null;\n          this._dirtyMatch = false;\n          clearTimeout(this._findTimeout);\n          this._findTimeout = null;\n          this._firstPageCapability = (0, _pdfjsLib.createPromiseCapability)();\n        }\n\n        get _query() {\n          if (this._state.query !== this._rawQuery) {\n            this._rawQuery = this._state.query;\n            this._normalizedQuery = normalize(this._state.query);\n          }\n\n          return this._normalizedQuery;\n        }\n\n        _shouldDirtyMatch(cmd, state) {\n          if (state.query !== this._state.query) {\n            return true;\n          }\n\n          switch (cmd) {\n            case \"findagain\":\n              const pageNumber = this._selected.pageIdx + 1;\n              const linkService = this._linkService;\n\n              if (pageNumber >= 1 && pageNumber <= linkService.pagesCount && pageNumber !== linkService.page && !linkService.isPageVisible(pageNumber)) {\n                return true;\n              }\n\n              return false;\n\n            case \"findhighlightallchange\":\n              return false;\n          }\n\n          return true;\n        }\n\n        _prepareMatches(matchesWithLength, matches, matchesLength) {\n          function isSubTerm(currentIndex) {\n            const currentElem = matchesWithLength[currentIndex];\n            const nextElem = matchesWithLength[currentIndex + 1];\n\n            if (currentIndex < matchesWithLength.length - 1 && currentElem.match === nextElem.match) {\n              currentElem.skipped = true;\n              return true;\n            }\n\n            for (let i = currentIndex - 1; i >= 0; i--) {\n              const prevElem = matchesWithLength[i];\n\n              if (prevElem.skipped) {\n                continue;\n              }\n\n              if (prevElem.match + prevElem.matchLength < currentElem.match) {\n                break;\n              }\n\n              if (prevElem.match + prevElem.matchLength >= currentElem.match + currentElem.matchLength) {\n                currentElem.skipped = true;\n                return true;\n              }\n            }\n\n            return false;\n          }\n\n          matchesWithLength.sort(function (a, b) {\n            return a.match === b.match ? a.matchLength - b.matchLength : a.match - b.match;\n          });\n\n          for (let i = 0, len = matchesWithLength.length; i < len; i++) {\n            if (isSubTerm(i)) {\n              continue;\n            }\n\n            matches.push(matchesWithLength[i].match);\n            matchesLength.push(matchesWithLength[i].matchLength);\n          }\n        }\n\n        _isEntireWord(content, startIdx, length) {\n          if (startIdx > 0) {\n            const first = content.charCodeAt(startIdx);\n            const limit = content.charCodeAt(startIdx - 1);\n\n            if ((0, _pdf_find_utils.getCharacterType)(first) === (0, _pdf_find_utils.getCharacterType)(limit)) {\n              return false;\n            }\n          }\n\n          const endIdx = startIdx + length - 1;\n\n          if (endIdx < content.length - 1) {\n            const last = content.charCodeAt(endIdx);\n            const limit = content.charCodeAt(endIdx + 1);\n\n            if ((0, _pdf_find_utils.getCharacterType)(last) === (0, _pdf_find_utils.getCharacterType)(limit)) {\n              return false;\n            }\n          }\n\n          return true;\n        }\n\n        _calculatePhraseMatch(query, pageIndex, pageContent, entireWord) {\n          const matches = [];\n          const queryLen = query.length;\n          let matchIdx = -queryLen;\n\n          while (true) {\n            matchIdx = pageContent.indexOf(query, matchIdx + queryLen);\n\n            if (matchIdx === -1) {\n              break;\n            }\n\n            if (entireWord && !this._isEntireWord(pageContent, matchIdx, queryLen)) {\n              continue;\n            }\n\n            matches.push(matchIdx);\n          }\n\n          this._pageMatches[pageIndex] = matches;\n        }\n\n        _calculateWordMatch(query, pageIndex, pageContent, entireWord) {\n          const matchesWithLength = [];\n          const queryArray = query.match(/\\S+/g);\n\n          for (let i = 0, len = queryArray.length; i < len; i++) {\n            const subquery = queryArray[i];\n            const subqueryLen = subquery.length;\n            let matchIdx = -subqueryLen;\n\n            while (true) {\n              matchIdx = pageContent.indexOf(subquery, matchIdx + subqueryLen);\n\n              if (matchIdx === -1) {\n                break;\n              }\n\n              if (entireWord && !this._isEntireWord(pageContent, matchIdx, subqueryLen)) {\n                continue;\n              }\n\n              matchesWithLength.push({\n                match: matchIdx,\n                matchLength: subqueryLen,\n                skipped: false\n              });\n            }\n          }\n\n          this._pageMatchesLength[pageIndex] = [];\n          this._pageMatches[pageIndex] = [];\n\n          this._prepareMatches(matchesWithLength, this._pageMatches[pageIndex], this._pageMatchesLength[pageIndex]);\n        }\n\n        _calculateMatch(pageIndex) {\n          let pageContent = this._pageContents[pageIndex];\n          let query = this._query;\n          const {\n            caseSensitive,\n            entireWord,\n            phraseSearch\n          } = this._state;\n\n          if (query.length === 0) {\n            return;\n          }\n\n          if (!caseSensitive) {\n            pageContent = pageContent.toLowerCase();\n            query = query.toLowerCase();\n          }\n\n          if (phraseSearch) {\n            this._calculatePhraseMatch(query, pageIndex, pageContent, entireWord);\n          } else {\n            this._calculateWordMatch(query, pageIndex, pageContent, entireWord);\n          }\n\n          if (this._state.highlightAll) {\n            this._updatePage(pageIndex);\n          }\n\n          if (this._resumePageIdx === pageIndex) {\n            this._resumePageIdx = null;\n\n            this._nextPageMatch();\n          }\n\n          const pageMatchesCount = this._pageMatches[pageIndex].length;\n\n          if (pageMatchesCount > 0) {\n            this._matchesCountTotal += pageMatchesCount;\n\n            this._updateUIResultsCount();\n          }\n        }\n\n        _extractText() {\n          if (this._extractTextPromises.length > 0) {\n            return;\n          }\n\n          let promise = Promise.resolve();\n\n          for (let i = 0, ii = this._linkService.pagesCount; i < ii; i++) {\n            const extractTextCapability = (0, _pdfjsLib.createPromiseCapability)();\n            this._extractTextPromises[i] = extractTextCapability.promise;\n            promise = promise.then(() => {\n              return this._pdfDocument.getPage(i + 1).then(pdfPage => {\n                return pdfPage.getTextContent({\n                  normalizeWhitespace: true\n                });\n              }).then(textContent => {\n                const textItems = textContent.items;\n                const strBuf = [];\n\n                for (let j = 0, jj = textItems.length; j < jj; j++) {\n                  strBuf.push(textItems[j].str);\n                }\n\n                this._pageContents[i] = normalize(strBuf.join(\"\"));\n                extractTextCapability.resolve(i);\n              }, reason => {\n                console.error(`Unable to get text content for page ${i + 1}`, reason);\n                this._pageContents[i] = \"\";\n                extractTextCapability.resolve(i);\n              });\n            });\n          }\n        }\n\n        _updatePage(index) {\n          if (this._scrollMatches && this._selected.pageIdx === index) {\n            this._linkService.page = index + 1;\n          }\n\n          this._eventBus.dispatch(\"updatetextlayermatches\", {\n            source: this,\n            pageIndex: index\n          });\n        }\n\n        _updateAllPages() {\n          this._eventBus.dispatch(\"updatetextlayermatches\", {\n            source: this,\n            pageIndex: -1\n          });\n        }\n\n        _nextMatch() {\n          const previous = this._state.findPrevious;\n          const currentPageIndex = this._linkService.page - 1;\n          const numPages = this._linkService.pagesCount;\n          this._highlightMatches = true;\n\n          if (this._dirtyMatch) {\n            this._dirtyMatch = false;\n            this._selected.pageIdx = this._selected.matchIdx = -1;\n            this._offset.pageIdx = currentPageIndex;\n            this._offset.matchIdx = null;\n            this._offset.wrapped = false;\n            this._resumePageIdx = null;\n            this._pageMatches.length = 0;\n            this._pageMatchesLength.length = 0;\n            this._matchesCountTotal = 0;\n\n            this._updateAllPages();\n\n            for (let i = 0; i < numPages; i++) {\n              if (this._pendingFindMatches[i] === true) {\n                continue;\n              }\n\n              this._pendingFindMatches[i] = true;\n\n              this._extractTextPromises[i].then(pageIdx => {\n                delete this._pendingFindMatches[pageIdx];\n\n                this._calculateMatch(pageIdx);\n              });\n            }\n          }\n\n          if (this._query === \"\") {\n            this._updateUIState(FindState.FOUND);\n\n            return;\n          }\n\n          if (this._resumePageIdx) {\n            return;\n          }\n\n          const offset = this._offset;\n          this._pagesToSearch = numPages;\n\n          if (offset.matchIdx !== null) {\n            const numPageMatches = this._pageMatches[offset.pageIdx].length;\n\n            if (!previous && offset.matchIdx + 1 < numPageMatches || previous && offset.matchIdx > 0) {\n              offset.matchIdx = previous ? offset.matchIdx - 1 : offset.matchIdx + 1;\n\n              this._updateMatch(true);\n\n              return;\n            }\n\n            this._advanceOffsetPage(previous);\n          }\n\n          this._nextPageMatch();\n        }\n\n        _matchesReady(matches) {\n          const offset = this._offset;\n          const numMatches = matches.length;\n          const previous = this._state.findPrevious;\n\n          if (numMatches) {\n            offset.matchIdx = previous ? numMatches - 1 : 0;\n\n            this._updateMatch(true);\n\n            return true;\n          }\n\n          this._advanceOffsetPage(previous);\n\n          if (offset.wrapped) {\n            offset.matchIdx = null;\n\n            if (this._pagesToSearch < 0) {\n              this._updateMatch(false);\n\n              return true;\n            }\n          }\n\n          return false;\n        }\n\n        _nextPageMatch() {\n          if (this._resumePageIdx !== null) {\n            console.error(\"There can only be one pending page.\");\n          }\n\n          let matches = null;\n\n          do {\n            const pageIdx = this._offset.pageIdx;\n            matches = this._pageMatches[pageIdx];\n\n            if (!matches) {\n              this._resumePageIdx = pageIdx;\n              break;\n            }\n          } while (!this._matchesReady(matches));\n        }\n\n        _advanceOffsetPage(previous) {\n          const offset = this._offset;\n          const numPages = this._linkService.pagesCount;\n          offset.pageIdx = previous ? offset.pageIdx - 1 : offset.pageIdx + 1;\n          offset.matchIdx = null;\n          this._pagesToSearch--;\n\n          if (offset.pageIdx >= numPages || offset.pageIdx < 0) {\n            offset.pageIdx = previous ? numPages - 1 : 0;\n            offset.wrapped = true;\n          }\n        }\n\n        _updateMatch(found = false) {\n          let state = FindState.NOT_FOUND;\n          const wrapped = this._offset.wrapped;\n          this._offset.wrapped = false;\n\n          if (found) {\n            const previousPage = this._selected.pageIdx;\n            this._selected.pageIdx = this._offset.pageIdx;\n            this._selected.matchIdx = this._offset.matchIdx;\n            state = wrapped ? FindState.WRAPPED : FindState.FOUND;\n\n            if (previousPage !== -1 && previousPage !== this._selected.pageIdx) {\n              this._updatePage(previousPage);\n            }\n          }\n\n          this._updateUIState(state, this._state.findPrevious);\n\n          if (this._selected.pageIdx !== -1) {\n            this._scrollMatches = true;\n\n            this._updatePage(this._selected.pageIdx);\n          }\n        }\n\n        _onFindBarClose(evt) {\n          const pdfDocument = this._pdfDocument;\n\n          this._firstPageCapability.promise.then(() => {\n            if (!this._pdfDocument || pdfDocument && this._pdfDocument !== pdfDocument) {\n              return;\n            }\n\n            if (this._findTimeout) {\n              clearTimeout(this._findTimeout);\n              this._findTimeout = null;\n            }\n\n            if (this._resumePageIdx) {\n              this._resumePageIdx = null;\n              this._dirtyMatch = true;\n            }\n\n            this._updateUIState(FindState.FOUND);\n\n            this._highlightMatches = false;\n\n            this._updateAllPages();\n          });\n        }\n\n        _requestMatchesCount() {\n          const {\n            pageIdx,\n            matchIdx\n          } = this._selected;\n          let current = 0,\n              total = this._matchesCountTotal;\n\n          if (matchIdx !== -1) {\n            for (let i = 0; i < pageIdx; i++) {\n              current += this._pageMatches[i] && this._pageMatches[i].length || 0;\n            }\n\n            current += matchIdx + 1;\n          }\n\n          if (current < 1 || current > total) {\n            current = total = 0;\n          }\n\n          return {\n            current,\n            total\n          };\n        }\n\n        _updateUIResultsCount() {\n          this._eventBus.dispatch(\"updatefindmatchescount\", {\n            source: this,\n            matchesCount: this._requestMatchesCount()\n          });\n        }\n\n        _updateUIState(state, previous) {\n          this._eventBus.dispatch(\"updatefindcontrolstate\", {\n            source: this,\n            state,\n            previous,\n            matchesCount: this._requestMatchesCount()\n          });\n        }\n\n      }\n\n      exports.PDFFindController = PDFFindController;\n      /***/\n    },\n    /* 11 */\n\n    /***/\n    function (module, exports, __w_pdfjs_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.getCharacterType = getCharacterType;\n      exports.CharacterType = void 0;\n      const CharacterType = {\n        SPACE: 0,\n        ALPHA_LETTER: 1,\n        PUNCT: 2,\n        HAN_LETTER: 3,\n        KATAKANA_LETTER: 4,\n        HIRAGANA_LETTER: 5,\n        HALFWIDTH_KATAKANA_LETTER: 6,\n        THAI_LETTER: 7\n      };\n      exports.CharacterType = CharacterType;\n\n      function isAlphabeticalScript(charCode) {\n        return charCode < 0x2e80;\n      }\n\n      function isAscii(charCode) {\n        return (charCode & 0xff80) === 0;\n      }\n\n      function isAsciiAlpha(charCode) {\n        return charCode >= 0x61 && charCode <= 0x7a || charCode >= 0x41 && charCode <= 0x5a;\n      }\n\n      function isAsciiDigit(charCode) {\n        return charCode >= 0x30 && charCode <= 0x39;\n      }\n\n      function isAsciiSpace(charCode) {\n        return charCode === 0x20 || charCode === 0x09 || charCode === 0x0d || charCode === 0x0a;\n      }\n\n      function isHan(charCode) {\n        return charCode >= 0x3400 && charCode <= 0x9fff || charCode >= 0xf900 && charCode <= 0xfaff;\n      }\n\n      function isKatakana(charCode) {\n        return charCode >= 0x30a0 && charCode <= 0x30ff;\n      }\n\n      function isHiragana(charCode) {\n        return charCode >= 0x3040 && charCode <= 0x309f;\n      }\n\n      function isHalfwidthKatakana(charCode) {\n        return charCode >= 0xff60 && charCode <= 0xff9f;\n      }\n\n      function isThai(charCode) {\n        return (charCode & 0xff80) === 0x0e00;\n      }\n\n      function getCharacterType(charCode) {\n        if (isAlphabeticalScript(charCode)) {\n          if (isAscii(charCode)) {\n            if (isAsciiSpace(charCode)) {\n              return CharacterType.SPACE;\n            } else if (isAsciiAlpha(charCode) || isAsciiDigit(charCode) || charCode === 0x5f) {\n              return CharacterType.ALPHA_LETTER;\n            }\n\n            return CharacterType.PUNCT;\n          } else if (isThai(charCode)) {\n            return CharacterType.THAI_LETTER;\n          } else if (charCode === 0xa0) {\n            return CharacterType.SPACE;\n          }\n\n          return CharacterType.ALPHA_LETTER;\n        }\n\n        if (isHan(charCode)) {\n          return CharacterType.HAN_LETTER;\n        } else if (isKatakana(charCode)) {\n          return CharacterType.KATAKANA_LETTER;\n        } else if (isHiragana(charCode)) {\n          return CharacterType.HIRAGANA_LETTER;\n        } else if (isHalfwidthKatakana(charCode)) {\n          return CharacterType.HALFWIDTH_KATAKANA_LETTER;\n        }\n\n        return CharacterType.ALPHA_LETTER;\n      }\n      /***/\n\n    },\n    /* 12 */\n\n    /***/\n    function (module, exports, __w_pdfjs_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.isDestHashesEqual = isDestHashesEqual;\n      exports.isDestArraysEqual = isDestArraysEqual;\n      exports.PDFHistory = void 0;\n\n      var _ui_utils = __w_pdfjs_require__(3);\n\n      const HASH_CHANGE_TIMEOUT = 1000;\n      const POSITION_UPDATED_THRESHOLD = 50;\n      const UPDATE_VIEWAREA_TIMEOUT = 1000;\n\n      function getCurrentHash() {\n        return document.location.hash;\n      }\n\n      class PDFHistory {\n        constructor({\n          linkService,\n          eventBus\n        }) {\n          this.linkService = linkService;\n          this.eventBus = eventBus;\n          this._initialized = false;\n          this._fingerprint = \"\";\n          this.reset();\n          this._boundEvents = null;\n          this._isViewerInPresentationMode = false;\n\n          this.eventBus._on(\"presentationmodechanged\", evt => {\n            this._isViewerInPresentationMode = evt.active || evt.switchInProgress;\n          });\n\n          this.eventBus._on(\"pagesinit\", () => {\n            this._isPagesLoaded = false;\n\n            const onPagesLoaded = evt => {\n              this.eventBus._off(\"pagesloaded\", onPagesLoaded);\n\n              this._isPagesLoaded = !!evt.pagesCount;\n            };\n\n            this.eventBus._on(\"pagesloaded\", onPagesLoaded);\n          });\n        }\n\n        initialize({\n          fingerprint,\n          resetHistory = false,\n          updateUrl = false\n        }) {\n          if (!fingerprint || typeof fingerprint !== \"string\") {\n            console.error('PDFHistory.initialize: The \"fingerprint\" must be a non-empty string.');\n            return;\n          }\n\n          if (this._initialized) {\n            this.reset();\n          }\n\n          const reInitialized = this._fingerprint !== \"\" && this._fingerprint !== fingerprint;\n          this._fingerprint = fingerprint;\n          this._updateUrl = updateUrl === true;\n          this._initialized = true;\n\n          this._bindEvents();\n\n          const state = window.history.state;\n          this._popStateInProgress = false;\n          this._blockHashChange = 0;\n          this._currentHash = getCurrentHash();\n          this._numPositionUpdates = 0;\n          this._uid = this._maxUid = 0;\n          this._destination = null;\n          this._position = null;\n\n          if (!this._isValidState(state, true) || resetHistory) {\n            const {\n              hash,\n              page,\n              rotation\n            } = this._parseCurrentHash(true);\n\n            if (!hash || reInitialized || resetHistory) {\n              this._pushOrReplaceState(null, true);\n\n              return;\n            }\n\n            this._pushOrReplaceState({\n              hash,\n              page,\n              rotation\n            }, true);\n\n            return;\n          }\n\n          const destination = state.destination;\n\n          this._updateInternalState(destination, state.uid, true);\n\n          if (this._uid > this._maxUid) {\n            this._maxUid = this._uid;\n          }\n\n          if (destination.rotation !== undefined) {\n            this._initialRotation = destination.rotation;\n          }\n\n          if (destination.dest) {\n            this._initialBookmark = JSON.stringify(destination.dest);\n            this._destination.page = null;\n          } else if (destination.hash) {\n            this._initialBookmark = destination.hash;\n          } else if (destination.page) {\n            this._initialBookmark = `page=${destination.page}`;\n          }\n        }\n\n        reset() {\n          if (this._initialized) {\n            this._pageHide();\n\n            this._initialized = false;\n\n            this._unbindEvents();\n          }\n\n          if (this._updateViewareaTimeout) {\n            clearTimeout(this._updateViewareaTimeout);\n            this._updateViewareaTimeout = null;\n          }\n\n          this._initialBookmark = null;\n          this._initialRotation = null;\n        }\n\n        push({\n          namedDest = null,\n          explicitDest,\n          pageNumber\n        }) {\n          if (!this._initialized) {\n            return;\n          }\n\n          if (namedDest && typeof namedDest !== \"string\") {\n            console.error(\"PDFHistory.push: \" + `\"${namedDest}\" is not a valid namedDest parameter.`);\n            return;\n          } else if (!Array.isArray(explicitDest)) {\n            console.error(\"PDFHistory.push: \" + `\"${explicitDest}\" is not a valid explicitDest parameter.`);\n            return;\n          } else if (!(Number.isInteger(pageNumber) && pageNumber > 0 && pageNumber <= this.linkService.pagesCount)) {\n            if (pageNumber !== null || this._destination) {\n              console.error(\"PDFHistory.push: \" + `\"${pageNumber}\" is not a valid pageNumber parameter.`);\n              return;\n            }\n          }\n\n          const hash = namedDest || JSON.stringify(explicitDest);\n\n          if (!hash) {\n            return;\n          }\n\n          let forceReplace = false;\n\n          if (this._destination && (isDestHashesEqual(this._destination.hash, hash) || isDestArraysEqual(this._destination.dest, explicitDest))) {\n            if (this._destination.page) {\n              return;\n            }\n\n            forceReplace = true;\n          }\n\n          if (this._popStateInProgress && !forceReplace) {\n            return;\n          }\n\n          this._pushOrReplaceState({\n            dest: explicitDest,\n            hash,\n            page: pageNumber,\n            rotation: this.linkService.rotation\n          }, forceReplace);\n\n          if (!this._popStateInProgress) {\n            this._popStateInProgress = true;\n            Promise.resolve().then(() => {\n              this._popStateInProgress = false;\n            });\n          }\n        }\n\n        pushCurrentPosition() {\n          if (!this._initialized || this._popStateInProgress) {\n            return;\n          }\n\n          this._tryPushCurrentPosition();\n        }\n\n        back() {\n          if (!this._initialized || this._popStateInProgress) {\n            return;\n          }\n\n          const state = window.history.state;\n\n          if (this._isValidState(state) && state.uid > 0) {\n            window.history.back();\n          }\n        }\n\n        forward() {\n          if (!this._initialized || this._popStateInProgress) {\n            return;\n          }\n\n          const state = window.history.state;\n\n          if (this._isValidState(state) && state.uid < this._maxUid) {\n            window.history.forward();\n          }\n        }\n\n        get popStateInProgress() {\n          return this._initialized && (this._popStateInProgress || this._blockHashChange > 0);\n        }\n\n        get initialBookmark() {\n          return this._initialized ? this._initialBookmark : null;\n        }\n\n        get initialRotation() {\n          return this._initialized ? this._initialRotation : null;\n        }\n\n        _pushOrReplaceState(destination, forceReplace = false) {\n          const shouldReplace = forceReplace || !this._destination;\n          const newState = {\n            fingerprint: this._fingerprint,\n            uid: shouldReplace ? this._uid : this._uid + 1,\n            destination\n          };\n\n          this._updateInternalState(destination, newState.uid);\n\n          let newUrl;\n\n          if (this._updateUrl && destination && destination.hash) {\n            const baseUrl = document.location.href.split(\"#\")[0];\n\n            if (!baseUrl.startsWith(\"file://\")) {\n              newUrl = `${baseUrl}#${destination.hash}`;\n            }\n          }\n\n          if (shouldReplace) {\n            window.history.replaceState(newState, \"\", newUrl);\n          } else {\n            this._maxUid = this._uid;\n            window.history.pushState(newState, \"\", newUrl);\n          }\n        }\n\n        _tryPushCurrentPosition(temporary = false) {\n          if (!this._position) {\n            return;\n          }\n\n          let position = this._position;\n\n          if (temporary) {\n            position = Object.assign(Object.create(null), this._position);\n            position.temporary = true;\n          }\n\n          if (!this._destination) {\n            this._pushOrReplaceState(position);\n\n            return;\n          }\n\n          if (this._destination.temporary) {\n            this._pushOrReplaceState(position, true);\n\n            return;\n          }\n\n          if (this._destination.hash === position.hash) {\n            return;\n          }\n\n          if (!this._destination.page && (POSITION_UPDATED_THRESHOLD <= 0 || this._numPositionUpdates <= POSITION_UPDATED_THRESHOLD)) {\n            return;\n          }\n\n          let forceReplace = false;\n\n          if (this._destination.page >= position.first && this._destination.page <= position.page) {\n            if (this._destination.dest || !this._destination.first) {\n              return;\n            }\n\n            forceReplace = true;\n          }\n\n          this._pushOrReplaceState(position, forceReplace);\n        }\n\n        _isValidState(state, checkReload = false) {\n          if (!state) {\n            return false;\n          }\n\n          if (state.fingerprint !== this._fingerprint) {\n            if (checkReload) {\n              if (typeof state.fingerprint !== \"string\" || state.fingerprint.length !== this._fingerprint.length) {\n                return false;\n              }\n\n              const [perfEntry] = performance.getEntriesByType(\"navigation\");\n\n              if (!perfEntry || perfEntry.type !== \"reload\") {\n                return false;\n              }\n            } else {\n              return false;\n            }\n          }\n\n          if (!Number.isInteger(state.uid) || state.uid < 0) {\n            return false;\n          }\n\n          if (state.destination === null || typeof state.destination !== \"object\") {\n            return false;\n          }\n\n          return true;\n        }\n\n        _updateInternalState(destination, uid, removeTemporary = false) {\n          if (this._updateViewareaTimeout) {\n            clearTimeout(this._updateViewareaTimeout);\n            this._updateViewareaTimeout = null;\n          }\n\n          if (removeTemporary && destination && destination.temporary) {\n            delete destination.temporary;\n          }\n\n          this._destination = destination;\n          this._uid = uid;\n          this._numPositionUpdates = 0;\n        }\n\n        _parseCurrentHash(checkNameddest = false) {\n          const hash = unescape(getCurrentHash()).substring(1);\n          const params = (0, _ui_utils.parseQueryString)(hash);\n          const nameddest = params.nameddest || \"\";\n          let page = params.page | 0;\n\n          if (!(Number.isInteger(page) && page > 0 && page <= this.linkService.pagesCount) || checkNameddest && nameddest.length > 0) {\n            page = null;\n          }\n\n          return {\n            hash,\n            page,\n            rotation: this.linkService.rotation\n          };\n        }\n\n        _updateViewarea({\n          location\n        }) {\n          if (this._updateViewareaTimeout) {\n            clearTimeout(this._updateViewareaTimeout);\n            this._updateViewareaTimeout = null;\n          }\n\n          this._position = {\n            hash: this._isViewerInPresentationMode ? `page=${location.pageNumber}` : location.pdfOpenParams.substring(1),\n            page: this.linkService.page,\n            first: location.pageNumber,\n            rotation: location.rotation\n          };\n\n          if (this._popStateInProgress) {\n            return;\n          }\n\n          if (POSITION_UPDATED_THRESHOLD > 0 && this._isPagesLoaded && this._destination && !this._destination.page) {\n            this._numPositionUpdates++;\n          }\n\n          if (UPDATE_VIEWAREA_TIMEOUT > 0) {\n            this._updateViewareaTimeout = setTimeout(() => {\n              if (!this._popStateInProgress) {\n                this._tryPushCurrentPosition(true);\n              }\n\n              this._updateViewareaTimeout = null;\n            }, UPDATE_VIEWAREA_TIMEOUT);\n          }\n        }\n\n        _popState({\n          state\n        }) {\n          const newHash = getCurrentHash(),\n                hashChanged = this._currentHash !== newHash;\n          this._currentHash = newHash;\n\n          if (!state) {\n            this._uid++;\n\n            const {\n              hash,\n              page,\n              rotation\n            } = this._parseCurrentHash();\n\n            this._pushOrReplaceState({\n              hash,\n              page,\n              rotation\n            }, true);\n\n            return;\n          }\n\n          if (!this._isValidState(state)) {\n            return;\n          }\n\n          this._popStateInProgress = true;\n\n          if (hashChanged) {\n            this._blockHashChange++;\n            (0, _ui_utils.waitOnEventOrTimeout)({\n              target: window,\n              name: \"hashchange\",\n              delay: HASH_CHANGE_TIMEOUT\n            }).then(() => {\n              this._blockHashChange--;\n            });\n          }\n\n          const destination = state.destination;\n\n          this._updateInternalState(destination, state.uid, true);\n\n          if (this._uid > this._maxUid) {\n            this._maxUid = this._uid;\n          }\n\n          if ((0, _ui_utils.isValidRotation)(destination.rotation)) {\n            this.linkService.rotation = destination.rotation;\n          }\n\n          if (destination.dest) {\n            this.linkService.navigateTo(destination.dest);\n          } else if (destination.hash) {\n            this.linkService.setHash(destination.hash);\n          } else if (destination.page) {\n            this.linkService.page = destination.page;\n          }\n\n          Promise.resolve().then(() => {\n            this._popStateInProgress = false;\n          });\n        }\n\n        _pageHide() {\n          if (!this._destination || this._destination.temporary) {\n            this._tryPushCurrentPosition();\n          }\n        }\n\n        _bindEvents() {\n          if (this._boundEvents) {\n            return;\n          }\n\n          this._boundEvents = {\n            updateViewarea: this._updateViewarea.bind(this),\n            popState: this._popState.bind(this),\n            pageHide: this._pageHide.bind(this)\n          };\n\n          this.eventBus._on(\"updateviewarea\", this._boundEvents.updateViewarea);\n\n          window.addEventListener(\"popstate\", this._boundEvents.popState);\n          window.addEventListener(\"pagehide\", this._boundEvents.pageHide);\n        }\n\n        _unbindEvents() {\n          if (!this._boundEvents) {\n            return;\n          }\n\n          this.eventBus._off(\"updateviewarea\", this._boundEvents.updateViewarea);\n\n          window.removeEventListener(\"popstate\", this._boundEvents.popState);\n          window.removeEventListener(\"pagehide\", this._boundEvents.pageHide);\n          this._boundEvents = null;\n        }\n\n      }\n\n      exports.PDFHistory = PDFHistory;\n\n      function isDestHashesEqual(destHash, pushHash) {\n        if (typeof destHash !== \"string\" || typeof pushHash !== \"string\") {\n          return false;\n        }\n\n        if (destHash === pushHash) {\n          return true;\n        }\n\n        const {\n          nameddest\n        } = (0, _ui_utils.parseQueryString)(destHash);\n\n        if (nameddest === pushHash) {\n          return true;\n        }\n\n        return false;\n      }\n\n      function isDestArraysEqual(firstDest, secondDest) {\n        function isEntryEqual(first, second) {\n          if (typeof first !== typeof second) {\n            return false;\n          }\n\n          if (Array.isArray(first) || Array.isArray(second)) {\n            return false;\n          }\n\n          if (first !== null && typeof first === \"object\" && second !== null) {\n            if (Object.keys(first).length !== Object.keys(second).length) {\n              return false;\n            }\n\n            for (const key in first) {\n              if (!isEntryEqual(first[key], second[key])) {\n                return false;\n              }\n            }\n\n            return true;\n          }\n\n          return first === second || Number.isNaN(first) && Number.isNaN(second);\n        }\n\n        if (!(Array.isArray(firstDest) && Array.isArray(secondDest))) {\n          return false;\n        }\n\n        if (firstDest.length !== secondDest.length) {\n          return false;\n        }\n\n        for (let i = 0, ii = firstDest.length; i < ii; i++) {\n          if (!isEntryEqual(firstDest[i], secondDest[i])) {\n            return false;\n          }\n        }\n\n        return true;\n      }\n      /***/\n\n    },\n    /* 13 */\n\n    /***/\n    function (module, exports, __w_pdfjs_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.PDFPageView = void 0;\n\n      var _ui_utils = __w_pdfjs_require__(3);\n\n      var _pdfjsLib = __w_pdfjs_require__(2);\n\n      var _pdf_rendering_queue = __w_pdfjs_require__(14);\n\n      var _viewer_compatibility = __w_pdfjs_require__(7);\n\n      const MAX_CANVAS_PIXELS = _viewer_compatibility.viewerCompatibilityParams.maxCanvasPixels || 16777216;\n\n      class PDFPageView {\n        constructor(options) {\n          const container = options.container;\n          const defaultViewport = options.defaultViewport;\n          this.id = options.id;\n          this.renderingId = \"page\" + this.id;\n          this.pdfPage = null;\n          this.pageLabel = null;\n          this.rotation = 0;\n          this.scale = options.scale || _ui_utils.DEFAULT_SCALE;\n          this.viewport = defaultViewport;\n          this.pdfPageRotate = defaultViewport.rotation;\n          this.hasRestrictedScaling = false;\n          this.textLayerMode = Number.isInteger(options.textLayerMode) ? options.textLayerMode : _ui_utils.TextLayerMode.ENABLE;\n          this.imageResourcesPath = options.imageResourcesPath || \"\";\n          this.renderInteractiveForms = options.renderInteractiveForms || false;\n          this.useOnlyCssZoom = options.useOnlyCssZoom || false;\n          this.maxCanvasPixels = options.maxCanvasPixels || MAX_CANVAS_PIXELS;\n          this.eventBus = options.eventBus;\n          this.renderingQueue = options.renderingQueue;\n          this.textLayerFactory = options.textLayerFactory;\n          this.annotationLayerFactory = options.annotationLayerFactory;\n          this.renderer = options.renderer || _ui_utils.RendererType.CANVAS;\n          this.enableWebGL = options.enableWebGL || false;\n          this.l10n = options.l10n || _ui_utils.NullL10n;\n          this.paintTask = null;\n          this.paintedViewportMap = new WeakMap();\n          this.renderingState = _pdf_rendering_queue.RenderingStates.INITIAL;\n          this.resume = null;\n          this.error = null;\n          this.annotationLayer = null;\n          this.textLayer = null;\n          this.zoomLayer = null;\n          const div = document.createElement(\"div\");\n          div.className = \"page\";\n          div.style.width = Math.floor(this.viewport.width) + \"px\";\n          div.style.height = Math.floor(this.viewport.height) + \"px\";\n          div.setAttribute(\"data-page-number\", this.id);\n          this.div = div;\n          container.appendChild(div);\n        }\n\n        setPdfPage(pdfPage) {\n          this.pdfPage = pdfPage;\n          this.pdfPageRotate = pdfPage.rotate;\n          const totalRotation = (this.rotation + this.pdfPageRotate) % 360;\n          this.viewport = pdfPage.getViewport({\n            scale: this.scale * _ui_utils.CSS_UNITS,\n            rotation: totalRotation\n          });\n          this.stats = pdfPage.stats;\n          this.reset();\n        }\n\n        destroy() {\n          this.reset();\n\n          if (this.pdfPage) {\n            this.pdfPage.cleanup();\n          }\n        }\n\n        _resetZoomLayer(removeFromDOM = false) {\n          if (!this.zoomLayer) {\n            return;\n          }\n\n          const zoomLayerCanvas = this.zoomLayer.firstChild;\n          this.paintedViewportMap.delete(zoomLayerCanvas);\n          zoomLayerCanvas.width = 0;\n          zoomLayerCanvas.height = 0;\n\n          if (removeFromDOM) {\n            this.zoomLayer.remove();\n          }\n\n          this.zoomLayer = null;\n        }\n\n        reset(keepZoomLayer = false, keepAnnotations = false) {\n          this.cancelRendering(keepAnnotations);\n          this.renderingState = _pdf_rendering_queue.RenderingStates.INITIAL;\n          const div = this.div;\n          div.style.width = Math.floor(this.viewport.width) + \"px\";\n          div.style.height = Math.floor(this.viewport.height) + \"px\";\n          const childNodes = div.childNodes;\n          const currentZoomLayerNode = keepZoomLayer && this.zoomLayer || null;\n          const currentAnnotationNode = keepAnnotations && this.annotationLayer && this.annotationLayer.div || null;\n\n          for (let i = childNodes.length - 1; i >= 0; i--) {\n            const node = childNodes[i];\n\n            if (currentZoomLayerNode === node || currentAnnotationNode === node) {\n              continue;\n            }\n\n            div.removeChild(node);\n          }\n\n          div.removeAttribute(\"data-loaded\");\n\n          if (currentAnnotationNode) {\n            this.annotationLayer.hide();\n          } else if (this.annotationLayer) {\n            this.annotationLayer.cancel();\n            this.annotationLayer = null;\n          }\n\n          if (!currentZoomLayerNode) {\n            if (this.canvas) {\n              this.paintedViewportMap.delete(this.canvas);\n              this.canvas.width = 0;\n              this.canvas.height = 0;\n              delete this.canvas;\n            }\n\n            this._resetZoomLayer();\n          }\n\n          if (this.svg) {\n            this.paintedViewportMap.delete(this.svg);\n            delete this.svg;\n          }\n\n          this.loadingIconDiv = document.createElement(\"div\");\n          this.loadingIconDiv.className = \"loadingIcon\";\n          div.appendChild(this.loadingIconDiv);\n        }\n\n        update(scale, rotation) {\n          this.scale = scale || this.scale;\n\n          if (typeof rotation !== \"undefined\") {\n            this.rotation = rotation;\n          }\n\n          const totalRotation = (this.rotation + this.pdfPageRotate) % 360;\n          this.viewport = this.viewport.clone({\n            scale: this.scale * _ui_utils.CSS_UNITS,\n            rotation: totalRotation\n          });\n\n          if (this.svg) {\n            this.cssTransform(this.svg, true);\n            this.eventBus.dispatch(\"pagerendered\", {\n              source: this,\n              pageNumber: this.id,\n              cssTransform: true,\n              timestamp: performance.now()\n            });\n            return;\n          }\n\n          let isScalingRestricted = false;\n\n          if (this.canvas && this.maxCanvasPixels > 0) {\n            const outputScale = this.outputScale;\n\n            if ((Math.floor(this.viewport.width) * outputScale.sx | 0) * (Math.floor(this.viewport.height) * outputScale.sy | 0) > this.maxCanvasPixels) {\n              isScalingRestricted = true;\n            }\n          }\n\n          if (this.canvas) {\n            if (this.useOnlyCssZoom || this.hasRestrictedScaling && isScalingRestricted) {\n              this.cssTransform(this.canvas, true);\n              this.eventBus.dispatch(\"pagerendered\", {\n                source: this,\n                pageNumber: this.id,\n                cssTransform: true,\n                timestamp: performance.now()\n              });\n              return;\n            }\n\n            if (!this.zoomLayer && !this.canvas.hasAttribute(\"hidden\")) {\n              this.zoomLayer = this.canvas.parentNode;\n              this.zoomLayer.style.position = \"absolute\";\n            }\n          }\n\n          if (this.zoomLayer) {\n            this.cssTransform(this.zoomLayer.firstChild);\n          }\n\n          this.reset(true, true);\n        }\n\n        cancelRendering(keepAnnotations = false) {\n          if (this.paintTask) {\n            this.paintTask.cancel();\n            this.paintTask = null;\n          }\n\n          this.resume = null;\n\n          if (this.textLayer) {\n            this.textLayer.cancel();\n            this.textLayer = null;\n          }\n\n          if (!keepAnnotations && this.annotationLayer) {\n            this.annotationLayer.cancel();\n            this.annotationLayer = null;\n          }\n        }\n\n        cssTransform(target, redrawAnnotations = false) {\n          const width = this.viewport.width;\n          const height = this.viewport.height;\n          const div = this.div;\n          target.style.width = target.parentNode.style.width = div.style.width = Math.floor(width) + \"px\";\n          target.style.height = target.parentNode.style.height = div.style.height = Math.floor(height) + \"px\";\n          const relativeRotation = this.viewport.rotation - this.paintedViewportMap.get(target).rotation;\n          const absRotation = Math.abs(relativeRotation);\n          let scaleX = 1,\n              scaleY = 1;\n\n          if (absRotation === 90 || absRotation === 270) {\n            scaleX = height / width;\n            scaleY = width / height;\n          }\n\n          const cssTransform = \"rotate(\" + relativeRotation + \"deg) \" + \"scale(\" + scaleX + \",\" + scaleY + \")\";\n          target.style.transform = cssTransform;\n\n          if (this.textLayer) {\n            const textLayerViewport = this.textLayer.viewport;\n            const textRelativeRotation = this.viewport.rotation - textLayerViewport.rotation;\n            const textAbsRotation = Math.abs(textRelativeRotation);\n            let scale = width / textLayerViewport.width;\n\n            if (textAbsRotation === 90 || textAbsRotation === 270) {\n              scale = width / textLayerViewport.height;\n            }\n\n            const textLayerDiv = this.textLayer.textLayerDiv;\n            let transX, transY;\n\n            switch (textAbsRotation) {\n              case 0:\n                transX = transY = 0;\n                break;\n\n              case 90:\n                transX = 0;\n                transY = \"-\" + textLayerDiv.style.height;\n                break;\n\n              case 180:\n                transX = \"-\" + textLayerDiv.style.width;\n                transY = \"-\" + textLayerDiv.style.height;\n                break;\n\n              case 270:\n                transX = \"-\" + textLayerDiv.style.width;\n                transY = 0;\n                break;\n\n              default:\n                console.error(\"Bad rotation value.\");\n                break;\n            }\n\n            textLayerDiv.style.transform = \"rotate(\" + textAbsRotation + \"deg) \" + \"scale(\" + scale + \", \" + scale + \") \" + \"translate(\" + transX + \", \" + transY + \")\";\n            textLayerDiv.style.transformOrigin = \"0% 0%\";\n          }\n\n          if (redrawAnnotations && this.annotationLayer) {\n            this.annotationLayer.render(this.viewport, \"display\");\n          }\n        }\n\n        get width() {\n          return this.viewport.width;\n        }\n\n        get height() {\n          return this.viewport.height;\n        }\n\n        getPagePoint(x, y) {\n          return this.viewport.convertToPdfPoint(x, y);\n        }\n\n        draw() {\n          if (this.renderingState !== _pdf_rendering_queue.RenderingStates.INITIAL) {\n            console.error(\"Must be in new state before drawing\");\n            this.reset();\n          }\n\n          const {\n            div,\n            pdfPage\n          } = this;\n\n          if (!pdfPage) {\n            this.renderingState = _pdf_rendering_queue.RenderingStates.FINISHED;\n\n            if (this.loadingIconDiv) {\n              div.removeChild(this.loadingIconDiv);\n              delete this.loadingIconDiv;\n            }\n\n            return Promise.reject(new Error(\"pdfPage is not loaded\"));\n          }\n\n          this.renderingState = _pdf_rendering_queue.RenderingStates.RUNNING;\n          const canvasWrapper = document.createElement(\"div\");\n          canvasWrapper.style.width = div.style.width;\n          canvasWrapper.style.height = div.style.height;\n          canvasWrapper.classList.add(\"canvasWrapper\");\n\n          if (this.annotationLayer && this.annotationLayer.div) {\n            div.insertBefore(canvasWrapper, this.annotationLayer.div);\n          } else {\n            div.appendChild(canvasWrapper);\n          }\n\n          let textLayer = null;\n\n          if (this.textLayerMode !== _ui_utils.TextLayerMode.DISABLE && this.textLayerFactory) {\n            const textLayerDiv = document.createElement(\"div\");\n            textLayerDiv.className = \"textLayer\";\n            textLayerDiv.style.width = canvasWrapper.style.width;\n            textLayerDiv.style.height = canvasWrapper.style.height;\n\n            if (this.annotationLayer && this.annotationLayer.div) {\n              div.insertBefore(textLayerDiv, this.annotationLayer.div);\n            } else {\n              div.appendChild(textLayerDiv);\n            }\n\n            textLayer = this.textLayerFactory.createTextLayerBuilder(textLayerDiv, this.id - 1, this.viewport, this.textLayerMode === _ui_utils.TextLayerMode.ENABLE_ENHANCE, this.eventBus);\n          }\n\n          this.textLayer = textLayer;\n          let renderContinueCallback = null;\n\n          if (this.renderingQueue) {\n            renderContinueCallback = cont => {\n              if (!this.renderingQueue.isHighestPriority(this)) {\n                this.renderingState = _pdf_rendering_queue.RenderingStates.PAUSED;\n\n                this.resume = () => {\n                  this.renderingState = _pdf_rendering_queue.RenderingStates.RUNNING;\n                  cont();\n                };\n\n                return;\n              }\n\n              cont();\n            };\n          }\n\n          const finishPaintTask = async error => {\n            if (paintTask === this.paintTask) {\n              this.paintTask = null;\n            }\n\n            if (error instanceof _pdfjsLib.RenderingCancelledException) {\n              this.error = null;\n              return;\n            }\n\n            this.renderingState = _pdf_rendering_queue.RenderingStates.FINISHED;\n\n            if (this.loadingIconDiv) {\n              div.removeChild(this.loadingIconDiv);\n              delete this.loadingIconDiv;\n            }\n\n            this._resetZoomLayer(true);\n\n            this.error = error;\n            this.stats = pdfPage.stats;\n            this.eventBus.dispatch(\"pagerendered\", {\n              source: this,\n              pageNumber: this.id,\n              cssTransform: false,\n              timestamp: performance.now()\n            });\n\n            if (error) {\n              throw error;\n            }\n          };\n\n          const paintTask = this.renderer === _ui_utils.RendererType.SVG ? this.paintOnSvg(canvasWrapper) : this.paintOnCanvas(canvasWrapper);\n          paintTask.onRenderContinue = renderContinueCallback;\n          this.paintTask = paintTask;\n          const resultPromise = paintTask.promise.then(function () {\n            return finishPaintTask(null).then(function () {\n              if (textLayer) {\n                const readableStream = pdfPage.streamTextContent({\n                  normalizeWhitespace: true\n                });\n                textLayer.setTextContentStream(readableStream);\n                textLayer.render();\n              }\n            });\n          }, function (reason) {\n            return finishPaintTask(reason);\n          });\n\n          if (this.annotationLayerFactory) {\n            if (!this.annotationLayer) {\n              this.annotationLayer = this.annotationLayerFactory.createAnnotationLayerBuilder(div, pdfPage, this.imageResourcesPath, this.renderInteractiveForms, this.l10n);\n            }\n\n            this.annotationLayer.render(this.viewport, \"display\");\n          }\n\n          div.setAttribute(\"data-loaded\", true);\n          this.eventBus.dispatch(\"pagerender\", {\n            source: this,\n            pageNumber: this.id\n          });\n          return resultPromise;\n        }\n\n        paintOnCanvas(canvasWrapper) {\n          const renderCapability = (0, _pdfjsLib.createPromiseCapability)();\n          const result = {\n            promise: renderCapability.promise,\n\n            onRenderContinue(cont) {\n              cont();\n            },\n\n            cancel() {\n              renderTask.cancel();\n            }\n\n          };\n          const viewport = this.viewport;\n          const canvas = document.createElement(\"canvas\");\n          this.l10n.get(\"page_canvas\", {\n            page: this.id\n          }, \"Page {{page}}\").then(msg => {\n            canvas.setAttribute(\"aria-label\", msg);\n          });\n          canvas.setAttribute(\"hidden\", \"hidden\");\n          let isCanvasHidden = true;\n\n          const showCanvas = function () {\n            if (isCanvasHidden) {\n              canvas.removeAttribute(\"hidden\");\n              isCanvasHidden = false;\n            }\n          };\n\n          canvasWrapper.appendChild(canvas);\n          this.canvas = canvas;\n          canvas.mozOpaque = true;\n          const ctx = canvas.getContext(\"2d\", {\n            alpha: false\n          });\n          const outputScale = (0, _ui_utils.getOutputScale)(ctx);\n          this.outputScale = outputScale;\n\n          if (this.useOnlyCssZoom) {\n            const actualSizeViewport = viewport.clone({\n              scale: _ui_utils.CSS_UNITS\n            });\n            outputScale.sx *= actualSizeViewport.width / viewport.width;\n            outputScale.sy *= actualSizeViewport.height / viewport.height;\n            outputScale.scaled = true;\n          }\n\n          if (this.maxCanvasPixels > 0) {\n            const pixelsInViewport = viewport.width * viewport.height;\n            const maxScale = Math.sqrt(this.maxCanvasPixels / pixelsInViewport);\n\n            if (outputScale.sx > maxScale || outputScale.sy > maxScale) {\n              outputScale.sx = maxScale;\n              outputScale.sy = maxScale;\n              outputScale.scaled = true;\n              this.hasRestrictedScaling = true;\n            } else {\n              this.hasRestrictedScaling = false;\n            }\n          }\n\n          const sfx = (0, _ui_utils.approximateFraction)(outputScale.sx);\n          const sfy = (0, _ui_utils.approximateFraction)(outputScale.sy);\n          canvas.width = (0, _ui_utils.roundToDivide)(viewport.width * outputScale.sx, sfx[0]);\n          canvas.height = (0, _ui_utils.roundToDivide)(viewport.height * outputScale.sy, sfy[0]);\n          canvas.style.width = (0, _ui_utils.roundToDivide)(viewport.width, sfx[1]) + \"px\";\n          canvas.style.height = (0, _ui_utils.roundToDivide)(viewport.height, sfy[1]) + \"px\";\n          this.paintedViewportMap.set(canvas, viewport);\n          const transform = !outputScale.scaled ? null : [outputScale.sx, 0, 0, outputScale.sy, 0, 0];\n          const renderContext = {\n            canvasContext: ctx,\n            transform,\n            viewport: this.viewport,\n            enableWebGL: this.enableWebGL,\n            renderInteractiveForms: this.renderInteractiveForms\n          };\n          const renderTask = this.pdfPage.render(renderContext);\n\n          renderTask.onContinue = function (cont) {\n            showCanvas();\n\n            if (result.onRenderContinue) {\n              result.onRenderContinue(cont);\n            } else {\n              cont();\n            }\n          };\n\n          renderTask.promise.then(function () {\n            showCanvas();\n            renderCapability.resolve(undefined);\n          }, function (error) {\n            showCanvas();\n            renderCapability.reject(error);\n          });\n          return result;\n        }\n\n        paintOnSvg(wrapper) {\n          let cancelled = false;\n\n          const ensureNotCancelled = () => {\n            if (cancelled) {\n              throw new _pdfjsLib.RenderingCancelledException(`Rendering cancelled, page ${this.id}`, \"svg\");\n            }\n          };\n\n          const pdfPage = this.pdfPage;\n          const actualSizeViewport = this.viewport.clone({\n            scale: _ui_utils.CSS_UNITS\n          });\n          const promise = pdfPage.getOperatorList().then(opList => {\n            ensureNotCancelled();\n            const svgGfx = new _pdfjsLib.SVGGraphics(pdfPage.commonObjs, pdfPage.objs);\n            return svgGfx.getSVG(opList, actualSizeViewport).then(svg => {\n              ensureNotCancelled();\n              this.svg = svg;\n              this.paintedViewportMap.set(svg, actualSizeViewport);\n              svg.style.width = wrapper.style.width;\n              svg.style.height = wrapper.style.height;\n              this.renderingState = _pdf_rendering_queue.RenderingStates.FINISHED;\n              wrapper.appendChild(svg);\n            });\n          });\n          return {\n            promise,\n\n            onRenderContinue(cont) {\n              cont();\n            },\n\n            cancel() {\n              cancelled = true;\n            }\n\n          };\n        }\n\n        setPageLabel(label) {\n          this.pageLabel = typeof label === \"string\" ? label : null;\n\n          if (this.pageLabel !== null) {\n            this.div.setAttribute(\"data-page-label\", this.pageLabel);\n          } else {\n            this.div.removeAttribute(\"data-page-label\");\n          }\n        }\n\n      }\n\n      exports.PDFPageView = PDFPageView;\n      /***/\n    },\n    /* 14 */\n\n    /***/\n    function (module, exports, __w_pdfjs_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.PDFRenderingQueue = exports.RenderingStates = void 0;\n      const CLEANUP_TIMEOUT = 30000;\n      const RenderingStates = {\n        INITIAL: 0,\n        RUNNING: 1,\n        PAUSED: 2,\n        FINISHED: 3\n      };\n      exports.RenderingStates = RenderingStates;\n\n      class PDFRenderingQueue {\n        constructor() {\n          this.pdfViewer = null;\n          this.pdfThumbnailViewer = null;\n          this.onIdle = null;\n          this.highestPriorityPage = null;\n          this.idleTimeout = null;\n          this.printing = false;\n          this.isThumbnailViewEnabled = false;\n        }\n\n        setViewer(pdfViewer) {\n          this.pdfViewer = pdfViewer;\n        }\n\n        setThumbnailViewer(pdfThumbnailViewer) {\n          this.pdfThumbnailViewer = pdfThumbnailViewer;\n        }\n\n        isHighestPriority(view) {\n          return this.highestPriorityPage === view.renderingId;\n        }\n\n        renderHighestPriority(currentlyVisiblePages) {\n          if (this.idleTimeout) {\n            clearTimeout(this.idleTimeout);\n            this.idleTimeout = null;\n          }\n\n          if (this.pdfViewer.forceRendering(currentlyVisiblePages)) {\n            return;\n          }\n\n          if (this.pdfThumbnailViewer && this.isThumbnailViewEnabled) {\n            if (this.pdfThumbnailViewer.forceRendering()) {\n              return;\n            }\n          }\n\n          if (this.printing) {\n            return;\n          }\n\n          if (this.onIdle) {\n            this.idleTimeout = setTimeout(this.onIdle.bind(this), CLEANUP_TIMEOUT);\n          }\n        }\n\n        getHighestPriority(visible, views, scrolledDown) {\n          const visibleViews = visible.views;\n          const numVisible = visibleViews.length;\n\n          if (numVisible === 0) {\n            return null;\n          }\n\n          for (let i = 0; i < numVisible; ++i) {\n            const view = visibleViews[i].view;\n\n            if (!this.isViewFinished(view)) {\n              return view;\n            }\n          }\n\n          if (scrolledDown) {\n            const nextPageIndex = visible.last.id;\n\n            if (views[nextPageIndex] && !this.isViewFinished(views[nextPageIndex])) {\n              return views[nextPageIndex];\n            }\n          } else {\n            const previousPageIndex = visible.first.id - 2;\n\n            if (views[previousPageIndex] && !this.isViewFinished(views[previousPageIndex])) {\n              return views[previousPageIndex];\n            }\n          }\n\n          return null;\n        }\n\n        isViewFinished(view) {\n          return view.renderingState === RenderingStates.FINISHED;\n        }\n\n        renderView(view) {\n          switch (view.renderingState) {\n            case RenderingStates.FINISHED:\n              return false;\n\n            case RenderingStates.PAUSED:\n              this.highestPriorityPage = view.renderingId;\n              view.resume();\n              break;\n\n            case RenderingStates.RUNNING:\n              this.highestPriorityPage = view.renderingId;\n              break;\n\n            case RenderingStates.INITIAL:\n              this.highestPriorityPage = view.renderingId;\n              view.draw().finally(() => {\n                this.renderHighestPriority();\n              }).catch(reason => {\n                console.error(`renderView: \"${reason}\"`);\n              });\n              break;\n          }\n\n          return true;\n        }\n\n      }\n\n      exports.PDFRenderingQueue = PDFRenderingQueue;\n      /***/\n    },\n    /* 15 */\n\n    /***/\n    function (module, exports, __w_pdfjs_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.PDFSinglePageViewer = void 0;\n\n      var _base_viewer = __w_pdfjs_require__(16);\n\n      var _pdfjsLib = __w_pdfjs_require__(2);\n\n      class PDFSinglePageViewer extends _base_viewer.BaseViewer {\n        constructor(options) {\n          super(options);\n\n          this.eventBus._on(\"pagesinit\", evt => {\n            this._ensurePageViewVisible();\n          });\n        }\n\n        get _viewerElement() {\n          return (0, _pdfjsLib.shadow)(this, \"_viewerElement\", this._shadowViewer);\n        }\n\n        _resetView() {\n          super._resetView();\n\n          this._previousPageNumber = 1;\n          this._shadowViewer = document.createDocumentFragment();\n          this._updateScrollDown = null;\n        }\n\n        _ensurePageViewVisible() {\n          const pageView = this._pages[this._currentPageNumber - 1];\n          const previousPageView = this._pages[this._previousPageNumber - 1];\n          const viewerNodes = this.viewer.childNodes;\n\n          switch (viewerNodes.length) {\n            case 0:\n              this.viewer.appendChild(pageView.div);\n              break;\n\n            case 1:\n              if (viewerNodes[0] !== previousPageView.div) {\n                throw new Error(\"_ensurePageViewVisible: Unexpected previously visible page.\");\n              }\n\n              if (pageView === previousPageView) {\n                break;\n              }\n\n              this._shadowViewer.appendChild(previousPageView.div);\n\n              this.viewer.appendChild(pageView.div);\n              this.container.scrollTop = 0;\n              break;\n\n            default:\n              throw new Error(\"_ensurePageViewVisible: Only one page should be visible at a time.\");\n          }\n\n          this._previousPageNumber = this._currentPageNumber;\n        }\n\n        _scrollUpdate() {\n          if (this._updateScrollDown) {\n            this._updateScrollDown();\n          }\n\n          super._scrollUpdate();\n        }\n\n        _scrollIntoView({\n          pageDiv,\n          pageSpot = null,\n          pageNumber = null\n        }) {\n          if (pageNumber) {\n            this._setCurrentPageNumber(pageNumber);\n          }\n\n          const scrolledDown = this._currentPageNumber >= this._previousPageNumber;\n\n          this._ensurePageViewVisible();\n\n          this.update();\n\n          super._scrollIntoView({\n            pageDiv,\n            pageSpot,\n            pageNumber\n          });\n\n          this._updateScrollDown = () => {\n            this.scroll.down = scrolledDown;\n            this._updateScrollDown = null;\n          };\n        }\n\n        _getVisiblePages() {\n          return this._getCurrentVisiblePage();\n        }\n\n        _updateHelper(visiblePages) {}\n\n        get _isScrollModeHorizontal() {\n          return (0, _pdfjsLib.shadow)(this, \"_isScrollModeHorizontal\", false);\n        }\n\n        _updateScrollMode() {}\n\n        _updateSpreadMode() {}\n\n      }\n\n      exports.PDFSinglePageViewer = PDFSinglePageViewer;\n      /***/\n    },\n    /* 16 */\n\n    /***/\n    function (module, exports, __w_pdfjs_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.BaseViewer = void 0;\n\n      var _ui_utils = __w_pdfjs_require__(3);\n\n      var _pdf_rendering_queue = __w_pdfjs_require__(14);\n\n      var _annotation_layer_builder = __w_pdfjs_require__(1);\n\n      var _pdfjsLib = __w_pdfjs_require__(2);\n\n      var _pdf_page_view = __w_pdfjs_require__(13);\n\n      var _pdf_link_service = __w_pdfjs_require__(4);\n\n      var _text_layer_builder = __w_pdfjs_require__(5);\n\n      const DEFAULT_CACHE_SIZE = 10;\n\n      function PDFPageViewBuffer(size) {\n        const data = [];\n\n        this.push = function (view) {\n          const i = data.indexOf(view);\n\n          if (i >= 0) {\n            data.splice(i, 1);\n          }\n\n          data.push(view);\n\n          if (data.length > size) {\n            data.shift().destroy();\n          }\n        };\n\n        this.resize = function (newSize, pagesToKeep) {\n          size = newSize;\n\n          if (pagesToKeep) {\n            const pageIdsToKeep = new Set();\n\n            for (let i = 0, iMax = pagesToKeep.length; i < iMax; ++i) {\n              pageIdsToKeep.add(pagesToKeep[i].id);\n            }\n\n            (0, _ui_utils.moveToEndOfArray)(data, function (page) {\n              return pageIdsToKeep.has(page.id);\n            });\n          }\n\n          while (data.length > size) {\n            data.shift().destroy();\n          }\n        };\n      }\n\n      function isSameScale(oldScale, newScale) {\n        if (newScale === oldScale) {\n          return true;\n        }\n\n        if (Math.abs(newScale - oldScale) < 1e-15) {\n          return true;\n        }\n\n        return false;\n      }\n\n      class BaseViewer {\n        constructor(options) {\n          if (this.constructor === BaseViewer) {\n            throw new Error(\"Cannot initialize BaseViewer.\");\n          }\n\n          this._name = this.constructor.name;\n          this.container = options.container;\n          this.viewer = options.viewer || options.container.firstElementChild;\n          this.eventBus = options.eventBus;\n          this.linkService = options.linkService || new _pdf_link_service.SimpleLinkService();\n          this.downloadManager = options.downloadManager || null;\n          this.findController = options.findController || null;\n          this.removePageBorders = options.removePageBorders || false;\n          this.textLayerMode = Number.isInteger(options.textLayerMode) ? options.textLayerMode : _ui_utils.TextLayerMode.ENABLE;\n          this.imageResourcesPath = options.imageResourcesPath || \"\";\n          this.renderInteractiveForms = options.renderInteractiveForms || false;\n          this.enablePrintAutoRotate = options.enablePrintAutoRotate || false;\n          this.renderer = options.renderer || _ui_utils.RendererType.CANVAS;\n          this.enableWebGL = options.enableWebGL || false;\n          this.useOnlyCssZoom = options.useOnlyCssZoom || false;\n          this.maxCanvasPixels = options.maxCanvasPixels;\n          this.l10n = options.l10n || _ui_utils.NullL10n;\n          this.defaultRenderingQueue = !options.renderingQueue;\n\n          if (this.defaultRenderingQueue) {\n            this.renderingQueue = new _pdf_rendering_queue.PDFRenderingQueue();\n            this.renderingQueue.setViewer(this);\n          } else {\n            this.renderingQueue = options.renderingQueue;\n          }\n\n          this.scroll = (0, _ui_utils.watchScroll)(this.container, this._scrollUpdate.bind(this));\n          this.presentationModeState = _ui_utils.PresentationModeState.UNKNOWN;\n          this._onBeforeDraw = this._onAfterDraw = null;\n\n          this._resetView();\n\n          if (this.removePageBorders) {\n            this.viewer.classList.add(\"removePageBorders\");\n          }\n\n          Promise.resolve().then(() => {\n            this.eventBus.dispatch(\"baseviewerinit\", {\n              source: this\n            });\n          });\n        }\n\n        get pagesCount() {\n          return this._pages.length;\n        }\n\n        getPageView(index) {\n          return this._pages[index];\n        }\n\n        get pageViewsReady() {\n          if (!this._pagesCapability.settled) {\n            return false;\n          }\n\n          return this._pages.every(function (pageView) {\n            return pageView && pageView.pdfPage;\n          });\n        }\n\n        get currentPageNumber() {\n          return this._currentPageNumber;\n        }\n\n        set currentPageNumber(val) {\n          if (!Number.isInteger(val)) {\n            throw new Error(\"Invalid page number.\");\n          }\n\n          if (!this.pdfDocument) {\n            return;\n          }\n\n          if (!this._setCurrentPageNumber(val, true)) {\n            console.error(`${this._name}.currentPageNumber: \"${val}\" is not a valid page.`);\n          }\n        }\n\n        _setCurrentPageNumber(val, resetCurrentPageView = false) {\n          if (this._currentPageNumber === val) {\n            if (resetCurrentPageView) {\n              this._resetCurrentPageView();\n            }\n\n            return true;\n          }\n\n          if (!(0 < val && val <= this.pagesCount)) {\n            return false;\n          }\n\n          this._currentPageNumber = val;\n          this.eventBus.dispatch(\"pagechanging\", {\n            source: this,\n            pageNumber: val,\n            pageLabel: this._pageLabels && this._pageLabels[val - 1]\n          });\n\n          if (resetCurrentPageView) {\n            this._resetCurrentPageView();\n          }\n\n          return true;\n        }\n\n        get currentPageLabel() {\n          return this._pageLabels && this._pageLabels[this._currentPageNumber - 1];\n        }\n\n        set currentPageLabel(val) {\n          if (!this.pdfDocument) {\n            return;\n          }\n\n          let page = val | 0;\n\n          if (this._pageLabels) {\n            const i = this._pageLabels.indexOf(val);\n\n            if (i >= 0) {\n              page = i + 1;\n            }\n          }\n\n          if (!this._setCurrentPageNumber(page, true)) {\n            console.error(`${this._name}.currentPageLabel: \"${val}\" is not a valid page.`);\n          }\n        }\n\n        get currentScale() {\n          return this._currentScale !== _ui_utils.UNKNOWN_SCALE ? this._currentScale : _ui_utils.DEFAULT_SCALE;\n        }\n\n        set currentScale(val) {\n          if (isNaN(val)) {\n            throw new Error(\"Invalid numeric scale.\");\n          }\n\n          if (!this.pdfDocument) {\n            return;\n          }\n\n          this._setScale(val, false);\n        }\n\n        get currentScaleValue() {\n          return this._currentScaleValue;\n        }\n\n        set currentScaleValue(val) {\n          if (!this.pdfDocument) {\n            return;\n          }\n\n          this._setScale(val, false);\n        }\n\n        get pagesRotation() {\n          return this._pagesRotation;\n        }\n\n        set pagesRotation(rotation) {\n          if (!(0, _ui_utils.isValidRotation)(rotation)) {\n            throw new Error(\"Invalid pages rotation angle.\");\n          }\n\n          if (!this.pdfDocument) {\n            return;\n          }\n\n          if (this._pagesRotation === rotation) {\n            return;\n          }\n\n          this._pagesRotation = rotation;\n          const pageNumber = this._currentPageNumber;\n\n          for (let i = 0, ii = this._pages.length; i < ii; i++) {\n            const pageView = this._pages[i];\n            pageView.update(pageView.scale, rotation);\n          }\n\n          if (this._currentScaleValue) {\n            this._setScale(this._currentScaleValue, true);\n          }\n\n          this.eventBus.dispatch(\"rotationchanging\", {\n            source: this,\n            pagesRotation: rotation,\n            pageNumber\n          });\n\n          if (this.defaultRenderingQueue) {\n            this.update();\n          }\n        }\n\n        get firstPagePromise() {\n          return this.pdfDocument ? this._firstPageCapability.promise : null;\n        }\n\n        get onePageRendered() {\n          return this.pdfDocument ? this._onePageRenderedCapability.promise : null;\n        }\n\n        get pagesPromise() {\n          return this.pdfDocument ? this._pagesCapability.promise : null;\n        }\n\n        get _viewerElement() {\n          throw new Error(\"Not implemented: _viewerElement\");\n        }\n\n        _onePageRenderedOrForceFetch() {\n          if (!this.container.offsetParent || this._getVisiblePages().views.length === 0) {\n            return Promise.resolve();\n          }\n\n          return this._onePageRenderedCapability.promise;\n        }\n\n        setDocument(pdfDocument) {\n          if (this.pdfDocument) {\n            this._cancelRendering();\n\n            this._resetView();\n\n            if (this.findController) {\n              this.findController.setDocument(null);\n            }\n          }\n\n          this.pdfDocument = pdfDocument;\n\n          if (!pdfDocument) {\n            return;\n          }\n\n          const pagesCount = pdfDocument.numPages;\n          const firstPagePromise = pdfDocument.getPage(1);\n\n          this._pagesCapability.promise.then(() => {\n            this.eventBus.dispatch(\"pagesloaded\", {\n              source: this,\n              pagesCount\n            });\n          });\n\n          this._onBeforeDraw = evt => {\n            const pageView = this._pages[evt.pageNumber - 1];\n\n            if (!pageView) {\n              return;\n            }\n\n            this._buffer.push(pageView);\n          };\n\n          this.eventBus._on(\"pagerender\", this._onBeforeDraw);\n\n          this._onAfterDraw = evt => {\n            if (evt.cssTransform || this._onePageRenderedCapability.settled) {\n              return;\n            }\n\n            this._onePageRenderedCapability.resolve();\n\n            this.eventBus._off(\"pagerendered\", this._onAfterDraw);\n\n            this._onAfterDraw = null;\n          };\n\n          this.eventBus._on(\"pagerendered\", this._onAfterDraw);\n\n          firstPagePromise.then(firstPdfPage => {\n            this._firstPageCapability.resolve(firstPdfPage);\n\n            const scale = this.currentScale;\n            const viewport = firstPdfPage.getViewport({\n              scale: scale * _ui_utils.CSS_UNITS\n            });\n            const textLayerFactory = this.textLayerMode !== _ui_utils.TextLayerMode.DISABLE ? this : null;\n\n            for (let pageNum = 1; pageNum <= pagesCount; ++pageNum) {\n              const pageView = new _pdf_page_view.PDFPageView({\n                container: this._viewerElement,\n                eventBus: this.eventBus,\n                id: pageNum,\n                scale,\n                defaultViewport: viewport.clone(),\n                renderingQueue: this.renderingQueue,\n                textLayerFactory,\n                textLayerMode: this.textLayerMode,\n                annotationLayerFactory: this,\n                imageResourcesPath: this.imageResourcesPath,\n                renderInteractiveForms: this.renderInteractiveForms,\n                renderer: this.renderer,\n                enableWebGL: this.enableWebGL,\n                useOnlyCssZoom: this.useOnlyCssZoom,\n                maxCanvasPixels: this.maxCanvasPixels,\n                l10n: this.l10n\n              });\n\n              this._pages.push(pageView);\n            }\n\n            const firstPageView = this._pages[0];\n\n            if (firstPageView) {\n              firstPageView.setPdfPage(firstPdfPage);\n              this.linkService.cachePageRef(1, firstPdfPage.ref);\n            }\n\n            if (this._spreadMode !== _ui_utils.SpreadMode.NONE) {\n              this._updateSpreadMode();\n            }\n\n            this._onePageRenderedOrForceFetch().then(() => {\n              if (this.findController) {\n                this.findController.setDocument(pdfDocument);\n              }\n\n              if (pdfDocument.loadingParams.disableAutoFetch || pagesCount > 7500) {\n                this._pagesCapability.resolve();\n\n                return;\n              }\n\n              let getPagesLeft = pagesCount - 1;\n\n              if (getPagesLeft <= 0) {\n                this._pagesCapability.resolve();\n\n                return;\n              }\n\n              for (let pageNum = 2; pageNum <= pagesCount; ++pageNum) {\n                pdfDocument.getPage(pageNum).then(pdfPage => {\n                  const pageView = this._pages[pageNum - 1];\n\n                  if (!pageView.pdfPage) {\n                    pageView.setPdfPage(pdfPage);\n                  }\n\n                  this.linkService.cachePageRef(pageNum, pdfPage.ref);\n\n                  if (--getPagesLeft === 0) {\n                    this._pagesCapability.resolve();\n                  }\n                }, reason => {\n                  console.error(`Unable to get page ${pageNum} to initialize viewer`, reason);\n\n                  if (--getPagesLeft === 0) {\n                    this._pagesCapability.resolve();\n                  }\n                });\n              }\n            });\n\n            this.eventBus.dispatch(\"pagesinit\", {\n              source: this\n            });\n\n            if (this.defaultRenderingQueue) {\n              this.update();\n            }\n          }).catch(reason => {\n            console.error(\"Unable to initialize viewer\", reason);\n          });\n        }\n\n        setPageLabels(labels) {\n          if (!this.pdfDocument) {\n            return;\n          }\n\n          if (!labels) {\n            this._pageLabels = null;\n          } else if (!(Array.isArray(labels) && this.pdfDocument.numPages === labels.length)) {\n            this._pageLabels = null;\n            console.error(`${this._name}.setPageLabels: Invalid page labels.`);\n          } else {\n            this._pageLabels = labels;\n          }\n\n          for (let i = 0, ii = this._pages.length; i < ii; i++) {\n            const pageView = this._pages[i];\n            const label = this._pageLabels && this._pageLabels[i];\n            pageView.setPageLabel(label);\n          }\n        }\n\n        _resetView() {\n          this._pages = [];\n          this._currentPageNumber = 1;\n          this._currentScale = _ui_utils.UNKNOWN_SCALE;\n          this._currentScaleValue = null;\n          this._pageLabels = null;\n          this._buffer = new PDFPageViewBuffer(DEFAULT_CACHE_SIZE);\n          this._location = null;\n          this._pagesRotation = 0;\n          this._pagesRequests = new WeakMap();\n          this._firstPageCapability = (0, _pdfjsLib.createPromiseCapability)();\n          this._onePageRenderedCapability = (0, _pdfjsLib.createPromiseCapability)();\n          this._pagesCapability = (0, _pdfjsLib.createPromiseCapability)();\n          this._scrollMode = _ui_utils.ScrollMode.VERTICAL;\n          this._spreadMode = _ui_utils.SpreadMode.NONE;\n\n          if (this._onBeforeDraw) {\n            this.eventBus._off(\"pagerender\", this._onBeforeDraw);\n\n            this._onBeforeDraw = null;\n          }\n\n          if (this._onAfterDraw) {\n            this.eventBus._off(\"pagerendered\", this._onAfterDraw);\n\n            this._onAfterDraw = null;\n          }\n\n          this.viewer.textContent = \"\";\n\n          this._updateScrollMode();\n        }\n\n        _scrollUpdate() {\n          if (this.pagesCount === 0) {\n            return;\n          }\n\n          this.update();\n        }\n\n        _scrollIntoView({\n          pageDiv,\n          pageSpot = null,\n          pageNumber = null\n        }) {\n          (0, _ui_utils.scrollIntoView)(pageDiv, pageSpot);\n        }\n\n        _setScaleUpdatePages(newScale, newValue, noScroll = false, preset = false) {\n          this._currentScaleValue = newValue.toString();\n\n          if (isSameScale(this._currentScale, newScale)) {\n            if (preset) {\n              this.eventBus.dispatch(\"scalechanging\", {\n                source: this,\n                scale: newScale,\n                presetValue: newValue\n              });\n            }\n\n            return;\n          }\n\n          for (let i = 0, ii = this._pages.length; i < ii; i++) {\n            this._pages[i].update(newScale);\n          }\n\n          this._currentScale = newScale;\n\n          if (!noScroll) {\n            let page = this._currentPageNumber,\n                dest;\n\n            if (this._location && !(this.isInPresentationMode || this.isChangingPresentationMode)) {\n              page = this._location.pageNumber;\n              dest = [null, {\n                name: \"XYZ\"\n              }, this._location.left, this._location.top, null];\n            }\n\n            this.scrollPageIntoView({\n              pageNumber: page,\n              destArray: dest,\n              allowNegativeOffset: true\n            });\n          }\n\n          this.eventBus.dispatch(\"scalechanging\", {\n            source: this,\n            scale: newScale,\n            presetValue: preset ? newValue : undefined\n          });\n\n          if (this.defaultRenderingQueue) {\n            this.update();\n          }\n        }\n\n        _setScale(value, noScroll = false) {\n          let scale = parseFloat(value);\n\n          if (scale > 0) {\n            this._setScaleUpdatePages(scale, value, noScroll, false);\n          } else {\n            const currentPage = this._pages[this._currentPageNumber - 1];\n\n            if (!currentPage) {\n              return;\n            }\n\n            const noPadding = this.isInPresentationMode || this.removePageBorders;\n            let hPadding = noPadding ? 0 : _ui_utils.SCROLLBAR_PADDING;\n            let vPadding = noPadding ? 0 : _ui_utils.VERTICAL_PADDING;\n\n            if (!noPadding && this._isScrollModeHorizontal) {\n              [hPadding, vPadding] = [vPadding, hPadding];\n            }\n\n            const pageWidthScale = (this.container.clientWidth - hPadding) / currentPage.width * currentPage.scale;\n            const pageHeightScale = (this.container.clientHeight - vPadding) / currentPage.height * currentPage.scale;\n\n            switch (value) {\n              case \"page-actual\":\n                scale = 1;\n                break;\n\n              case \"page-width\":\n                scale = pageWidthScale;\n                break;\n\n              case \"page-height\":\n                scale = pageHeightScale;\n                break;\n\n              case \"page-fit\":\n                scale = Math.min(pageWidthScale, pageHeightScale);\n                break;\n\n              case \"auto\":\n                const horizontalScale = (0, _ui_utils.isPortraitOrientation)(currentPage) ? pageWidthScale : Math.min(pageHeightScale, pageWidthScale);\n                scale = Math.min(_ui_utils.MAX_AUTO_SCALE, horizontalScale);\n                break;\n\n              default:\n                console.error(`${this._name}._setScale: \"${value}\" is an unknown zoom value.`);\n                return;\n            }\n\n            this._setScaleUpdatePages(scale, value, noScroll, true);\n          }\n        }\n\n        _resetCurrentPageView() {\n          if (this.isInPresentationMode) {\n            this._setScale(this._currentScaleValue, true);\n          }\n\n          const pageView = this._pages[this._currentPageNumber - 1];\n\n          this._scrollIntoView({\n            pageDiv: pageView.div\n          });\n        }\n\n        scrollPageIntoView({\n          pageNumber,\n          destArray = null,\n          allowNegativeOffset = false,\n          ignoreDestinationZoom = false\n        }) {\n          if (!this.pdfDocument) {\n            return;\n          }\n\n          const pageView = Number.isInteger(pageNumber) && this._pages[pageNumber - 1];\n\n          if (!pageView) {\n            console.error(`${this._name}.scrollPageIntoView: ` + `\"${pageNumber}\" is not a valid pageNumber parameter.`);\n            return;\n          }\n\n          if (this.isInPresentationMode || !destArray) {\n            this._setCurrentPageNumber(pageNumber, true);\n\n            return;\n          }\n\n          let x = 0,\n              y = 0;\n          let width = 0,\n              height = 0,\n              widthScale,\n              heightScale;\n          const changeOrientation = pageView.rotation % 180 !== 0;\n          const pageWidth = (changeOrientation ? pageView.height : pageView.width) / pageView.scale / _ui_utils.CSS_UNITS;\n          const pageHeight = (changeOrientation ? pageView.width : pageView.height) / pageView.scale / _ui_utils.CSS_UNITS;\n          let scale = 0;\n\n          switch (destArray[1].name) {\n            case \"XYZ\":\n              x = destArray[2];\n              y = destArray[3];\n              scale = destArray[4];\n              x = x !== null ? x : 0;\n              y = y !== null ? y : pageHeight;\n              break;\n\n            case \"Fit\":\n            case \"FitB\":\n              scale = \"page-fit\";\n              break;\n\n            case \"FitH\":\n            case \"FitBH\":\n              y = destArray[2];\n              scale = \"page-width\";\n\n              if (y === null && this._location) {\n                x = this._location.left;\n                y = this._location.top;\n              }\n\n              break;\n\n            case \"FitV\":\n            case \"FitBV\":\n              x = destArray[2];\n              width = pageWidth;\n              height = pageHeight;\n              scale = \"page-height\";\n              break;\n\n            case \"FitR\":\n              x = destArray[2];\n              y = destArray[3];\n              width = destArray[4] - x;\n              height = destArray[5] - y;\n              const hPadding = this.removePageBorders ? 0 : _ui_utils.SCROLLBAR_PADDING;\n              const vPadding = this.removePageBorders ? 0 : _ui_utils.VERTICAL_PADDING;\n              widthScale = (this.container.clientWidth - hPadding) / width / _ui_utils.CSS_UNITS;\n              heightScale = (this.container.clientHeight - vPadding) / height / _ui_utils.CSS_UNITS;\n              scale = Math.min(Math.abs(widthScale), Math.abs(heightScale));\n              break;\n\n            default:\n              console.error(`${this._name}.scrollPageIntoView: ` + `\"${destArray[1].name}\" is not a valid destination type.`);\n              return;\n          }\n\n          if (!ignoreDestinationZoom) {\n            if (scale && scale !== this._currentScale) {\n              this.currentScaleValue = scale;\n            } else if (this._currentScale === _ui_utils.UNKNOWN_SCALE) {\n              this.currentScaleValue = _ui_utils.DEFAULT_SCALE_VALUE;\n            }\n          }\n\n          if (scale === \"page-fit\" && !destArray[4]) {\n            this._scrollIntoView({\n              pageDiv: pageView.div,\n              pageNumber\n            });\n\n            return;\n          }\n\n          const boundingRect = [pageView.viewport.convertToViewportPoint(x, y), pageView.viewport.convertToViewportPoint(x + width, y + height)];\n          let left = Math.min(boundingRect[0][0], boundingRect[1][0]);\n          let top = Math.min(boundingRect[0][1], boundingRect[1][1]);\n\n          if (!allowNegativeOffset) {\n            left = Math.max(left, 0);\n            top = Math.max(top, 0);\n          }\n\n          this._scrollIntoView({\n            pageDiv: pageView.div,\n            pageSpot: {\n              left,\n              top\n            },\n            pageNumber\n          });\n        }\n\n        _updateLocation(firstPage) {\n          const currentScale = this._currentScale;\n          const currentScaleValue = this._currentScaleValue;\n          const normalizedScaleValue = parseFloat(currentScaleValue) === currentScale ? Math.round(currentScale * 10000) / 100 : currentScaleValue;\n          const pageNumber = firstPage.id;\n          let pdfOpenParams = \"#page=\" + pageNumber;\n          pdfOpenParams += \"&zoom=\" + normalizedScaleValue;\n          const currentPageView = this._pages[pageNumber - 1];\n          const container = this.container;\n          const topLeft = currentPageView.getPagePoint(container.scrollLeft - firstPage.x, container.scrollTop - firstPage.y);\n          const intLeft = Math.round(topLeft[0]);\n          const intTop = Math.round(topLeft[1]);\n          pdfOpenParams += \",\" + intLeft + \",\" + intTop;\n          this._location = {\n            pageNumber,\n            scale: normalizedScaleValue,\n            top: intTop,\n            left: intLeft,\n            rotation: this._pagesRotation,\n            pdfOpenParams\n          };\n        }\n\n        _updateHelper(visiblePages) {\n          throw new Error(\"Not implemented: _updateHelper\");\n        }\n\n        update() {\n          const visible = this._getVisiblePages();\n\n          const visiblePages = visible.views,\n                numVisiblePages = visiblePages.length;\n\n          if (numVisiblePages === 0) {\n            return;\n          }\n\n          const newCacheSize = Math.max(DEFAULT_CACHE_SIZE, 2 * numVisiblePages + 1);\n\n          this._buffer.resize(newCacheSize, visiblePages);\n\n          this.renderingQueue.renderHighestPriority(visible);\n\n          this._updateHelper(visiblePages);\n\n          this._updateLocation(visible.first);\n\n          this.eventBus.dispatch(\"updateviewarea\", {\n            source: this,\n            location: this._location\n          });\n        }\n\n        containsElement(element) {\n          return this.container.contains(element);\n        }\n\n        focus() {\n          this.container.focus();\n        }\n\n        get _isScrollModeHorizontal() {\n          return this.isInPresentationMode ? false : this._scrollMode === _ui_utils.ScrollMode.HORIZONTAL;\n        }\n\n        get isInPresentationMode() {\n          return this.presentationModeState === _ui_utils.PresentationModeState.FULLSCREEN;\n        }\n\n        get isChangingPresentationMode() {\n          return this.presentationModeState === _ui_utils.PresentationModeState.CHANGING;\n        }\n\n        get isHorizontalScrollbarEnabled() {\n          return this.isInPresentationMode ? false : this.container.scrollWidth > this.container.clientWidth;\n        }\n\n        get isVerticalScrollbarEnabled() {\n          return this.isInPresentationMode ? false : this.container.scrollHeight > this.container.clientHeight;\n        }\n\n        _getCurrentVisiblePage() {\n          if (!this.pagesCount) {\n            return {\n              views: []\n            };\n          }\n\n          const pageView = this._pages[this._currentPageNumber - 1];\n          const element = pageView.div;\n          const view = {\n            id: pageView.id,\n            x: element.offsetLeft + element.clientLeft,\n            y: element.offsetTop + element.clientTop,\n            view: pageView\n          };\n          return {\n            first: view,\n            last: view,\n            views: [view]\n          };\n        }\n\n        _getVisiblePages() {\n          return (0, _ui_utils.getVisibleElements)(this.container, this._pages, true, this._isScrollModeHorizontal);\n        }\n\n        isPageVisible(pageNumber) {\n          if (!this.pdfDocument) {\n            return false;\n          }\n\n          if (pageNumber < 1 || pageNumber > this.pagesCount) {\n            console.error(`${this._name}.isPageVisible: \"${pageNumber}\" is out of bounds.`);\n            return false;\n          }\n\n          return this._getVisiblePages().views.some(function (view) {\n            return view.id === pageNumber;\n          });\n        }\n\n        cleanup() {\n          for (let i = 0, ii = this._pages.length; i < ii; i++) {\n            if (this._pages[i] && this._pages[i].renderingState !== _pdf_rendering_queue.RenderingStates.FINISHED) {\n              this._pages[i].reset();\n            }\n          }\n        }\n\n        _cancelRendering() {\n          for (let i = 0, ii = this._pages.length; i < ii; i++) {\n            if (this._pages[i]) {\n              this._pages[i].cancelRendering();\n            }\n          }\n        }\n\n        _ensurePdfPageLoaded(pageView) {\n          if (pageView.pdfPage) {\n            return Promise.resolve(pageView.pdfPage);\n          }\n\n          if (this._pagesRequests.has(pageView)) {\n            return this._pagesRequests.get(pageView);\n          }\n\n          const promise = this.pdfDocument.getPage(pageView.id).then(pdfPage => {\n            if (!pageView.pdfPage) {\n              pageView.setPdfPage(pdfPage);\n            }\n\n            this._pagesRequests.delete(pageView);\n\n            return pdfPage;\n          }).catch(reason => {\n            console.error(\"Unable to get page for page view\", reason);\n\n            this._pagesRequests.delete(pageView);\n          });\n\n          this._pagesRequests.set(pageView, promise);\n\n          return promise;\n        }\n\n        forceRendering(currentlyVisiblePages) {\n          const visiblePages = currentlyVisiblePages || this._getVisiblePages();\n\n          const scrollAhead = this._isScrollModeHorizontal ? this.scroll.right : this.scroll.down;\n          const pageView = this.renderingQueue.getHighestPriority(visiblePages, this._pages, scrollAhead);\n\n          if (pageView) {\n            this._ensurePdfPageLoaded(pageView).then(() => {\n              this.renderingQueue.renderView(pageView);\n            });\n\n            return true;\n          }\n\n          return false;\n        }\n\n        createTextLayerBuilder(textLayerDiv, pageIndex, viewport, enhanceTextSelection = false, eventBus) {\n          return new _text_layer_builder.TextLayerBuilder({\n            textLayerDiv,\n            eventBus,\n            pageIndex,\n            viewport,\n            findController: this.isInPresentationMode ? null : this.findController,\n            enhanceTextSelection: this.isInPresentationMode ? false : enhanceTextSelection\n          });\n        }\n\n        createAnnotationLayerBuilder(pageDiv, pdfPage, imageResourcesPath = \"\", renderInteractiveForms = false, l10n = _ui_utils.NullL10n) {\n          return new _annotation_layer_builder.AnnotationLayerBuilder({\n            pageDiv,\n            pdfPage,\n            imageResourcesPath,\n            renderInteractiveForms,\n            linkService: this.linkService,\n            downloadManager: this.downloadManager,\n            l10n\n          });\n        }\n\n        get hasEqualPageSizes() {\n          const firstPageView = this._pages[0];\n\n          for (let i = 1, ii = this._pages.length; i < ii; ++i) {\n            const pageView = this._pages[i];\n\n            if (pageView.width !== firstPageView.width || pageView.height !== firstPageView.height) {\n              return false;\n            }\n          }\n\n          return true;\n        }\n\n        getPagesOverview() {\n          const pagesOverview = this._pages.map(function (pageView) {\n            const viewport = pageView.pdfPage.getViewport({\n              scale: 1\n            });\n            return {\n              width: viewport.width,\n              height: viewport.height,\n              rotation: viewport.rotation\n            };\n          });\n\n          if (!this.enablePrintAutoRotate) {\n            return pagesOverview;\n          }\n\n          const isFirstPagePortrait = (0, _ui_utils.isPortraitOrientation)(pagesOverview[0]);\n          return pagesOverview.map(function (size) {\n            if (isFirstPagePortrait === (0, _ui_utils.isPortraitOrientation)(size)) {\n              return size;\n            }\n\n            return {\n              width: size.height,\n              height: size.width,\n              rotation: (size.rotation + 90) % 360\n            };\n          });\n        }\n\n        get scrollMode() {\n          return this._scrollMode;\n        }\n\n        set scrollMode(mode) {\n          if (this._scrollMode === mode) {\n            return;\n          }\n\n          if (!(0, _ui_utils.isValidScrollMode)(mode)) {\n            throw new Error(`Invalid scroll mode: ${mode}`);\n          }\n\n          this._scrollMode = mode;\n          this.eventBus.dispatch(\"scrollmodechanged\", {\n            source: this,\n            mode\n          });\n\n          this._updateScrollMode(this._currentPageNumber);\n        }\n\n        _updateScrollMode(pageNumber = null) {\n          const scrollMode = this._scrollMode,\n                viewer = this.viewer;\n          viewer.classList.toggle(\"scrollHorizontal\", scrollMode === _ui_utils.ScrollMode.HORIZONTAL);\n          viewer.classList.toggle(\"scrollWrapped\", scrollMode === _ui_utils.ScrollMode.WRAPPED);\n\n          if (!this.pdfDocument || !pageNumber) {\n            return;\n          }\n\n          if (this._currentScaleValue && isNaN(this._currentScaleValue)) {\n            this._setScale(this._currentScaleValue, true);\n          }\n\n          this._setCurrentPageNumber(pageNumber, true);\n\n          this.update();\n        }\n\n        get spreadMode() {\n          return this._spreadMode;\n        }\n\n        set spreadMode(mode) {\n          if (this._spreadMode === mode) {\n            return;\n          }\n\n          if (!(0, _ui_utils.isValidSpreadMode)(mode)) {\n            throw new Error(`Invalid spread mode: ${mode}`);\n          }\n\n          this._spreadMode = mode;\n          this.eventBus.dispatch(\"spreadmodechanged\", {\n            source: this,\n            mode\n          });\n\n          this._updateSpreadMode(this._currentPageNumber);\n        }\n\n        _updateSpreadMode(pageNumber = null) {\n          if (!this.pdfDocument) {\n            return;\n          }\n\n          const viewer = this.viewer,\n                pages = this._pages;\n          viewer.textContent = \"\";\n\n          if (this._spreadMode === _ui_utils.SpreadMode.NONE) {\n            for (let i = 0, iMax = pages.length; i < iMax; ++i) {\n              viewer.appendChild(pages[i].div);\n            }\n          } else {\n            const parity = this._spreadMode - 1;\n            let spread = null;\n\n            for (let i = 0, iMax = pages.length; i < iMax; ++i) {\n              if (spread === null) {\n                spread = document.createElement(\"div\");\n                spread.className = \"spread\";\n                viewer.appendChild(spread);\n              } else if (i % 2 === parity) {\n                spread = spread.cloneNode(false);\n                viewer.appendChild(spread);\n              }\n\n              spread.appendChild(pages[i].div);\n            }\n          }\n\n          if (!pageNumber) {\n            return;\n          }\n\n          this._setCurrentPageNumber(pageNumber, true);\n\n          this.update();\n        }\n\n      }\n\n      exports.BaseViewer = BaseViewer;\n      /***/\n    },\n    /* 17 */\n\n    /***/\n    function (module, exports, __w_pdfjs_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.PDFViewer = void 0;\n\n      var _base_viewer = __w_pdfjs_require__(16);\n\n      var _pdfjsLib = __w_pdfjs_require__(2);\n\n      class PDFViewer extends _base_viewer.BaseViewer {\n        get _viewerElement() {\n          return (0, _pdfjsLib.shadow)(this, \"_viewerElement\", this.viewer);\n        }\n\n        _scrollIntoView({\n          pageDiv,\n          pageSpot = null,\n          pageNumber = null\n        }) {\n          if (!pageSpot && !this.isInPresentationMode) {\n            const left = pageDiv.offsetLeft + pageDiv.clientLeft;\n            const right = left + pageDiv.clientWidth;\n            const {\n              scrollLeft,\n              clientWidth\n            } = this.container;\n\n            if (this._isScrollModeHorizontal || left < scrollLeft || right > scrollLeft + clientWidth) {\n              pageSpot = {\n                left: 0,\n                top: 0\n              };\n            }\n          }\n\n          super._scrollIntoView({\n            pageDiv,\n            pageSpot,\n            pageNumber\n          });\n        }\n\n        _getVisiblePages() {\n          if (this.isInPresentationMode) {\n            return this._getCurrentVisiblePage();\n          }\n\n          return super._getVisiblePages();\n        }\n\n        _updateHelper(visiblePages) {\n          if (this.isInPresentationMode) {\n            return;\n          }\n\n          let currentId = this._currentPageNumber;\n          let stillFullyVisible = false;\n\n          for (const page of visiblePages) {\n            if (page.percent < 100) {\n              break;\n            }\n\n            if (page.id === currentId) {\n              stillFullyVisible = true;\n              break;\n            }\n          }\n\n          if (!stillFullyVisible) {\n            currentId = visiblePages[0].id;\n          }\n\n          this._setCurrentPageNumber(currentId);\n        }\n\n      }\n\n      exports.PDFViewer = PDFViewer;\n      /***/\n    }\n    /******/\n    ])\n  );\n});","map":{"version":3,"mappings":"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","names":["module","define","exports","root","i","l","modules","__w_pdfjs_require__","Object","enumerable","get","value","bind","key","pdfjsVersion","pdfjsBuild","constructor","pageDiv","pdfPage","linkService","downloadManager","imageResourcesPath","renderInteractiveForms","l10n","render","intent","annotations","_cancelled","parameters","viewport","dontFlip","div","page","AnnotationLayer","document","cancel","hide","createAnnotationLayerBuilder","_pdf_link_service","pdfjsLib","window","__non_webpack_require__","CSS_UNITS","DEFAULT_SCALE_VALUE","DEFAULT_SCALE","MIN_SCALE","MAX_SCALE","UNKNOWN_SCALE","MAX_AUTO_SCALE","SCROLLBAR_PADDING","VERTICAL_PADDING","PresentationModeState","UNKNOWN","NORMAL","CHANGING","FULLSCREEN","RendererType","CANVAS","SVG","TextLayerMode","DISABLE","ENABLE","ENABLE_ENHANCE","ScrollMode","VERTICAL","HORIZONTAL","WRAPPED","SpreadMode","NONE","ODD","EVEN","AutoPrintRegExp","args","text","name","NullL10n","formatL10nValue","devicePixelRatio","backingStoreRatio","ctx","pixelRatio","sx","sy","scaled","skipOverflowHiddenElements","parent","element","offsetParent","console","offsetY","clientTop","offsetX","clientLeft","scrollWidth","getComputedStyle","_scaleY","_scaleX","offsetTop","offsetLeft","spot","undefined","top","left","debounceScroll","rAF","currentX","viewAreaElement","scrollLeft","lastX","state","currentY","scrollTop","lastY","callback","right","down","_eventHandler","parts","query","params","ii","length","param","toLowerCase","decodeURIComponent","minIndex","maxIndex","items","condition","currentIndex","currentItem","Math","x","xinv","limit","x_","a","b","c","d","p","q","result","r","view","userUnit","rotate","changeOrientation","width","x1","height","y1","index","elt","views","pageTop","sortByVisibility","horizontal","scrollEl","bottom","clientHeight","clientWidth","elementBottom","elementRight","visible","numViews","firstVisibleElementInd","binarySearchFirstItem","isElementBottomAfterViewTop","backtrackBeforeAllVisibleElements","lastEdge","currentWidth","currentHeight","viewWidth","viewHeight","viewRight","viewBottom","hiddenHeight","hiddenWidth","percent","id","y","first","last","pc","evt","preventDefault","url","defaultFilename","isDataSchema","reURI","reFilename","splitURI","suggestedFilename","delta","deltaY","angle","deltaX","PI","MOUSE_DOM_DELTA_PIXEL_MODE","MOUSE_DOM_DELTA_LINE_MODE","MOUSE_PIXELS_PER_LINE","MOUSE_LINES_PER_PAGE","Number","mode","size","WaitOnType","EVENT","TIMEOUT","target","delay","EventBus","eventHandler","clearTimeout","timeout","resolve","type","handler","timeoutHandler","setTimeout","animationStarted","on","external","off","dispatch","eventListeners","eventName","Array","externalListeners","listener","_on","options","_off","max","units","parentNode","_updateBar","_indeterminate","progressSize","_percent","isNaN","val","clamp","setWidth","viewer","container","scrollbarWidth","offsetWidth","show","moved","len","arr","write","read","eventBus","externalLinkTarget","externalLinkRel","externalLinkEnabled","ignoreDestinationZoom","setDocument","baseUrl","pdfDocument","setViewer","pdfViewer","setHistory","pdfHistory","numPages","currentPageNumber","pagesRotation","navigateTo","goToDestination","namedDest","explicitDest","destRef","pageNumber","pageIndex","pagesCount","pushCurrentPosition","destArray","_ignoreDestinationZoom","dest","data","getDestinationHash","escape","str","JSON","getAnchorUrl","anchor","setHash","hash","parseQueryString","source","phraseSearch","zoomArgs","zoomArg","zoomArgNumber","parseFloat","allowNegativeOffset","pagemode","nameddest","unescape","toString","isValidExplicitDestination","executeNamedAction","back","forward","action","cachePageRef","pageRef","refStr","num","gen","pageNum","_cachedPageNumber","isPageVisible","destLength","zoom","allowNull","EXPAND_DIVS_TIMEOUT","textLayerDiv","findController","enhanceTextSelection","_bindMouse","_finishRendering","endOfContent","numTextDivs","textContentStream","renderingDone","textLayerFrag","createDocumentFragment","textContent","textDivs","textContentItemsStr","_updateMatches","_onUpdateTextLayerMatches","textLayerRenderTask","setTextContentStream","readableStream","setTextContent","_convertMatches","matches","iIndex","end","queryLen","m","mm","matchIdx","match","begin","divIdx","offset","matchesLength","_renderMatches","pageIdx","isSelectedPage","selectedMatchIdx","highlightAll","prevEnd","infinity","appendTextToDiv","className","content","toOffset","node","span","i0","i1","isSelected","highlightSuffix","matchIndex","beginText","n0","n1","clearedUntilDivIdx","n","highlightMatches","pageMatches","pageMatchesLength","expandDivsTimer","adjustTop","divBounds","getBoundingClientRect","toFixed","createTextLayerBuilder","DISABLE_CREATE_OBJECT_URL","viewerCompatibilityParams","click","blobUrl","filename","documentElement","appendChild","remove","disableCreateObjectURL","downloadUrl","createValidAbsoluteUrl","download","downloadData","navigator","msSaveBlob","createObjectURL","URL","blob","compatibilityParams","userAgent","platform","maxTouchPoints","isAndroid","isIE","isIOS","isIOSChrome","webL10n","lang","_ready","getLanguage","getDirection","fallback","gL10nData","gTextData","gTextProp","gLanguage","gMacros","gReadyState","gAsyncResourceLoading","script","l10nId","l10nArgs","onSuccess","onFailure","xhr","XMLHttpRequest","overrideMimeType","responseText","baseURL","href","dictionary","reBlank","reComment","reSection","reImport","reSplit","entries","rawText","currentLang","genericLang","skipLang","parsedRawLinesCallback","line","shift","loadImport","nextEntry","tmp","evalString","xhrLoadText","parseRawLines","parsedPropertiesCallback","response","parseProperties","prop","successCallback","failureCallback","clear","langLinks","getL10nResourceLinks","langCount","dict","getL10nDictionary","default_locale","defaultLocale","locales","anyCaseLang","onResourceLoaded","gResourceCount","link","parseResource","resource","locales2rules","list","start","pluralRules","isBetween","isIn","_pluralRules","getPluralRules","rv","substIndexes","substArguments","reIndex","reMatch","macroName","paramName","macro","reArgs","arg","matched_text","getL10nAttributes","getL10nData","getChildElementCount","children","childNodes","found","nodeValue","textNode","firstChild","k","childElementCount","count","getTranslatableChildren","elementCount","translateElement","fallbackString","getData","getText","setLanguage","loadLocale","rtlList","shortCode","translate","translateFragment","getReadyState","ready","addEventListener","once","FindState","FOUND","NOT_FOUND","PENDING","FIND_TIMEOUT","MATCH_SCROLL_OFFSET_TOP","MATCH_SCROLL_OFFSET_LEFT","CHARACTERS_TO_NORMALIZE","normalizationRegex","replace","ch","_reset","_highlightMatches","_pageMatches","_pageMatchesLength","_selected","_state","_pdfDocument","executeCommand","cmd","_extractText","findbarClosed","pendingTimeout","_findTimeout","_nextMatch","_dirtyMatch","_updateAllPages","scrollMatchIntoView","_scrollMatches","scrollIntoView","wrapped","_rawQuery","normalize","_normalizedQuery","_shouldDirtyMatch","_linkService","_prepareMatches","currentElem","matchesWithLength","nextElem","prevElem","skipped","matchLength","isSubTerm","_isEntireWord","startIdx","getCharacterType","endIdx","_calculatePhraseMatch","pageContent","entireWord","_calculateWordMatch","queryArray","subquery","subqueryLen","_calculateMatch","_query","caseSensitive","_nextPageMatch","pageMatchesCount","_updateUIResultsCount","promise","Promise","extractTextCapability","normalizeWhitespace","textItems","strBuf","j","jj","reason","_updatePage","previous","findPrevious","currentPageIndex","_resumePageIdx","_offset","numPageMatches","_matchesReady","numMatches","_advanceOffsetPage","_pagesToSearch","_updateMatch","previousPage","_onFindBarClose","_requestMatchesCount","current","total","_matchesCountTotal","matchesCount","_updateUIState","CharacterType","SPACE","ALPHA_LETTER","PUNCT","HAN_LETTER","KATAKANA_LETTER","HIRAGANA_LETTER","HALFWIDTH_KATAKANA_LETTER","THAI_LETTER","charCode","isAlphabeticalScript","isAscii","isAsciiSpace","isAsciiAlpha","isAsciiDigit","isThai","isHan","isKatakana","isHiragana","isHalfwidthKatakana","HASH_CHANGE_TIMEOUT","POSITION_UPDATED_THRESHOLD","UPDATE_VIEWAREA_TIMEOUT","reset","switchInProgress","onPagesLoaded","initialize","fingerprint","resetHistory","updateUrl","_initialized","reInitialized","_bindEvents","getCurrentHash","rotation","destination","uid","_maxUid","_uid","_pageHide","_unbindEvents","_updateViewareaTimeout","push","_destination","forceReplace","isDestHashesEqual","isDestArraysEqual","_popStateInProgress","_tryPushCurrentPosition","_initialBookmark","_initialRotation","_pushOrReplaceState","shouldReplace","newState","_fingerprint","newUrl","temporary","_position","position","_isValidState","checkReload","performance","perfEntry","_updateInternalState","removeTemporary","_parseCurrentHash","checkNameddest","_updateViewarea","location","_numPositionUpdates","_popState","newHash","hashChanged","_blockHashChange","waitOnEventOrTimeout","isValidRotation","_boundEvents","updateViewarea","popState","pageHide","destHash","pushHash","second","isEntryEqual","secondDest","firstDest","MAX_CANVAS_PIXELS","defaultViewport","_ui_utils","renderingQueue","textLayerFactory","annotationLayerFactory","WeakMap","RenderingStates","INITIAL","setPdfPage","totalRotation","pdfPageRotate","scale","stats","destroy","cleanup","_resetZoomLayer","removeFromDOM","zoomLayer","zoomLayerCanvas","keepZoomLayer","keepAnnotations","currentZoomLayerNode","currentAnnotationNode","annotationLayer","canvas","svg","loadingIconDiv","update","cssTransform","timestamp","now","isScalingRestricted","outputScale","maxCanvasPixels","cancelRendering","paintTask","textLayer","redrawAnnotations","relativeRotation","absRotation","scaleX","scaleY","textLayerViewport","textRelativeRotation","textAbsRotation","transY","transX","getPagePoint","draw","FINISHED","RUNNING","canvasWrapper","renderContinueCallback","cont","PAUSED","finishPaintTask","error","_pdfjsLib","resultPromise","paintOnCanvas","renderCapability","onRenderContinue","renderTask","msg","isCanvasHidden","showCanvas","alpha","getOutputScale","useOnlyCssZoom","actualSizeViewport","pixelsInViewport","maxScale","sfx","approximateFraction","sfy","roundToDivide","transform","renderContext","canvasContext","enableWebGL","paintOnSvg","cancelled","ensureNotCancelled","opList","svgGfx","commonObjs","objs","wrapper","setPageLabel","pageLabel","CLEANUP_TIMEOUT","setThumbnailViewer","pdfThumbnailViewer","isHighestPriority","renderingId","renderHighestPriority","idleTimeout","currentlyVisiblePages","isThumbnailViewEnabled","forceRendering","printing","onIdle","getHighestPriority","visibleViews","numVisible","nextPageIndex","previousPageIndex","isViewFinished","renderView","renderingState","resume","_ensurePageViewVisible","shadow","_shadowViewer","_resetView","pageView","previousPageView","viewerNodes","_currentPageNumber","_scrollUpdate","_updateScrollDown","_scrollIntoView","pageSpot","scrolledDown","_previousPageNumber","_getVisiblePages","_getCurrentVisiblePage","_updateHelper","_updateScrollMode","_updateSpreadMode","DEFAULT_CACHE_SIZE","newSize","pageIdsToKeep","Set","iMax","pagesToKeep","moveToEndOfArray","newScale","oldScale","BaseViewer","firstElementChild","defaultRenderingQueue","_pdf_rendering_queue","watchScroll","removePageBorders","getPageView","settled","_name","_setCurrentPageNumber","resetCurrentPageView","_resetCurrentPageView","_pageLabels","_currentScale","_currentScaleValue","_pagesRotation","_onePageRenderedOrForceFetch","_cancelRendering","firstPagePromise","_onBeforeDraw","_onAfterDraw","firstPdfPage","currentScale","_viewerElement","clone","textLayerMode","renderer","firstPageView","ref","getPagesLeft","setPageLabels","labels","label","_setScaleUpdatePages","noScroll","preset","newValue","isSameScale","presetValue","isChangingPresentationMode","_setScale","currentPage","noPadding","hPadding","vPadding","_isScrollModeHorizontal","pageWidthScale","pageHeightScale","horizontalScale","isPortraitOrientation","isInPresentationMode","scrollPageIntoView","heightScale","pageWidth","pageHeight","_location","widthScale","boundingRect","_updateLocation","currentScaleValue","normalizedScaleValue","firstPage","pdfOpenParams","currentPageView","topLeft","intLeft","intTop","visiblePages","numVisiblePages","newCacheSize","containsElement","focus","getVisibleElements","_ensurePdfPageLoaded","scrollAhead","_pages","getPagesOverview","pagesOverview","enablePrintAutoRotate","isFirstPagePortrait","_scrollMode","isValidScrollMode","scrollMode","_spreadMode","isValidSpreadMode","pages","parity","spread","currentId","stillFullyVisible"],"sourceRoot":"","sources":["webpack://pdfjs-dist/web/pdf_viewer/webpack/universalModuleDefinition","webpack://pdfjs-dist/web/pdf_viewer/webpack/bootstrap","webpack://pdfjs-dist/web/pdf_viewer/web/pdf_viewer.component.js","webpack://pdfjs-dist/web/pdf_viewer/web/annotation_layer_builder.js","webpack://pdfjs-dist/web/pdf_viewer/web/pdfjs.js","webpack://pdfjs-dist/web/pdf_viewer/web/ui_utils.js","webpack://pdfjs-dist/web/pdf_viewer/web/pdf_link_service.js","webpack://pdfjs-dist/web/pdf_viewer/web/text_layer_builder.js","webpack://pdfjs-dist/web/pdf_viewer/web/download_manager.js","webpack://pdfjs-dist/web/pdf_viewer/web/viewer_compatibility.js","webpack://pdfjs-dist/web/pdf_viewer/web/genericl10n.js","webpack://pdfjs-dist/web/pdf_viewer/external/webL10n/l10n.js","webpack://pdfjs-dist/web/pdf_viewer/web/pdf_find_controller.js","webpack://pdfjs-dist/web/pdf_viewer/web/pdf_find_utils.js","webpack://pdfjs-dist/web/pdf_viewer/web/pdf_history.js","webpack://pdfjs-dist/web/pdf_viewer/web/pdf_page_view.js","webpack://pdfjs-dist/web/pdf_viewer/web/pdf_rendering_queue.js","webpack://pdfjs-dist/web/pdf_viewer/web/pdf_single_page_viewer.js","webpack://pdfjs-dist/web/pdf_viewer/web/base_viewer.js","webpack://pdfjs-dist/web/pdf_viewer/web/pdf_viewer.js"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"pdfjs-dist/web/pdf_viewer\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"pdfjs-dist/web/pdf_viewer\"] = factory();\n\telse\n\t\troot[\"pdfjs-dist/web/pdf_viewer\"] = factory();\n})(this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __w_pdfjs_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __w_pdfjs_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__w_pdfjs_require__.m = modules;\n\n \t// expose the module cache\n \t__w_pdfjs_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__w_pdfjs_require__.d = function(exports, name, getter) {\n \t\tif(!__w_pdfjs_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__w_pdfjs_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__w_pdfjs_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __w_pdfjs_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__w_pdfjs_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __w_pdfjs_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__w_pdfjs_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__w_pdfjs_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__w_pdfjs_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__w_pdfjs_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __w_pdfjs_require__(__w_pdfjs_require__.s = 0);\n","/* Copyright 2014 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  AnnotationLayerBuilder,\n  DefaultAnnotationLayerFactory,\n} from \"./annotation_layer_builder.js\";\nimport {\n  DefaultTextLayerFactory,\n  TextLayerBuilder,\n} from \"./text_layer_builder.js\";\nimport { EventBus, NullL10n, ProgressBar } from \"./ui_utils.js\";\nimport { PDFLinkService, SimpleLinkService } from \"./pdf_link_service.js\";\nimport { DownloadManager } from \"./download_manager.js\";\nimport { GenericL10n } from \"./genericl10n.js\";\nimport { PDFFindController } from \"./pdf_find_controller.js\";\nimport { PDFHistory } from \"./pdf_history.js\";\nimport { PDFPageView } from \"./pdf_page_view.js\";\nimport { PDFSinglePageViewer } from \"./pdf_single_page_viewer.js\";\nimport { PDFViewer } from \"./pdf_viewer.js\";\n\n// eslint-disable-next-line no-unused-vars\nconst pdfjsVersion = PDFJSDev.eval(\"BUNDLE_VERSION\");\n// eslint-disable-next-line no-unused-vars\nconst pdfjsBuild = PDFJSDev.eval(\"BUNDLE_BUILD\");\n\nexport {\n  PDFViewer,\n  PDFSinglePageViewer,\n  PDFPageView,\n  PDFLinkService,\n  SimpleLinkService,\n  TextLayerBuilder,\n  DefaultTextLayerFactory,\n  AnnotationLayerBuilder,\n  DefaultAnnotationLayerFactory,\n  PDFHistory,\n  PDFFindController,\n  EventBus,\n  DownloadManager,\n  ProgressBar,\n  GenericL10n,\n  NullL10n,\n};\n","/* Copyright 2014 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AnnotationLayer } from \"pdfjs-lib\";\nimport { NullL10n } from \"./ui_utils.js\";\nimport { SimpleLinkService } from \"./pdf_link_service.js\";\n\n/**\n * @typedef {Object} AnnotationLayerBuilderOptions\n * @property {HTMLDivElement} pageDiv\n * @property {PDFPage} pdfPage\n * @property {string} [imageResourcesPath] - Path for image resources, mainly\n *   for annotation icons. Include trailing slash.\n * @property {boolean} renderInteractiveForms\n * @property {IPDFLinkService} linkService\n * @property {DownloadManager} downloadManager\n * @property {IL10n} l10n - Localization service.\n */\n\nclass AnnotationLayerBuilder {\n  /**\n   * @param {AnnotationLayerBuilderOptions} options\n   */\n  constructor({\n    pageDiv,\n    pdfPage,\n    linkService,\n    downloadManager,\n    imageResourcesPath = \"\",\n    renderInteractiveForms = false,\n    l10n = NullL10n,\n  }) {\n    this.pageDiv = pageDiv;\n    this.pdfPage = pdfPage;\n    this.linkService = linkService;\n    this.downloadManager = downloadManager;\n    this.imageResourcesPath = imageResourcesPath;\n    this.renderInteractiveForms = renderInteractiveForms;\n    this.l10n = l10n;\n\n    this.div = null;\n    this._cancelled = false;\n  }\n\n  /**\n   * @param {PageViewport} viewport\n   * @param {string} intent (default value is 'display')\n   */\n  render(viewport, intent = \"display\") {\n    this.pdfPage.getAnnotations({ intent }).then(annotations => {\n      if (this._cancelled) {\n        return;\n      }\n\n      const parameters = {\n        viewport: viewport.clone({ dontFlip: true }),\n        div: this.div,\n        annotations,\n        page: this.pdfPage,\n        imageResourcesPath: this.imageResourcesPath,\n        renderInteractiveForms: this.renderInteractiveForms,\n        linkService: this.linkService,\n        downloadManager: this.downloadManager,\n      };\n\n      if (this.div) {\n        // If an annotationLayer already exists, refresh its children's\n        // transformation matrices.\n        AnnotationLayer.update(parameters);\n      } else {\n        // Create an annotation layer div and render the annotations\n        // if there is at least one annotation.\n        if (annotations.length === 0) {\n          return;\n        }\n        this.div = document.createElement(\"div\");\n        this.div.className = \"annotationLayer\";\n        this.pageDiv.appendChild(this.div);\n        parameters.div = this.div;\n\n        AnnotationLayer.render(parameters);\n        this.l10n.translate(this.div);\n      }\n    });\n  }\n\n  cancel() {\n    this._cancelled = true;\n  }\n\n  hide() {\n    if (!this.div) {\n      return;\n    }\n    this.div.setAttribute(\"hidden\", \"true\");\n  }\n}\n\n/**\n * @implements IPDFAnnotationLayerFactory\n */\nclass DefaultAnnotationLayerFactory {\n  /**\n   * @param {HTMLDivElement} pageDiv\n   * @param {PDFPage} pdfPage\n   * @param {string} [imageResourcesPath] - Path for image resources, mainly\n   *   for annotation icons. Include trailing slash.\n   * @param {boolean} renderInteractiveForms\n   * @param {IL10n} l10n\n   * @returns {AnnotationLayerBuilder}\n   */\n  createAnnotationLayerBuilder(\n    pageDiv,\n    pdfPage,\n    imageResourcesPath = \"\",\n    renderInteractiveForms = false,\n    l10n = NullL10n\n  ) {\n    return new AnnotationLayerBuilder({\n      pageDiv,\n      pdfPage,\n      imageResourcesPath,\n      renderInteractiveForms,\n      linkService: new SimpleLinkService(),\n      l10n,\n    });\n  }\n}\n\nexport { AnnotationLayerBuilder, DefaultAnnotationLayerFactory };\n","/* Copyright 2016 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* globals module, __non_webpack_require__ */\n\n\"use strict\";\n\nlet pdfjsLib;\nif (typeof window !== \"undefined\" && window[\"pdfjs-dist/build/pdf\"]) {\n  pdfjsLib = window[\"pdfjs-dist/build/pdf\"];\n} else {\n  pdfjsLib = __non_webpack_require__(\"../build/pdf.js\");\n}\nmodule.exports = pdfjsLib;\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst CSS_UNITS = 96.0 / 72.0;\nconst DEFAULT_SCALE_VALUE = \"auto\";\nconst DEFAULT_SCALE = 1.0;\nconst MIN_SCALE = 0.1;\nconst MAX_SCALE = 10.0;\nconst UNKNOWN_SCALE = 0;\nconst MAX_AUTO_SCALE = 1.25;\nconst SCROLLBAR_PADDING = 40;\nconst VERTICAL_PADDING = 5;\n\nconst PresentationModeState = {\n  UNKNOWN: 0,\n  NORMAL: 1,\n  CHANGING: 2,\n  FULLSCREEN: 3,\n};\n\nconst RendererType = {\n  CANVAS: \"canvas\",\n  SVG: \"svg\",\n};\n\nconst TextLayerMode = {\n  DISABLE: 0,\n  ENABLE: 1,\n  ENABLE_ENHANCE: 2,\n};\n\nconst ScrollMode = {\n  UNKNOWN: -1,\n  VERTICAL: 0, // Default value.\n  HORIZONTAL: 1,\n  WRAPPED: 2,\n};\n\nconst SpreadMode = {\n  UNKNOWN: -1,\n  NONE: 0, // Default value.\n  ODD: 1,\n  EVEN: 2,\n};\n\n// Used by `PDFViewerApplication`, and by the API unit-tests.\nconst AutoPrintRegExp = /\\bprint\\s*\\(/;\n\n// Replaces {{arguments}} with their values.\nfunction formatL10nValue(text, args) {\n  if (!args) {\n    return text;\n  }\n  return text.replace(/\\{\\{\\s*(\\w+)\\s*\\}\\}/g, (all, name) => {\n    return name in args ? args[name] : \"{{\" + name + \"}}\";\n  });\n}\n\n/**\n * No-op implementation of the localization service.\n * @implements {IL10n}\n */\nconst NullL10n = {\n  async getLanguage() {\n    return \"en-us\";\n  },\n\n  async getDirection() {\n    return \"ltr\";\n  },\n\n  async get(property, args, fallback) {\n    return formatL10nValue(fallback, args);\n  },\n\n  async translate(element) {},\n};\n\n/**\n * Returns scale factor for the canvas. It makes sense for the HiDPI displays.\n * @returns {Object} The object with horizontal (sx) and vertical (sy)\n *                   scales. The scaled property is set to false if scaling is\n *                   not required, true otherwise.\n */\nfunction getOutputScale(ctx) {\n  const devicePixelRatio = window.devicePixelRatio || 1;\n  const backingStoreRatio =\n    ctx.webkitBackingStorePixelRatio ||\n    ctx.mozBackingStorePixelRatio ||\n    ctx.msBackingStorePixelRatio ||\n    ctx.oBackingStorePixelRatio ||\n    ctx.backingStorePixelRatio ||\n    1;\n  const pixelRatio = devicePixelRatio / backingStoreRatio;\n  return {\n    sx: pixelRatio,\n    sy: pixelRatio,\n    scaled: pixelRatio !== 1,\n  };\n}\n\n/**\n * Scrolls specified element into view of its parent.\n * @param {Object} element - The element to be visible.\n * @param {Object} spot - An object with optional top and left properties,\n *   specifying the offset from the top left edge.\n * @param {boolean} skipOverflowHiddenElements - Ignore elements that have\n *   the CSS rule `overflow: hidden;` set. The default is false.\n */\nfunction scrollIntoView(element, spot, skipOverflowHiddenElements = false) {\n  // Assuming offsetParent is available (it's not available when viewer is in\n  // hidden iframe or object). We have to scroll: if the offsetParent is not set\n  // producing the error. See also animationStarted.\n  let parent = element.offsetParent;\n  if (!parent) {\n    console.error(\"offsetParent is not set -- cannot scroll\");\n    return;\n  }\n  let offsetY = element.offsetTop + element.clientTop;\n  let offsetX = element.offsetLeft + element.clientLeft;\n  while (\n    (parent.clientHeight === parent.scrollHeight &&\n      parent.clientWidth === parent.scrollWidth) ||\n    (skipOverflowHiddenElements &&\n      getComputedStyle(parent).overflow === \"hidden\")\n  ) {\n    if (parent.dataset._scaleY) {\n      offsetY /= parent.dataset._scaleY;\n      offsetX /= parent.dataset._scaleX;\n    }\n    offsetY += parent.offsetTop;\n    offsetX += parent.offsetLeft;\n    parent = parent.offsetParent;\n    if (!parent) {\n      return; // no need to scroll\n    }\n  }\n  if (spot) {\n    if (spot.top !== undefined) {\n      offsetY += spot.top;\n    }\n    if (spot.left !== undefined) {\n      offsetX += spot.left;\n      parent.scrollLeft = offsetX;\n    }\n  }\n  parent.scrollTop = offsetY;\n}\n\n/**\n * Helper function to start monitoring the scroll event and converting them into\n * PDF.js friendly one: with scroll debounce and scroll direction.\n */\nfunction watchScroll(viewAreaElement, callback) {\n  const debounceScroll = function (evt) {\n    if (rAF) {\n      return;\n    }\n    // schedule an invocation of scroll for next animation frame.\n    rAF = window.requestAnimationFrame(function viewAreaElementScrolled() {\n      rAF = null;\n\n      const currentX = viewAreaElement.scrollLeft;\n      const lastX = state.lastX;\n      if (currentX !== lastX) {\n        state.right = currentX > lastX;\n      }\n      state.lastX = currentX;\n      const currentY = viewAreaElement.scrollTop;\n      const lastY = state.lastY;\n      if (currentY !== lastY) {\n        state.down = currentY > lastY;\n      }\n      state.lastY = currentY;\n      callback(state);\n    });\n  };\n\n  const state = {\n    right: true,\n    down: true,\n    lastX: viewAreaElement.scrollLeft,\n    lastY: viewAreaElement.scrollTop,\n    _eventHandler: debounceScroll,\n  };\n\n  let rAF = null;\n  viewAreaElement.addEventListener(\"scroll\", debounceScroll, true);\n  return state;\n}\n\n/**\n * Helper function to parse query string (e.g. ?param1=value&parm2=...).\n */\nfunction parseQueryString(query) {\n  const parts = query.split(\"&\");\n  const params = Object.create(null);\n  for (let i = 0, ii = parts.length; i < ii; ++i) {\n    const param = parts[i].split(\"=\");\n    const key = param[0].toLowerCase();\n    const value = param.length > 1 ? param[1] : null;\n    params[decodeURIComponent(key)] = decodeURIComponent(value);\n  }\n  return params;\n}\n\n/**\n * Use binary search to find the index of the first item in a given array which\n * passes a given condition. The items are expected to be sorted in the sense\n * that if the condition is true for one item in the array, then it is also true\n * for all following items.\n *\n * @returns {number} Index of the first array element to pass the test,\n *                   or |items.length| if no such element exists.\n */\nfunction binarySearchFirstItem(items, condition) {\n  let minIndex = 0;\n  let maxIndex = items.length - 1;\n\n  if (maxIndex < 0 || !condition(items[maxIndex])) {\n    return items.length;\n  }\n  if (condition(items[minIndex])) {\n    return minIndex;\n  }\n\n  while (minIndex < maxIndex) {\n    const currentIndex = (minIndex + maxIndex) >> 1;\n    const currentItem = items[currentIndex];\n    if (condition(currentItem)) {\n      maxIndex = currentIndex;\n    } else {\n      minIndex = currentIndex + 1;\n    }\n  }\n  return minIndex; /* === maxIndex */\n}\n\n/**\n *  Approximates float number as a fraction using Farey sequence (max order\n *  of 8).\n *  @param {number} x - Positive float number.\n *  @returns {Array} Estimated fraction: the first array item is a numerator,\n *                   the second one is a denominator.\n */\nfunction approximateFraction(x) {\n  // Fast paths for int numbers or their inversions.\n  if (Math.floor(x) === x) {\n    return [x, 1];\n  }\n  const xinv = 1 / x;\n  const limit = 8;\n  if (xinv > limit) {\n    return [1, limit];\n  } else if (Math.floor(xinv) === xinv) {\n    return [1, xinv];\n  }\n\n  const x_ = x > 1 ? xinv : x;\n  // a/b and c/d are neighbours in Farey sequence.\n  let a = 0,\n    b = 1,\n    c = 1,\n    d = 1;\n  // Limiting search to order 8.\n  while (true) {\n    // Generating next term in sequence (order of q).\n    const p = a + c,\n      q = b + d;\n    if (q > limit) {\n      break;\n    }\n    if (x_ <= p / q) {\n      c = p;\n      d = q;\n    } else {\n      a = p;\n      b = q;\n    }\n  }\n  let result;\n  // Select closest of the neighbours to x.\n  if (x_ - a / b < c / d - x_) {\n    result = x_ === x ? [a, b] : [b, a];\n  } else {\n    result = x_ === x ? [c, d] : [d, c];\n  }\n  return result;\n}\n\nfunction roundToDivide(x, div) {\n  const r = x % div;\n  return r === 0 ? x : Math.round(x - r + div);\n}\n\n/**\n * Gets the size of the specified page, converted from PDF units to inches.\n * @param {Object} An Object containing the properties: {Array} `view`,\n *   {number} `userUnit`, and {number} `rotate`.\n * @returns {Object} An Object containing the properties: {number} `width`\n *   and {number} `height`, given in inches.\n */\nfunction getPageSizeInches({ view, userUnit, rotate }) {\n  const [x1, y1, x2, y2] = view;\n  // We need to take the page rotation into account as well.\n  const changeOrientation = rotate % 180 !== 0;\n\n  const width = ((x2 - x1) / 72) * userUnit;\n  const height = ((y2 - y1) / 72) * userUnit;\n\n  return {\n    width: changeOrientation ? height : width,\n    height: changeOrientation ? width : height,\n  };\n}\n\n/**\n * Helper function for getVisibleElements.\n *\n * @param {number} index - initial guess at the first visible element\n * @param {Array} views - array of pages, into which `index` is an index\n * @param {number} top - the top of the scroll pane\n * @returns {number} less than or equal to `index` that is definitely at or\n *   before the first visible element in `views`, but not by too much. (Usually,\n *   this will be the first element in the first partially visible row in\n *   `views`, although sometimes it goes back one row further.)\n */\nfunction backtrackBeforeAllVisibleElements(index, views, top) {\n  // binarySearchFirstItem's assumption is that the input is ordered, with only\n  // one index where the conditions flips from false to true: [false ...,\n  // true...]. With vertical scrolling and spreads, it is possible to have\n  // [false ..., true, false, true ...]. With wrapped scrolling we can have a\n  // similar sequence, with many more mixed true and false in the middle.\n  //\n  // So there is no guarantee that the binary search yields the index of the\n  // first visible element. It could have been any of the other visible elements\n  // that were preceded by a hidden element.\n\n  // Of course, if either this element or the previous (hidden) element is also\n  // the first element, there's nothing to worry about.\n  if (index < 2) {\n    return index;\n  }\n\n  // That aside, the possible cases are represented below.\n  //\n  //     ****  = fully hidden\n  //     A*B*  = mix of partially visible and/or hidden pages\n  //     CDEF  = fully visible\n  //\n  // (1) Binary search could have returned A, in which case we can stop.\n  // (2) Binary search could also have returned B, in which case we need to\n  // check the whole row.\n  // (3) Binary search could also have returned C, in which case we need to\n  // check the whole previous row.\n  //\n  // There's one other possibility:\n  //\n  //     ****  = fully hidden\n  //     ABCD  = mix of fully and/or partially visible pages\n  //\n  // (4) Binary search could only have returned A.\n\n  // Initially assume that we need to find the beginning of the current row\n  // (case 1, 2, or 4), which means finding a page that is above the current\n  // page's top. If the found page is partially visible, we're definitely not in\n  // case 3, and this assumption is correct.\n  let elt = views[index].div;\n  let pageTop = elt.offsetTop + elt.clientTop;\n\n  if (pageTop >= top) {\n    // The found page is fully visible, so we're actually either in case 3 or 4,\n    // and unfortunately we can't tell the difference between them without\n    // scanning the entire previous row, so we just conservatively assume that\n    // we do need to backtrack to that row. In both cases, the previous page is\n    // in the previous row, so use its top instead.\n    elt = views[index - 1].div;\n    pageTop = elt.offsetTop + elt.clientTop;\n  }\n\n  // Now we backtrack to the first page that still has its bottom below\n  // `pageTop`, which is the top of a page in the first visible row (unless\n  // we're in case 4, in which case it's the row before that).\n  // `index` is found by binary search, so the page at `index - 1` is\n  // invisible and we can start looking for potentially visible pages from\n  // `index - 2`. (However, if this loop terminates on its first iteration,\n  // which is the case when pages are stacked vertically, `index` should remain\n  // unchanged, so we use a distinct loop variable.)\n  for (let i = index - 2; i >= 0; --i) {\n    elt = views[i].div;\n    if (elt.offsetTop + elt.clientTop + elt.clientHeight <= pageTop) {\n      // We have reached the previous row, so stop now.\n      // This loop is expected to terminate relatively quickly because the\n      // number of pages per row is expected to be small.\n      break;\n    }\n    index = i;\n  }\n  return index;\n}\n\n/**\n * Generic helper to find out what elements are visible within a scroll pane.\n *\n * Well, pretty generic. There are some assumptions placed on the elements\n * referenced by `views`:\n *   - If `horizontal`, no left of any earlier element is to the right of the\n *     left of any later element.\n *   - Otherwise, `views` can be split into contiguous rows where, within a row,\n *     no top of any element is below the bottom of any other element, and\n *     between rows, no bottom of any element in an earlier row is below the\n *     top of any element in a later row.\n *\n * (Here, top, left, etc. all refer to the padding edge of the element in\n * question. For pages, that ends up being equivalent to the bounding box of the\n * rendering canvas. Earlier and later refer to index in `views`, not page\n * layout.)\n *\n * @param scrollEl {HTMLElement} - a container that can possibly scroll\n * @param views {Array} - objects with a `div` property that contains an\n *   HTMLElement, which should all be descendents of `scrollEl` satisfying the\n *   above layout assumptions\n * @param sortByVisibility {boolean} - if true, the returned elements are sorted\n *   in descending order of the percent of their padding box that is visible\n * @param horizontal {boolean} - if true, the elements are assumed to be laid\n *   out horizontally instead of vertically\n * @returns {Object} `{ first, last, views: [{ id, x, y, view, percent }] }`\n */\nfunction getVisibleElements(\n  scrollEl,\n  views,\n  sortByVisibility = false,\n  horizontal = false\n) {\n  const top = scrollEl.scrollTop,\n    bottom = top + scrollEl.clientHeight;\n  const left = scrollEl.scrollLeft,\n    right = left + scrollEl.clientWidth;\n\n  // Throughout this \"generic\" function, comments will assume we're working with\n  // PDF document pages, which is the most important and complex case. In this\n  // case, the visible elements we're actually interested is the page canvas,\n  // which is contained in a wrapper which adds no padding/border/margin, which\n  // is itself contained in `view.div` which adds no padding (but does add a\n  // border). So, as specified in this function's doc comment, this function\n  // does all of its work on the padding edge of the provided views, starting at\n  // offsetLeft/Top (which includes margin) and adding clientLeft/Top (which is\n  // the border). Adding clientWidth/Height gets us the bottom-right corner of\n  // the padding edge.\n  function isElementBottomAfterViewTop(view) {\n    const element = view.div;\n    const elementBottom =\n      element.offsetTop + element.clientTop + element.clientHeight;\n    return elementBottom > top;\n  }\n  function isElementRightAfterViewLeft(view) {\n    const element = view.div;\n    const elementRight =\n      element.offsetLeft + element.clientLeft + element.clientWidth;\n    return elementRight > left;\n  }\n\n  const visible = [],\n    numViews = views.length;\n  let firstVisibleElementInd =\n    numViews === 0\n      ? 0\n      : binarySearchFirstItem(\n          views,\n          horizontal ? isElementRightAfterViewLeft : isElementBottomAfterViewTop\n        );\n\n  // Please note the return value of the `binarySearchFirstItem` function when\n  // no valid element is found (hence the `firstVisibleElementInd` check below).\n  if (\n    firstVisibleElementInd > 0 &&\n    firstVisibleElementInd < numViews &&\n    !horizontal\n  ) {\n    // In wrapped scrolling (or vertical scrolling with spreads), with some page\n    // sizes, isElementBottomAfterViewTop doesn't satisfy the binary search\n    // condition: there can be pages with bottoms above the view top between\n    // pages with bottoms below. This function detects and corrects that error;\n    // see it for more comments.\n    firstVisibleElementInd = backtrackBeforeAllVisibleElements(\n      firstVisibleElementInd,\n      views,\n      top\n    );\n  }\n\n  // lastEdge acts as a cutoff for us to stop looping, because we know all\n  // subsequent pages will be hidden.\n  //\n  // When using wrapped scrolling or vertical scrolling with spreads, we can't\n  // simply stop the first time we reach a page below the bottom of the view;\n  // the tops of subsequent pages on the same row could still be visible. In\n  // horizontal scrolling, we don't have that issue, so we can stop as soon as\n  // we pass `right`, without needing the code below that handles the -1 case.\n  let lastEdge = horizontal ? right : -1;\n\n  for (let i = firstVisibleElementInd; i < numViews; i++) {\n    const view = views[i],\n      element = view.div;\n    const currentWidth = element.offsetLeft + element.clientLeft;\n    const currentHeight = element.offsetTop + element.clientTop;\n    const viewWidth = element.clientWidth,\n      viewHeight = element.clientHeight;\n    const viewRight = currentWidth + viewWidth;\n    const viewBottom = currentHeight + viewHeight;\n\n    if (lastEdge === -1) {\n      // As commented above, this is only needed in non-horizontal cases.\n      // Setting lastEdge to the bottom of the first page that is partially\n      // visible ensures that the next page fully below lastEdge is on the\n      // next row, which has to be fully hidden along with all subsequent rows.\n      if (viewBottom >= bottom) {\n        lastEdge = viewBottom;\n      }\n    } else if ((horizontal ? currentWidth : currentHeight) > lastEdge) {\n      break;\n    }\n\n    if (\n      viewBottom <= top ||\n      currentHeight >= bottom ||\n      viewRight <= left ||\n      currentWidth >= right\n    ) {\n      continue;\n    }\n\n    const hiddenHeight =\n      Math.max(0, top - currentHeight) + Math.max(0, viewBottom - bottom);\n    const hiddenWidth =\n      Math.max(0, left - currentWidth) + Math.max(0, viewRight - right);\n    const percent =\n      (((viewHeight - hiddenHeight) * (viewWidth - hiddenWidth) * 100) /\n        viewHeight /\n        viewWidth) |\n      0;\n    visible.push({\n      id: view.id,\n      x: currentWidth,\n      y: currentHeight,\n      view,\n      percent,\n    });\n  }\n\n  const first = visible[0],\n    last = visible[visible.length - 1];\n\n  if (sortByVisibility) {\n    visible.sort(function (a, b) {\n      const pc = a.percent - b.percent;\n      if (Math.abs(pc) > 0.001) {\n        return -pc;\n      }\n      return a.id - b.id; // ensure stability\n    });\n  }\n  return { first, last, views: visible };\n}\n\n/**\n * Event handler to suppress context menu.\n */\nfunction noContextMenuHandler(evt) {\n  evt.preventDefault();\n}\n\nfunction isDataSchema(url) {\n  let i = 0;\n  const ii = url.length;\n  while (i < ii && url[i].trim() === \"\") {\n    i++;\n  }\n  return url.substring(i, i + 5).toLowerCase() === \"data:\";\n}\n\n/**\n * Returns the filename or guessed filename from the url (see issue 3455).\n * @param {string} url - The original PDF location.\n * @param {string} defaultFilename - The value returned if the filename is\n *   unknown, or the protocol is unsupported.\n * @returns {string} Guessed PDF filename.\n */\nfunction getPDFFileNameFromURL(url, defaultFilename = \"document.pdf\") {\n  if (typeof url !== \"string\") {\n    return defaultFilename;\n  }\n  if (isDataSchema(url)) {\n    console.warn(\n      \"getPDFFileNameFromURL: \" +\n        'ignoring \"data:\" URL for performance reasons.'\n    );\n    return defaultFilename;\n  }\n  const reURI = /^(?:(?:[^:]+:)?\\/\\/[^\\/]+)?([^?#]*)(\\?[^#]*)?(#.*)?$/;\n  //              SCHEME        HOST         1.PATH  2.QUERY   3.REF\n  // Pattern to get last matching NAME.pdf\n  const reFilename = /[^\\/?#=]+\\.pdf\\b(?!.*\\.pdf\\b)/i;\n  const splitURI = reURI.exec(url);\n  let suggestedFilename =\n    reFilename.exec(splitURI[1]) ||\n    reFilename.exec(splitURI[2]) ||\n    reFilename.exec(splitURI[3]);\n  if (suggestedFilename) {\n    suggestedFilename = suggestedFilename[0];\n    if (suggestedFilename.includes(\"%\")) {\n      // URL-encoded %2Fpath%2Fto%2Ffile.pdf should be file.pdf\n      try {\n        suggestedFilename = reFilename.exec(\n          decodeURIComponent(suggestedFilename)\n        )[0];\n      } catch (ex) {\n        // Possible (extremely rare) errors:\n        // URIError \"Malformed URI\", e.g. for \"%AA.pdf\"\n        // TypeError \"null has no properties\", e.g. for \"%2F.pdf\"\n      }\n    }\n  }\n  return suggestedFilename || defaultFilename;\n}\n\nfunction normalizeWheelEventDelta(evt) {\n  let delta = Math.sqrt(evt.deltaX * evt.deltaX + evt.deltaY * evt.deltaY);\n  const angle = Math.atan2(evt.deltaY, evt.deltaX);\n  if (-0.25 * Math.PI < angle && angle < 0.75 * Math.PI) {\n    // All that is left-up oriented has to change the sign.\n    delta = -delta;\n  }\n\n  const MOUSE_DOM_DELTA_PIXEL_MODE = 0;\n  const MOUSE_DOM_DELTA_LINE_MODE = 1;\n  const MOUSE_PIXELS_PER_LINE = 30;\n  const MOUSE_LINES_PER_PAGE = 30;\n\n  // Converts delta to per-page units\n  if (evt.deltaMode === MOUSE_DOM_DELTA_PIXEL_MODE) {\n    delta /= MOUSE_PIXELS_PER_LINE * MOUSE_LINES_PER_PAGE;\n  } else if (evt.deltaMode === MOUSE_DOM_DELTA_LINE_MODE) {\n    delta /= MOUSE_LINES_PER_PAGE;\n  }\n  return delta;\n}\n\nfunction isValidRotation(angle) {\n  return Number.isInteger(angle) && angle % 90 === 0;\n}\n\nfunction isValidScrollMode(mode) {\n  return (\n    Number.isInteger(mode) &&\n    Object.values(ScrollMode).includes(mode) &&\n    mode !== ScrollMode.UNKNOWN\n  );\n}\n\nfunction isValidSpreadMode(mode) {\n  return (\n    Number.isInteger(mode) &&\n    Object.values(SpreadMode).includes(mode) &&\n    mode !== SpreadMode.UNKNOWN\n  );\n}\n\nfunction isPortraitOrientation(size) {\n  return size.width <= size.height;\n}\n\nconst WaitOnType = {\n  EVENT: \"event\",\n  TIMEOUT: \"timeout\",\n};\n\n/**\n * @typedef {Object} WaitOnEventOrTimeoutParameters\n * @property {Object} target - The event target, can for example be:\n *   `window`, `document`, a DOM element, or an {EventBus} instance.\n * @property {string} name - The name of the event.\n * @property {number} delay - The delay, in milliseconds, after which the\n *   timeout occurs (if the event wasn't already dispatched).\n */\n\n/**\n * Allows waiting for an event or a timeout, whichever occurs first.\n * Can be used to ensure that an action always occurs, even when an event\n * arrives late or not at all.\n *\n * @param {WaitOnEventOrTimeoutParameters}\n * @returns {Promise} A promise that is resolved with a {WaitOnType} value.\n */\nfunction waitOnEventOrTimeout({ target, name, delay = 0 }) {\n  return new Promise(function (resolve, reject) {\n    if (\n      typeof target !== \"object\" ||\n      !(name && typeof name === \"string\") ||\n      !(Number.isInteger(delay) && delay >= 0)\n    ) {\n      throw new Error(\"waitOnEventOrTimeout - invalid parameters.\");\n    }\n\n    function handler(type) {\n      if (target instanceof EventBus) {\n        target._off(name, eventHandler);\n      } else {\n        target.removeEventListener(name, eventHandler);\n      }\n\n      if (timeout) {\n        clearTimeout(timeout);\n      }\n      resolve(type);\n    }\n\n    const eventHandler = handler.bind(null, WaitOnType.EVENT);\n    if (target instanceof EventBus) {\n      target._on(name, eventHandler);\n    } else {\n      target.addEventListener(name, eventHandler);\n    }\n\n    const timeoutHandler = handler.bind(null, WaitOnType.TIMEOUT);\n    const timeout = setTimeout(timeoutHandler, delay);\n  });\n}\n\n/**\n * Promise that is resolved when DOM window becomes visible.\n */\nconst animationStarted = new Promise(function (resolve) {\n  if (\n    typeof PDFJSDev !== \"undefined\" &&\n    PDFJSDev.test(\"LIB && TESTING\") &&\n    typeof window === \"undefined\"\n  ) {\n    // Prevent \"ReferenceError: window is not defined\" errors when running the\n    // unit-tests in Node.js/Travis.\n    setTimeout(resolve, 20);\n    return;\n  }\n  window.requestAnimationFrame(resolve);\n});\n\n/**\n * NOTE: Only used to support various PDF viewer tests in `mozilla-central`.\n */\nfunction dispatchDOMEvent(eventName, args = null) {\n  if (typeof PDFJSDev !== \"undefined\" && !PDFJSDev.test(\"MOZCENTRAL\")) {\n    throw new Error(\"Not implemented: dispatchDOMEvent\");\n  }\n  const details = Object.create(null);\n  if (args && args.length > 0) {\n    const obj = args[0];\n    for (const key in obj) {\n      const value = obj[key];\n      if (key === \"source\") {\n        if (value === window || value === document) {\n          return; // No need to re-dispatch (already) global events.\n        }\n        continue; // Ignore the `source` property.\n      }\n      details[key] = value;\n    }\n  }\n  const event = document.createEvent(\"CustomEvent\");\n  event.initCustomEvent(eventName, true, true, details);\n  document.dispatchEvent(event);\n}\n\n/**\n * Simple event bus for an application. Listeners are attached using the `on`\n * and `off` methods. To raise an event, the `dispatch` method shall be used.\n */\nclass EventBus {\n  constructor(options) {\n    this._listeners = Object.create(null);\n\n    if (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"MOZCENTRAL\")) {\n      this._isInAutomation = (options && options.isInAutomation) === true;\n    }\n  }\n\n  /**\n   * @param {string} eventName\n   * @param {function} listener\n   */\n  on(eventName, listener) {\n    this._on(eventName, listener, { external: true });\n  }\n\n  /**\n   * @param {string} eventName\n   * @param {function} listener\n   */\n  off(eventName, listener) {\n    this._off(eventName, listener, { external: true });\n  }\n\n  dispatch(eventName) {\n    const eventListeners = this._listeners[eventName];\n    if (!eventListeners || eventListeners.length === 0) {\n      if (\n        (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"MOZCENTRAL\")) &&\n        this._isInAutomation\n      ) {\n        const args = Array.prototype.slice.call(arguments, 1);\n        dispatchDOMEvent(eventName, args);\n      }\n      return;\n    }\n    // Passing all arguments after the eventName to the listeners.\n    const args = Array.prototype.slice.call(arguments, 1);\n    let externalListeners;\n    // Making copy of the listeners array in case if it will be modified\n    // during dispatch.\n    eventListeners.slice(0).forEach(function ({ listener, external }) {\n      if (external) {\n        if (!externalListeners) {\n          externalListeners = [];\n        }\n        externalListeners.push(listener);\n        return;\n      }\n      listener.apply(null, args);\n    });\n    // Dispatch any \"external\" listeners *after* the internal ones, to give the\n    // viewer components time to handle events and update their state first.\n    if (externalListeners) {\n      externalListeners.forEach(function (listener) {\n        listener.apply(null, args);\n      });\n      externalListeners = null;\n    }\n    if (\n      (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"MOZCENTRAL\")) &&\n      this._isInAutomation\n    ) {\n      dispatchDOMEvent(eventName, args);\n    }\n  }\n\n  /**\n   * @ignore\n   */\n  _on(eventName, listener, options = null) {\n    let eventListeners = this._listeners[eventName];\n    if (!eventListeners) {\n      this._listeners[eventName] = eventListeners = [];\n    }\n    eventListeners.push({\n      listener,\n      external: (options && options.external) === true,\n    });\n  }\n\n  /**\n   * @ignore\n   */\n  _off(eventName, listener, options = null) {\n    const eventListeners = this._listeners[eventName];\n    if (!eventListeners) {\n      return;\n    }\n    for (let i = 0, ii = eventListeners.length; i < ii; i++) {\n      if (eventListeners[i].listener === listener) {\n        eventListeners.splice(i, 1);\n        return;\n      }\n    }\n  }\n}\n\nfunction clamp(v, min, max) {\n  return Math.min(Math.max(v, min), max);\n}\n\nclass ProgressBar {\n  constructor(id, { height, width, units } = {}) {\n    this.visible = true;\n\n    // Fetch the sub-elements for later.\n    this.div = document.querySelector(id + \" .progress\");\n    // Get the loading bar element, so it can be resized to fit the viewer.\n    this.bar = this.div.parentNode;\n\n    // Get options, with sensible defaults.\n    this.height = height || 100;\n    this.width = width || 100;\n    this.units = units || \"%\";\n\n    // Initialize heights.\n    this.div.style.height = this.height + this.units;\n    this.percent = 0;\n  }\n\n  _updateBar() {\n    if (this._indeterminate) {\n      this.div.classList.add(\"indeterminate\");\n      this.div.style.width = this.width + this.units;\n      return;\n    }\n\n    this.div.classList.remove(\"indeterminate\");\n    const progressSize = (this.width * this._percent) / 100;\n    this.div.style.width = progressSize + this.units;\n  }\n\n  get percent() {\n    return this._percent;\n  }\n\n  set percent(val) {\n    this._indeterminate = isNaN(val);\n    this._percent = clamp(val, 0, 100);\n    this._updateBar();\n  }\n\n  setWidth(viewer) {\n    if (!viewer) {\n      return;\n    }\n    const container = viewer.parentNode;\n    const scrollbarWidth = container.offsetWidth - viewer.offsetWidth;\n    if (scrollbarWidth > 0) {\n      this.bar.style.width = `calc(100% - ${scrollbarWidth}px)`;\n    }\n  }\n\n  hide() {\n    if (!this.visible) {\n      return;\n    }\n    this.visible = false;\n    this.bar.classList.add(\"hidden\");\n    document.body.classList.remove(\"loadingInProgress\");\n  }\n\n  show() {\n    if (this.visible) {\n      return;\n    }\n    this.visible = true;\n    document.body.classList.add(\"loadingInProgress\");\n    this.bar.classList.remove(\"hidden\");\n  }\n}\n\n/**\n * Moves all elements of an array that satisfy condition to the end of the\n * array, preserving the order of the rest.\n */\nfunction moveToEndOfArray(arr, condition) {\n  const moved = [],\n    len = arr.length;\n  let write = 0;\n  for (let read = 0; read < len; ++read) {\n    if (condition(arr[read])) {\n      moved.push(arr[read]);\n    } else {\n      arr[write] = arr[read];\n      ++write;\n    }\n  }\n  for (let read = 0; write < len; ++read, ++write) {\n    arr[write] = moved[read];\n  }\n}\n\nexport {\n  AutoPrintRegExp,\n  CSS_UNITS,\n  DEFAULT_SCALE_VALUE,\n  DEFAULT_SCALE,\n  MIN_SCALE,\n  MAX_SCALE,\n  UNKNOWN_SCALE,\n  MAX_AUTO_SCALE,\n  SCROLLBAR_PADDING,\n  VERTICAL_PADDING,\n  isValidRotation,\n  isValidScrollMode,\n  isValidSpreadMode,\n  isPortraitOrientation,\n  PresentationModeState,\n  RendererType,\n  TextLayerMode,\n  ScrollMode,\n  SpreadMode,\n  NullL10n,\n  EventBus,\n  clamp,\n  ProgressBar,\n  getPDFFileNameFromURL,\n  noContextMenuHandler,\n  parseQueryString,\n  backtrackBeforeAllVisibleElements, // only exported for testing\n  getVisibleElements,\n  roundToDivide,\n  getPageSizeInches,\n  approximateFraction,\n  getOutputScale,\n  scrollIntoView,\n  watchScroll,\n  binarySearchFirstItem,\n  normalizeWheelEventDelta,\n  animationStarted,\n  WaitOnType,\n  waitOnEventOrTimeout,\n  moveToEndOfArray,\n};\n","/* Copyright 2015 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { parseQueryString } from \"./ui_utils.js\";\n\n/**\n * @typedef {Object} PDFLinkServiceOptions\n * @property {EventBus} eventBus - The application event bus.\n * @property {number} [externalLinkTarget] - Specifies the `target` attribute\n *   for external links. Must use one of the values from {LinkTarget}.\n *   Defaults to using no target.\n * @property {string} [externalLinkRel] - Specifies the `rel` attribute for\n *   external links. Defaults to stripping the referrer.\n * @property {boolean} [ignoreDestinationZoom] - Ignores the zoom argument,\n *   thus preserving the current zoom level in the viewer, when navigating\n *   to internal destinations. The default value is `false`.\n */\n\n/**\n * Performs navigation functions inside PDF, such as opening specified page,\n * or destination.\n * @implements {IPDFLinkService}\n */\nclass PDFLinkService {\n  /**\n   * @param {PDFLinkServiceOptions} options\n   */\n  constructor({\n    eventBus,\n    externalLinkTarget = null,\n    externalLinkRel = null,\n    externalLinkEnabled = true,\n    ignoreDestinationZoom = false,\n  } = {}) {\n    this.eventBus = eventBus;\n    this.externalLinkTarget = externalLinkTarget;\n    this.externalLinkRel = externalLinkRel;\n    this.externalLinkEnabled = externalLinkEnabled;\n    this._ignoreDestinationZoom = ignoreDestinationZoom;\n\n    this.baseUrl = null;\n    this.pdfDocument = null;\n    this.pdfViewer = null;\n    this.pdfHistory = null;\n\n    this._pagesRefCache = null;\n  }\n\n  setDocument(pdfDocument, baseUrl = null) {\n    this.baseUrl = baseUrl;\n    this.pdfDocument = pdfDocument;\n    this._pagesRefCache = Object.create(null);\n  }\n\n  setViewer(pdfViewer) {\n    this.pdfViewer = pdfViewer;\n  }\n\n  setHistory(pdfHistory) {\n    this.pdfHistory = pdfHistory;\n  }\n\n  /**\n   * @type {number}\n   */\n  get pagesCount() {\n    return this.pdfDocument ? this.pdfDocument.numPages : 0;\n  }\n\n  /**\n   * @type {number}\n   */\n  get page() {\n    return this.pdfViewer.currentPageNumber;\n  }\n\n  /**\n   * @param {number} value\n   */\n  set page(value) {\n    this.pdfViewer.currentPageNumber = value;\n  }\n\n  /**\n   * @type {number}\n   */\n  get rotation() {\n    return this.pdfViewer.pagesRotation;\n  }\n\n  /**\n   * @param {number} value\n   */\n  set rotation(value) {\n    this.pdfViewer.pagesRotation = value;\n  }\n\n  /**\n   * @param {string|Array} dest - The named, or explicit, PDF destination.\n   */\n  navigateTo(dest) {\n    const goToDestination = ({ namedDest, explicitDest }) => {\n      // Dest array looks like that: <page-ref> </XYZ|/FitXXX> <args..>\n      const destRef = explicitDest[0];\n      let pageNumber;\n\n      if (destRef instanceof Object) {\n        pageNumber = this._cachedPageNumber(destRef);\n\n        if (pageNumber === null) {\n          // Fetch the page reference if it's not yet available. This could\n          // only occur during loading, before all pages have been resolved.\n          this.pdfDocument\n            .getPageIndex(destRef)\n            .then(pageIndex => {\n              this.cachePageRef(pageIndex + 1, destRef);\n              goToDestination({ namedDest, explicitDest });\n            })\n            .catch(() => {\n              console.error(\n                `PDFLinkService.navigateTo: \"${destRef}\" is not ` +\n                  `a valid page reference, for dest=\"${dest}\".`\n              );\n            });\n          return;\n        }\n      } else if (Number.isInteger(destRef)) {\n        pageNumber = destRef + 1;\n      } else {\n        console.error(\n          `PDFLinkService.navigateTo: \"${destRef}\" is not ` +\n            `a valid destination reference, for dest=\"${dest}\".`\n        );\n        return;\n      }\n      if (!pageNumber || pageNumber < 1 || pageNumber > this.pagesCount) {\n        console.error(\n          `PDFLinkService.navigateTo: \"${pageNumber}\" is not ` +\n            `a valid page number, for dest=\"${dest}\".`\n        );\n        return;\n      }\n\n      if (this.pdfHistory) {\n        // Update the browser history before scrolling the new destination into\n        // view, to be able to accurately capture the current document position.\n        this.pdfHistory.pushCurrentPosition();\n        this.pdfHistory.push({ namedDest, explicitDest, pageNumber });\n      }\n\n      this.pdfViewer.scrollPageIntoView({\n        pageNumber,\n        destArray: explicitDest,\n        ignoreDestinationZoom: this._ignoreDestinationZoom,\n      });\n    };\n\n    new Promise((resolve, reject) => {\n      if (typeof dest === \"string\") {\n        this.pdfDocument.getDestination(dest).then(destArray => {\n          resolve({\n            namedDest: dest,\n            explicitDest: destArray,\n          });\n        });\n        return;\n      }\n      resolve({\n        namedDest: \"\",\n        explicitDest: dest,\n      });\n    }).then(data => {\n      if (!Array.isArray(data.explicitDest)) {\n        console.error(\n          `PDFLinkService.navigateTo: \"${data.explicitDest}\" is` +\n            ` not a valid destination array, for dest=\"${dest}\".`\n        );\n        return;\n      }\n      goToDestination(data);\n    });\n  }\n\n  /**\n   * @param {string|Array} dest - The PDF destination object.\n   * @returns {string} The hyperlink to the PDF object.\n   */\n  getDestinationHash(dest) {\n    if (typeof dest === \"string\") {\n      return this.getAnchorUrl(\"#\" + escape(dest));\n    }\n    if (Array.isArray(dest)) {\n      const str = JSON.stringify(dest);\n      return this.getAnchorUrl(\"#\" + escape(str));\n    }\n    return this.getAnchorUrl(\"\");\n  }\n\n  /**\n   * Prefix the full url on anchor links to make sure that links are resolved\n   * relative to the current URL instead of the one defined in <base href>.\n   * @param {string} anchor The anchor hash, including the #.\n   * @returns {string} The hyperlink to the PDF object.\n   */\n  getAnchorUrl(anchor) {\n    return (this.baseUrl || \"\") + anchor;\n  }\n\n  /**\n   * @param {string} hash\n   */\n  setHash(hash) {\n    let pageNumber, dest;\n    if (hash.includes(\"=\")) {\n      const params = parseQueryString(hash);\n      if (\"search\" in params) {\n        this.eventBus.dispatch(\"findfromurlhash\", {\n          source: this,\n          query: params.search.replace(/\"/g, \"\"),\n          phraseSearch: params.phrase === \"true\",\n        });\n      }\n      // borrowing syntax from \"Parameters for Opening PDF Files\"\n      if (\"page\" in params) {\n        pageNumber = params.page | 0 || 1;\n      }\n      if (\"zoom\" in params) {\n        // Build the destination array.\n        const zoomArgs = params.zoom.split(\",\"); // scale,left,top\n        const zoomArg = zoomArgs[0];\n        const zoomArgNumber = parseFloat(zoomArg);\n\n        if (!zoomArg.includes(\"Fit\")) {\n          // If the zoomArg is a number, it has to get divided by 100. If it's\n          // a string, it should stay as it is.\n          dest = [\n            null,\n            { name: \"XYZ\" },\n            zoomArgs.length > 1 ? zoomArgs[1] | 0 : null,\n            zoomArgs.length > 2 ? zoomArgs[2] | 0 : null,\n            zoomArgNumber ? zoomArgNumber / 100 : zoomArg,\n          ];\n        } else {\n          if (zoomArg === \"Fit\" || zoomArg === \"FitB\") {\n            dest = [null, { name: zoomArg }];\n          } else if (\n            zoomArg === \"FitH\" ||\n            zoomArg === \"FitBH\" ||\n            zoomArg === \"FitV\" ||\n            zoomArg === \"FitBV\"\n          ) {\n            dest = [\n              null,\n              { name: zoomArg },\n              zoomArgs.length > 1 ? zoomArgs[1] | 0 : null,\n            ];\n          } else if (zoomArg === \"FitR\") {\n            if (zoomArgs.length !== 5) {\n              console.error(\n                'PDFLinkService.setHash: Not enough parameters for \"FitR\".'\n              );\n            } else {\n              dest = [\n                null,\n                { name: zoomArg },\n                zoomArgs[1] | 0,\n                zoomArgs[2] | 0,\n                zoomArgs[3] | 0,\n                zoomArgs[4] | 0,\n              ];\n            }\n          } else {\n            console.error(\n              `PDFLinkService.setHash: \"${zoomArg}\" is not ` +\n                \"a valid zoom value.\"\n            );\n          }\n        }\n      }\n      if (dest) {\n        this.pdfViewer.scrollPageIntoView({\n          pageNumber: pageNumber || this.page,\n          destArray: dest,\n          allowNegativeOffset: true,\n        });\n      } else if (pageNumber) {\n        this.page = pageNumber; // simple page\n      }\n      if (\"pagemode\" in params) {\n        this.eventBus.dispatch(\"pagemode\", {\n          source: this,\n          mode: params.pagemode,\n        });\n      }\n      // Ensure that this parameter is *always* handled last, in order to\n      // guarantee that it won't be overridden (e.g. by the \"page\" parameter).\n      if (\"nameddest\" in params) {\n        this.navigateTo(params.nameddest);\n      }\n    } else {\n      // Named (or explicit) destination.\n      dest = unescape(hash);\n      try {\n        dest = JSON.parse(dest);\n\n        if (!Array.isArray(dest)) {\n          // Avoid incorrectly rejecting a valid named destination, such as\n          // e.g. \"4.3\" or \"true\", because `JSON.parse` converted its type.\n          dest = dest.toString();\n        }\n      } catch (ex) {}\n\n      if (typeof dest === \"string\" || isValidExplicitDestination(dest)) {\n        this.navigateTo(dest);\n        return;\n      }\n      console.error(\n        `PDFLinkService.setHash: \"${unescape(hash)}\" is not ` +\n          \"a valid destination.\"\n      );\n    }\n  }\n\n  /**\n   * @param {string} action\n   */\n  executeNamedAction(action) {\n    // See PDF reference, table 8.45 - Named action\n    switch (action) {\n      case \"GoBack\":\n        if (this.pdfHistory) {\n          this.pdfHistory.back();\n        }\n        break;\n\n      case \"GoForward\":\n        if (this.pdfHistory) {\n          this.pdfHistory.forward();\n        }\n        break;\n\n      case \"NextPage\":\n        if (this.page < this.pagesCount) {\n          this.page++;\n        }\n        break;\n\n      case \"PrevPage\":\n        if (this.page > 1) {\n          this.page--;\n        }\n        break;\n\n      case \"LastPage\":\n        this.page = this.pagesCount;\n        break;\n\n      case \"FirstPage\":\n        this.page = 1;\n        break;\n\n      default:\n        break; // No action according to spec\n    }\n\n    this.eventBus.dispatch(\"namedaction\", {\n      source: this,\n      action,\n    });\n  }\n\n  /**\n   * @param {number} pageNum - page number.\n   * @param {Object} pageRef - reference to the page.\n   */\n  cachePageRef(pageNum, pageRef) {\n    if (!pageRef) {\n      return;\n    }\n    const refStr =\n      pageRef.gen === 0 ? `${pageRef.num}R` : `${pageRef.num}R${pageRef.gen}`;\n    this._pagesRefCache[refStr] = pageNum;\n  }\n\n  _cachedPageNumber(pageRef) {\n    const refStr =\n      pageRef.gen === 0 ? `${pageRef.num}R` : `${pageRef.num}R${pageRef.gen}`;\n    return (this._pagesRefCache && this._pagesRefCache[refStr]) || null;\n  }\n\n  /**\n   * @param {number} pageNumber\n   */\n  isPageVisible(pageNumber) {\n    return this.pdfViewer.isPageVisible(pageNumber);\n  }\n}\n\nfunction isValidExplicitDestination(dest) {\n  if (!Array.isArray(dest)) {\n    return false;\n  }\n  const destLength = dest.length;\n  if (destLength < 2) {\n    return false;\n  }\n  const page = dest[0];\n  if (\n    !(\n      typeof page === \"object\" &&\n      Number.isInteger(page.num) &&\n      Number.isInteger(page.gen)\n    ) &&\n    !(Number.isInteger(page) && page >= 0)\n  ) {\n    return false;\n  }\n  const zoom = dest[1];\n  if (!(typeof zoom === \"object\" && typeof zoom.name === \"string\")) {\n    return false;\n  }\n  let allowNull = true;\n  switch (zoom.name) {\n    case \"XYZ\":\n      if (destLength !== 5) {\n        return false;\n      }\n      break;\n    case \"Fit\":\n    case \"FitB\":\n      return destLength === 2;\n    case \"FitH\":\n    case \"FitBH\":\n    case \"FitV\":\n    case \"FitBV\":\n      if (destLength !== 3) {\n        return false;\n      }\n      break;\n    case \"FitR\":\n      if (destLength !== 6) {\n        return false;\n      }\n      allowNull = false;\n      break;\n    default:\n      return false;\n  }\n  for (let i = 2; i < destLength; i++) {\n    const param = dest[i];\n    if (!(typeof param === \"number\" || (allowNull && param === null))) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * @implements {IPDFLinkService}\n */\nclass SimpleLinkService {\n  constructor() {\n    this.externalLinkTarget = null;\n    this.externalLinkRel = null;\n    this.externalLinkEnabled = true;\n    this._ignoreDestinationZoom = false;\n  }\n\n  /**\n   * @type {number}\n   */\n  get pagesCount() {\n    return 0;\n  }\n\n  /**\n   * @type {number}\n   */\n  get page() {\n    return 0;\n  }\n\n  /**\n   * @param {number} value\n   */\n  set page(value) {}\n\n  /**\n   * @type {number}\n   */\n  get rotation() {\n    return 0;\n  }\n\n  /**\n   * @param {number} value\n   */\n  set rotation(value) {}\n\n  /**\n   * @param dest - The PDF destination object.\n   */\n  navigateTo(dest) {}\n\n  /**\n   * @param dest - The PDF destination object.\n   * @returns {string} The hyperlink to the PDF object.\n   */\n  getDestinationHash(dest) {\n    return \"#\";\n  }\n\n  /**\n   * @param hash - The PDF parameters/hash.\n   * @returns {string} The hyperlink to the PDF object.\n   */\n  getAnchorUrl(hash) {\n    return \"#\";\n  }\n\n  /**\n   * @param {string} hash\n   */\n  setHash(hash) {}\n\n  /**\n   * @param {string} action\n   */\n  executeNamedAction(action) {}\n\n  /**\n   * @param {number} pageNum - page number.\n   * @param {Object} pageRef - reference to the page.\n   */\n  cachePageRef(pageNum, pageRef) {}\n\n  /**\n   * @param {number} pageNumber\n   */\n  isPageVisible(pageNumber) {\n    return true;\n  }\n}\n\nexport { PDFLinkService, SimpleLinkService };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { renderTextLayer } from \"pdfjs-lib\";\n\nconst EXPAND_DIVS_TIMEOUT = 300; // ms\n\n/**\n * @typedef {Object} TextLayerBuilderOptions\n * @property {HTMLDivElement} textLayerDiv - The text layer container.\n * @property {EventBus} eventBus - The application event bus.\n * @property {number} pageIndex - The page index.\n * @property {PageViewport} viewport - The viewport of the text layer.\n * @property {PDFFindController} findController\n * @property {boolean} enhanceTextSelection - Option to turn on improved\n *   text selection.\n */\n\n/**\n * The text layer builder provides text selection functionality for the PDF.\n * It does this by creating overlay divs over the PDF's text. These divs\n * contain text that matches the PDF text they are overlaying. This object\n * also provides a way to highlight text that is being searched for.\n */\nclass TextLayerBuilder {\n  constructor({\n    textLayerDiv,\n    eventBus,\n    pageIndex,\n    viewport,\n    findController = null,\n    enhanceTextSelection = false,\n  }) {\n    this.textLayerDiv = textLayerDiv;\n    this.eventBus = eventBus;\n    this.textContent = null;\n    this.textContentItemsStr = [];\n    this.textContentStream = null;\n    this.renderingDone = false;\n    this.pageIdx = pageIndex;\n    this.pageNumber = this.pageIdx + 1;\n    this.matches = [];\n    this.viewport = viewport;\n    this.textDivs = [];\n    this.findController = findController;\n    this.textLayerRenderTask = null;\n    this.enhanceTextSelection = enhanceTextSelection;\n\n    this._onUpdateTextLayerMatches = null;\n    this._bindMouse();\n  }\n\n  /**\n   * @private\n   */\n  _finishRendering() {\n    this.renderingDone = true;\n\n    if (!this.enhanceTextSelection) {\n      const endOfContent = document.createElement(\"div\");\n      endOfContent.className = \"endOfContent\";\n      this.textLayerDiv.appendChild(endOfContent);\n    }\n\n    this.eventBus.dispatch(\"textlayerrendered\", {\n      source: this,\n      pageNumber: this.pageNumber,\n      numTextDivs: this.textDivs.length,\n    });\n  }\n\n  /**\n   * Renders the text layer.\n   *\n   * @param {number} [timeout] - Wait for a specified amount of milliseconds\n   *                             before rendering.\n   */\n  render(timeout = 0) {\n    if (!(this.textContent || this.textContentStream) || this.renderingDone) {\n      return;\n    }\n    this.cancel();\n\n    this.textDivs = [];\n    const textLayerFrag = document.createDocumentFragment();\n    this.textLayerRenderTask = renderTextLayer({\n      textContent: this.textContent,\n      textContentStream: this.textContentStream,\n      container: textLayerFrag,\n      viewport: this.viewport,\n      textDivs: this.textDivs,\n      textContentItemsStr: this.textContentItemsStr,\n      timeout,\n      enhanceTextSelection: this.enhanceTextSelection,\n    });\n    this.textLayerRenderTask.promise.then(\n      () => {\n        this.textLayerDiv.appendChild(textLayerFrag);\n        this._finishRendering();\n        this._updateMatches();\n      },\n      function (reason) {\n        // Cancelled or failed to render text layer; skipping errors.\n      }\n    );\n\n    if (!this._onUpdateTextLayerMatches) {\n      this._onUpdateTextLayerMatches = evt => {\n        if (evt.pageIndex === this.pageIdx || evt.pageIndex === -1) {\n          this._updateMatches();\n        }\n      };\n      this.eventBus._on(\n        \"updatetextlayermatches\",\n        this._onUpdateTextLayerMatches\n      );\n    }\n  }\n\n  /**\n   * Cancel rendering of the text layer.\n   */\n  cancel() {\n    if (this.textLayerRenderTask) {\n      this.textLayerRenderTask.cancel();\n      this.textLayerRenderTask = null;\n    }\n    if (this._onUpdateTextLayerMatches) {\n      this.eventBus._off(\n        \"updatetextlayermatches\",\n        this._onUpdateTextLayerMatches\n      );\n      this._onUpdateTextLayerMatches = null;\n    }\n  }\n\n  setTextContentStream(readableStream) {\n    this.cancel();\n    this.textContentStream = readableStream;\n  }\n\n  setTextContent(textContent) {\n    this.cancel();\n    this.textContent = textContent;\n  }\n\n  _convertMatches(matches, matchesLength) {\n    // Early exit if there is nothing to convert.\n    if (!matches) {\n      return [];\n    }\n    const { findController, textContentItemsStr } = this;\n\n    let i = 0,\n      iIndex = 0;\n    const end = textContentItemsStr.length - 1;\n    const queryLen = findController.state.query.length;\n    const result = [];\n\n    for (let m = 0, mm = matches.length; m < mm; m++) {\n      // Calculate the start position.\n      let matchIdx = matches[m];\n\n      // Loop over the divIdxs.\n      while (i !== end && matchIdx >= iIndex + textContentItemsStr[i].length) {\n        iIndex += textContentItemsStr[i].length;\n        i++;\n      }\n\n      if (i === textContentItemsStr.length) {\n        console.error(\"Could not find a matching mapping\");\n      }\n\n      const match = {\n        begin: {\n          divIdx: i,\n          offset: matchIdx - iIndex,\n        },\n      };\n\n      // Calculate the end position.\n      if (matchesLength) {\n        // Multiterm search.\n        matchIdx += matchesLength[m];\n      } else {\n        // Phrase search.\n        matchIdx += queryLen;\n      }\n\n      // Somewhat the same array as above, but use > instead of >= to get\n      // the end position right.\n      while (i !== end && matchIdx > iIndex + textContentItemsStr[i].length) {\n        iIndex += textContentItemsStr[i].length;\n        i++;\n      }\n\n      match.end = {\n        divIdx: i,\n        offset: matchIdx - iIndex,\n      };\n      result.push(match);\n    }\n    return result;\n  }\n\n  _renderMatches(matches) {\n    // Early exit if there is nothing to render.\n    if (matches.length === 0) {\n      return;\n    }\n    const { findController, pageIdx, textContentItemsStr, textDivs } = this;\n\n    const isSelectedPage = pageIdx === findController.selected.pageIdx;\n    const selectedMatchIdx = findController.selected.matchIdx;\n    const highlightAll = findController.state.highlightAll;\n    let prevEnd = null;\n    const infinity = {\n      divIdx: -1,\n      offset: undefined,\n    };\n\n    function beginText(begin, className) {\n      const divIdx = begin.divIdx;\n      textDivs[divIdx].textContent = \"\";\n      appendTextToDiv(divIdx, 0, begin.offset, className);\n    }\n\n    function appendTextToDiv(divIdx, fromOffset, toOffset, className) {\n      const div = textDivs[divIdx];\n      const content = textContentItemsStr[divIdx].substring(\n        fromOffset,\n        toOffset\n      );\n      const node = document.createTextNode(content);\n      if (className) {\n        const span = document.createElement(\"span\");\n        span.className = className;\n        span.appendChild(node);\n        div.appendChild(span);\n        return;\n      }\n      div.appendChild(node);\n    }\n\n    let i0 = selectedMatchIdx,\n      i1 = i0 + 1;\n    if (highlightAll) {\n      i0 = 0;\n      i1 = matches.length;\n    } else if (!isSelectedPage) {\n      // Not highlighting all and this isn't the selected page, so do nothing.\n      return;\n    }\n\n    for (let i = i0; i < i1; i++) {\n      const match = matches[i];\n      const begin = match.begin;\n      const end = match.end;\n      const isSelected = isSelectedPage && i === selectedMatchIdx;\n      const highlightSuffix = isSelected ? \" selected\" : \"\";\n\n      if (isSelected) {\n        // Attempt to scroll the selected match into view.\n        findController.scrollMatchIntoView({\n          element: textDivs[begin.divIdx],\n          pageIndex: pageIdx,\n          matchIndex: selectedMatchIdx,\n        });\n      }\n\n      // Match inside new div.\n      if (!prevEnd || begin.divIdx !== prevEnd.divIdx) {\n        // If there was a previous div, then add the text at the end.\n        if (prevEnd !== null) {\n          appendTextToDiv(prevEnd.divIdx, prevEnd.offset, infinity.offset);\n        }\n        // Clear the divs and set the content until the starting point.\n        beginText(begin);\n      } else {\n        appendTextToDiv(prevEnd.divIdx, prevEnd.offset, begin.offset);\n      }\n\n      if (begin.divIdx === end.divIdx) {\n        appendTextToDiv(\n          begin.divIdx,\n          begin.offset,\n          end.offset,\n          \"highlight\" + highlightSuffix\n        );\n      } else {\n        appendTextToDiv(\n          begin.divIdx,\n          begin.offset,\n          infinity.offset,\n          \"highlight begin\" + highlightSuffix\n        );\n        for (let n0 = begin.divIdx + 1, n1 = end.divIdx; n0 < n1; n0++) {\n          textDivs[n0].className = \"highlight middle\" + highlightSuffix;\n        }\n        beginText(end, \"highlight end\" + highlightSuffix);\n      }\n      prevEnd = end;\n    }\n\n    if (prevEnd) {\n      appendTextToDiv(prevEnd.divIdx, prevEnd.offset, infinity.offset);\n    }\n  }\n\n  _updateMatches() {\n    // Only show matches when all rendering is done.\n    if (!this.renderingDone) {\n      return;\n    }\n    const {\n      findController,\n      matches,\n      pageIdx,\n      textContentItemsStr,\n      textDivs,\n    } = this;\n    let clearedUntilDivIdx = -1;\n\n    // Clear all current matches.\n    for (let i = 0, ii = matches.length; i < ii; i++) {\n      const match = matches[i];\n      const begin = Math.max(clearedUntilDivIdx, match.begin.divIdx);\n      for (let n = begin, end = match.end.divIdx; n <= end; n++) {\n        const div = textDivs[n];\n        div.textContent = textContentItemsStr[n];\n        div.className = \"\";\n      }\n      clearedUntilDivIdx = match.end.divIdx + 1;\n    }\n\n    if (!findController || !findController.highlightMatches) {\n      return;\n    }\n    // Convert the matches on the `findController` into the match format\n    // used for the textLayer.\n    const pageMatches = findController.pageMatches[pageIdx] || null;\n    const pageMatchesLength = findController.pageMatchesLength[pageIdx] || null;\n\n    this.matches = this._convertMatches(pageMatches, pageMatchesLength);\n    this._renderMatches(this.matches);\n  }\n\n  /**\n   * Improves text selection by adding an additional div where the mouse was\n   * clicked. This reduces flickering of the content if the mouse is slowly\n   * dragged up or down.\n   *\n   * @private\n   */\n  _bindMouse() {\n    const div = this.textLayerDiv;\n    let expandDivsTimer = null;\n\n    div.addEventListener(\"mousedown\", evt => {\n      if (this.enhanceTextSelection && this.textLayerRenderTask) {\n        this.textLayerRenderTask.expandTextDivs(true);\n        if (\n          (typeof PDFJSDev === \"undefined\" || !PDFJSDev.test(\"MOZCENTRAL\")) &&\n          expandDivsTimer\n        ) {\n          clearTimeout(expandDivsTimer);\n          expandDivsTimer = null;\n        }\n        return;\n      }\n\n      const end = div.querySelector(\".endOfContent\");\n      if (!end) {\n        return;\n      }\n      if (typeof PDFJSDev === \"undefined\" || !PDFJSDev.test(\"MOZCENTRAL\")) {\n        // On non-Firefox browsers, the selection will feel better if the height\n        // of the `endOfContent` div is adjusted to start at mouse click\n        // location. This avoids flickering when the selection moves up.\n        // However it does not work when selection is started on empty space.\n        let adjustTop = evt.target !== div;\n        if (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) {\n          adjustTop =\n            adjustTop &&\n            window\n              .getComputedStyle(end)\n              .getPropertyValue(\"-moz-user-select\") !== \"none\";\n        }\n        if (adjustTop) {\n          const divBounds = div.getBoundingClientRect();\n          const r = Math.max(0, (evt.pageY - divBounds.top) / divBounds.height);\n          end.style.top = (r * 100).toFixed(2) + \"%\";\n        }\n      }\n      end.classList.add(\"active\");\n    });\n\n    div.addEventListener(\"mouseup\", () => {\n      if (this.enhanceTextSelection && this.textLayerRenderTask) {\n        if (typeof PDFJSDev === \"undefined\" || !PDFJSDev.test(\"MOZCENTRAL\")) {\n          expandDivsTimer = setTimeout(() => {\n            if (this.textLayerRenderTask) {\n              this.textLayerRenderTask.expandTextDivs(false);\n            }\n            expandDivsTimer = null;\n          }, EXPAND_DIVS_TIMEOUT);\n        } else {\n          this.textLayerRenderTask.expandTextDivs(false);\n        }\n        return;\n      }\n\n      const end = div.querySelector(\".endOfContent\");\n      if (!end) {\n        return;\n      }\n      if (typeof PDFJSDev === \"undefined\" || !PDFJSDev.test(\"MOZCENTRAL\")) {\n        end.style.top = \"\";\n      }\n      end.classList.remove(\"active\");\n    });\n  }\n}\n\n/**\n * @implements IPDFTextLayerFactory\n */\nclass DefaultTextLayerFactory {\n  /**\n   * @param {HTMLDivElement} textLayerDiv\n   * @param {number} pageIndex\n   * @param {PageViewport} viewport\n   * @param {boolean} enhanceTextSelection\n   * @param {EventBus} eventBus\n   * @returns {TextLayerBuilder}\n   */\n  createTextLayerBuilder(\n    textLayerDiv,\n    pageIndex,\n    viewport,\n    enhanceTextSelection = false,\n    eventBus\n  ) {\n    return new TextLayerBuilder({\n      textLayerDiv,\n      pageIndex,\n      viewport,\n      enhanceTextSelection,\n      eventBus,\n    });\n  }\n}\n\nexport { TextLayerBuilder, DefaultTextLayerFactory };\n","/* Copyright 2013 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { createObjectURL, createValidAbsoluteUrl } from \"pdfjs-lib\";\nimport { viewerCompatibilityParams } from \"./viewer_compatibility.js\";\n\nif (typeof PDFJSDev !== \"undefined\" && !PDFJSDev.test(\"CHROME || GENERIC\")) {\n  throw new Error(\n    'Module \"pdfjs-web/download_manager\" shall not be used ' +\n      \"outside CHROME and GENERIC builds.\"\n  );\n}\n\nconst DISABLE_CREATE_OBJECT_URL =\n  viewerCompatibilityParams.disableCreateObjectURL || false;\n\nfunction download(blobUrl, filename) {\n  const a = document.createElement(\"a\");\n  if (!a.click) {\n    throw new Error('DownloadManager: \"a.click()\" is not supported.');\n  }\n  a.href = blobUrl;\n  a.target = \"_parent\";\n  // Use a.download if available. This increases the likelihood that\n  // the file is downloaded instead of opened by another PDF plugin.\n  if (\"download\" in a) {\n    a.download = filename;\n  }\n  // <a> must be in the document for IE and recent Firefox versions,\n  // otherwise .click() is ignored.\n  (document.body || document.documentElement).appendChild(a);\n  a.click();\n  a.remove();\n}\n\nclass DownloadManager {\n  constructor({ disableCreateObjectURL = DISABLE_CREATE_OBJECT_URL }) {\n    this.disableCreateObjectURL = disableCreateObjectURL;\n  }\n\n  downloadUrl(url, filename) {\n    if (!createValidAbsoluteUrl(url, \"http://example.com\")) {\n      return; // restricted/invalid URL\n    }\n    download(url + \"#pdfjs.action=download\", filename);\n  }\n\n  downloadData(data, filename, contentType) {\n    if (navigator.msSaveBlob) {\n      // IE10 and above\n      navigator.msSaveBlob(new Blob([data], { type: contentType }), filename);\n      return;\n    }\n    const blobUrl = createObjectURL(\n      data,\n      contentType,\n      this.disableCreateObjectURL\n    );\n    download(blobUrl, filename);\n  }\n\n  download(blob, url, filename) {\n    if (navigator.msSaveBlob) {\n      // IE10 / IE11\n      if (!navigator.msSaveBlob(blob, filename)) {\n        this.downloadUrl(url, filename);\n      }\n      return;\n    }\n\n    if (this.disableCreateObjectURL) {\n      // URL.createObjectURL is not supported\n      this.downloadUrl(url, filename);\n      return;\n    }\n\n    const blobUrl = URL.createObjectURL(blob);\n    download(blobUrl, filename);\n  }\n}\n\nexport { DownloadManager };\n","/* Copyright 2018 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst compatibilityParams = Object.create(null);\nif (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) {\n  const userAgent =\n    (typeof navigator !== \"undefined\" && navigator.userAgent) || \"\";\n  const platform =\n    (typeof navigator !== \"undefined\" && navigator.platform) || \"\";\n  const maxTouchPoints =\n    (typeof navigator !== \"undefined\" && navigator.maxTouchPoints) || 1;\n\n  const isAndroid = /Android/.test(userAgent);\n  const isIE = /Trident/.test(userAgent);\n  const isIOS =\n    /\\b(iPad|iPhone|iPod)(?=;)/.test(userAgent) ||\n    (platform === \"MacIntel\" && maxTouchPoints > 1);\n  const isIOSChrome = /CriOS/.test(userAgent);\n\n  // Checks if possible to use URL.createObjectURL()\n  // Support: IE, Chrome on iOS\n  (function checkOnBlobSupport() {\n    // Sometimes IE and Chrome on iOS losing the data created with\n    // createObjectURL(), see issues #3977 and #8081.\n    if (isIE || isIOSChrome) {\n      compatibilityParams.disableCreateObjectURL = true;\n    }\n  })();\n\n  // Limit canvas size to 5 mega-pixels on mobile.\n  // Support: Android, iOS\n  (function checkCanvasSizeLimitation() {\n    if (isIOS || isAndroid) {\n      compatibilityParams.maxCanvasPixels = 5242880;\n    }\n  })();\n}\nconst viewerCompatibilityParams = Object.freeze(compatibilityParams);\n\nexport { viewerCompatibilityParams };\n","/* Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport \"../external/webL10n/l10n.js\";\n\nconst webL10n = document.webL10n;\n\nclass GenericL10n {\n  constructor(lang) {\n    this._lang = lang;\n    this._ready = new Promise((resolve, reject) => {\n      webL10n.setLanguage(lang, () => {\n        resolve(webL10n);\n      });\n    });\n  }\n\n  async getLanguage() {\n    const l10n = await this._ready;\n    return l10n.getLanguage();\n  }\n\n  async getDirection() {\n    const l10n = await this._ready;\n    return l10n.getDirection();\n  }\n\n  async get(property, args, fallback) {\n    const l10n = await this._ready;\n    return l10n.get(property, args, fallback);\n  }\n\n  async translate(element) {\n    const l10n = await this._ready;\n    return l10n.translate(element);\n  }\n}\n\nexport { GenericL10n };\n","/**\n * Copyright (c) 2011-2013 Fabien Cazenave, Mozilla.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to\n * deal in the Software without restriction, including without limitation the\n * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n * sell copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\n * IN THE SOFTWARE.\n */\n/*\n  Additional modifications for PDF.js project:\n    - Disables language initialization on page loading.\n    - Disables document translation on page loading.\n    - Removes consoleWarn and consoleLog and use console.log/warn directly.\n    - Removes window._ assignment.\n    - Remove compatibility code for OldIE.\n    - Replaces `String.prototype.substr()` with `String.prototype.substring()`.\n    - Removes `fireL10nReadyEvent` since the \"localized\" event it dispatches\n      is unused and may clash with an identically named event in the viewer.\n*/\n\n/*jshint browser: true, devel: true, es5: true, globalstrict: true */\n'use strict';\n\ndocument.webL10n = (function(window, document, undefined) {\n  var gL10nData = {};\n  var gTextData = '';\n  var gTextProp = 'textContent';\n  var gLanguage = '';\n  var gMacros = {};\n  var gReadyState = 'loading';\n\n\n  /**\n   * Synchronously loading l10n resources significantly minimizes flickering\n   * from displaying the app with non-localized strings and then updating the\n   * strings. Although this will block all script execution on this page, we\n   * expect that the l10n resources are available locally on flash-storage.\n   *\n   * As synchronous XHR is generally considered as a bad idea, we're still\n   * loading l10n resources asynchronously -- but we keep this in a setting,\n   * just in case... and applications using this library should hide their\n   * content until the `localized' event happens.\n   */\n\n  var gAsyncResourceLoading = true; // read-only\n\n\n  /**\n   * DOM helpers for the so-called \"HTML API\".\n   *\n   * These functions are written for modern browsers. For old versions of IE,\n   * they're overridden in the 'startup' section at the end of this file.\n   */\n\n  function getL10nResourceLinks() {\n    return document.querySelectorAll('link[type=\"application/l10n\"]');\n  }\n\n  function getL10nDictionary() {\n    var script = document.querySelector('script[type=\"application/l10n\"]');\n    // TODO: support multiple and external JSON dictionaries\n    return script ? JSON.parse(script.innerHTML) : null;\n  }\n\n  function getTranslatableChildren(element) {\n    return element ? element.querySelectorAll('*[data-l10n-id]') : [];\n  }\n\n  function getL10nAttributes(element) {\n    if (!element)\n      return {};\n\n    var l10nId = element.getAttribute('data-l10n-id');\n    var l10nArgs = element.getAttribute('data-l10n-args');\n    var args = {};\n    if (l10nArgs) {\n      try {\n        args = JSON.parse(l10nArgs);\n      } catch (e) {\n        console.warn('could not parse arguments for #' + l10nId);\n      }\n    }\n    return { id: l10nId, args: args };\n  }\n\n  function xhrLoadText(url, onSuccess, onFailure) {\n    onSuccess = onSuccess || function _onSuccess(data) {};\n    onFailure = onFailure || function _onFailure() {};\n\n    var xhr = new XMLHttpRequest();\n    xhr.open('GET', url, gAsyncResourceLoading);\n    if (xhr.overrideMimeType) {\n      xhr.overrideMimeType('text/plain; charset=utf-8');\n    }\n    xhr.onreadystatechange = function() {\n      if (xhr.readyState == 4) {\n        if (xhr.status == 200 || xhr.status === 0) {\n          onSuccess(xhr.responseText);\n        } else {\n          onFailure();\n        }\n      }\n    };\n    xhr.onerror = onFailure;\n    xhr.ontimeout = onFailure;\n\n    // in Firefox OS with the app:// protocol, trying to XHR a non-existing\n    // URL will raise an exception here -- hence this ugly try...catch.\n    try {\n      xhr.send(null);\n    } catch (e) {\n      onFailure();\n    }\n  }\n\n\n  /**\n   * l10n resource parser:\n   *  - reads (async XHR) the l10n resource matching `lang';\n   *  - imports linked resources (synchronously) when specified;\n   *  - parses the text data (fills `gL10nData' and `gTextData');\n   *  - triggers success/failure callbacks when done.\n   *\n   * @param {string} href\n   *    URL of the l10n resource to parse.\n   *\n   * @param {string} lang\n   *    locale (language) to parse. Must be a lowercase string.\n   *\n   * @param {Function} successCallback\n   *    triggered when the l10n resource has been successfully parsed.\n   *\n   * @param {Function} failureCallback\n   *    triggered when the an error has occurred.\n   *\n   * @return {void}\n   *    uses the following global variables: gL10nData, gTextData, gTextProp.\n   */\n\n  function parseResource(href, lang, successCallback, failureCallback) {\n    var baseURL = href.replace(/[^\\/]*$/, '') || './';\n\n    // handle escaped characters (backslashes) in a string\n    function evalString(text) {\n      if (text.lastIndexOf('\\\\') < 0)\n        return text;\n      return text.replace(/\\\\\\\\/g, '\\\\')\n                 .replace(/\\\\n/g, '\\n')\n                 .replace(/\\\\r/g, '\\r')\n                 .replace(/\\\\t/g, '\\t')\n                 .replace(/\\\\b/g, '\\b')\n                 .replace(/\\\\f/g, '\\f')\n                 .replace(/\\\\{/g, '{')\n                 .replace(/\\\\}/g, '}')\n                 .replace(/\\\\\"/g, '\"')\n                 .replace(/\\\\'/g, \"'\");\n    }\n\n    // parse *.properties text data into an l10n dictionary\n    // If gAsyncResourceLoading is false, then the callback will be called\n    // synchronously. Otherwise it is called asynchronously.\n    function parseProperties(text, parsedPropertiesCallback) {\n      var dictionary = {};\n\n      // token expressions\n      var reBlank = /^\\s*|\\s*$/;\n      var reComment = /^\\s*#|^\\s*$/;\n      var reSection = /^\\s*\\[(.*)\\]\\s*$/;\n      var reImport = /^\\s*@import\\s+url\\((.*)\\)\\s*$/i;\n      var reSplit = /^([^=\\s]*)\\s*=\\s*(.+)$/; // TODO: escape EOLs with '\\'\n\n      // parse the *.properties file into an associative array\n      function parseRawLines(rawText, extendedSyntax, parsedRawLinesCallback) {\n        var entries = rawText.replace(reBlank, '').split(/[\\r\\n]+/);\n        var currentLang = '*';\n        var genericLang = lang.split('-', 1)[0];\n        var skipLang = false;\n        var match = '';\n\n        function nextEntry() {\n          // Use infinite loop instead of recursion to avoid reaching the\n          // maximum recursion limit for content with many lines.\n          while (true) {\n            if (!entries.length) {\n              parsedRawLinesCallback();\n              return;\n            }\n            var line = entries.shift();\n\n            // comment or blank line?\n            if (reComment.test(line))\n              continue;\n\n            // the extended syntax supports [lang] sections and @import rules\n            if (extendedSyntax) {\n              match = reSection.exec(line);\n              if (match) { // section start?\n                // RFC 4646, section 4.4, \"All comparisons MUST be performed\n                // in a case-insensitive manner.\"\n\n                currentLang = match[1].toLowerCase();\n                skipLang = (currentLang !== '*') &&\n                    (currentLang !== lang) && (currentLang !== genericLang);\n                continue;\n              } else if (skipLang) {\n                continue;\n              }\n              match = reImport.exec(line);\n              if (match) { // @import rule?\n                loadImport(baseURL + match[1], nextEntry);\n                return;\n              }\n            }\n\n            // key-value pair\n            var tmp = line.match(reSplit);\n            if (tmp && tmp.length == 3) {\n              dictionary[tmp[1]] = evalString(tmp[2]);\n            }\n          }\n        }\n        nextEntry();\n      }\n\n      // import another *.properties file\n      function loadImport(url, callback) {\n        xhrLoadText(url, function(content) {\n          parseRawLines(content, false, callback); // don't allow recursive imports\n        }, function () {\n          console.warn(url + ' not found.');\n          callback();\n        });\n      }\n\n      // fill the dictionary\n      parseRawLines(text, true, function() {\n        parsedPropertiesCallback(dictionary);\n      });\n    }\n\n    // load and parse l10n data (warning: global variables are used here)\n    xhrLoadText(href, function(response) {\n      gTextData += response; // mostly for debug\n\n      // parse *.properties text data into an l10n dictionary\n      parseProperties(response, function(data) {\n\n        // find attribute descriptions, if any\n        for (var key in data) {\n          var id, prop, index = key.lastIndexOf('.');\n          if (index > 0) { // an attribute has been specified\n            id = key.substring(0, index);\n            prop = key.substring(index + 1);\n          } else { // no attribute: assuming text content by default\n            id = key;\n            prop = gTextProp;\n          }\n          if (!gL10nData[id]) {\n            gL10nData[id] = {};\n          }\n          gL10nData[id][prop] = data[key];\n        }\n\n        // trigger callback\n        if (successCallback) {\n          successCallback();\n        }\n      });\n    }, failureCallback);\n  }\n\n  // load and parse all resources for the specified locale\n  function loadLocale(lang, callback) {\n    // RFC 4646, section 2.1 states that language tags have to be treated as\n    // case-insensitive. Convert to lowercase for case-insensitive comparisons.\n    if (lang) {\n      lang = lang.toLowerCase();\n    }\n\n    callback = callback || function _callback() {};\n\n    clear();\n    gLanguage = lang;\n\n    // check all <link type=\"application/l10n\" href=\"...\" /> nodes\n    // and load the resource files\n    var langLinks = getL10nResourceLinks();\n    var langCount = langLinks.length;\n    if (langCount === 0) {\n      // we might have a pre-compiled dictionary instead\n      var dict = getL10nDictionary();\n      if (dict && dict.locales && dict.default_locale) {\n        console.log('using the embedded JSON directory, early way out');\n        gL10nData = dict.locales[lang];\n        if (!gL10nData) {\n          var defaultLocale = dict.default_locale.toLowerCase();\n          for (var anyCaseLang in dict.locales) {\n            anyCaseLang = anyCaseLang.toLowerCase();\n            if (anyCaseLang === lang) {\n              gL10nData = dict.locales[lang];\n              break;\n            } else if (anyCaseLang === defaultLocale) {\n              gL10nData = dict.locales[defaultLocale];\n            }\n          }\n        }\n        callback();\n      } else {\n        console.log('no resource to load, early way out');\n      }\n      // early way out\n      gReadyState = 'complete';\n      return;\n    }\n\n    // start the callback when all resources are loaded\n    var onResourceLoaded = null;\n    var gResourceCount = 0;\n    onResourceLoaded = function() {\n      gResourceCount++;\n      if (gResourceCount >= langCount) {\n        callback();\n        gReadyState = 'complete';\n      }\n    };\n\n    // load all resource files\n    function L10nResourceLink(link) {\n      var href = link.href;\n      // Note: If |gAsyncResourceLoading| is false, then the following callbacks\n      // are synchronously called.\n      this.load = function(lang, callback) {\n        parseResource(href, lang, callback, function() {\n          console.warn(href + ' not found.');\n          // lang not found, used default resource instead\n          console.warn('\"' + lang + '\" resource not found');\n          gLanguage = '';\n          // Resource not loaded, but we still need to call the callback.\n          callback();\n        });\n      };\n    }\n\n    for (var i = 0; i < langCount; i++) {\n      var resource = new L10nResourceLink(langLinks[i]);\n      resource.load(lang, onResourceLoaded);\n    }\n  }\n\n  // clear all l10n data\n  function clear() {\n    gL10nData = {};\n    gTextData = '';\n    gLanguage = '';\n    // TODO: clear all non predefined macros.\n    // There's no such macro /yet/ but we're planning to have some...\n  }\n\n\n  /**\n   * Get rules for plural forms (shared with JetPack), see:\n   * http://unicode.org/repos/cldr-tmp/trunk/diff/supplemental/language_plural_rules.html\n   * https://github.com/mozilla/addon-sdk/blob/master/python-lib/plural-rules-generator.p\n   *\n   * @param {string} lang\n   *    locale (language) used.\n   *\n   * @return {Function}\n   *    returns a function that gives the plural form name for a given integer:\n   *       var fun = getPluralRules('en');\n   *       fun(1)    -> 'one'\n   *       fun(0)    -> 'other'\n   *       fun(1000) -> 'other'.\n   */\n\n  function getPluralRules(lang) {\n    var locales2rules = {\n      'af': 3,\n      'ak': 4,\n      'am': 4,\n      'ar': 1,\n      'asa': 3,\n      'az': 0,\n      'be': 11,\n      'bem': 3,\n      'bez': 3,\n      'bg': 3,\n      'bh': 4,\n      'bm': 0,\n      'bn': 3,\n      'bo': 0,\n      'br': 20,\n      'brx': 3,\n      'bs': 11,\n      'ca': 3,\n      'cgg': 3,\n      'chr': 3,\n      'cs': 12,\n      'cy': 17,\n      'da': 3,\n      'de': 3,\n      'dv': 3,\n      'dz': 0,\n      'ee': 3,\n      'el': 3,\n      'en': 3,\n      'eo': 3,\n      'es': 3,\n      'et': 3,\n      'eu': 3,\n      'fa': 0,\n      'ff': 5,\n      'fi': 3,\n      'fil': 4,\n      'fo': 3,\n      'fr': 5,\n      'fur': 3,\n      'fy': 3,\n      'ga': 8,\n      'gd': 24,\n      'gl': 3,\n      'gsw': 3,\n      'gu': 3,\n      'guw': 4,\n      'gv': 23,\n      'ha': 3,\n      'haw': 3,\n      'he': 2,\n      'hi': 4,\n      'hr': 11,\n      'hu': 0,\n      'id': 0,\n      'ig': 0,\n      'ii': 0,\n      'is': 3,\n      'it': 3,\n      'iu': 7,\n      'ja': 0,\n      'jmc': 3,\n      'jv': 0,\n      'ka': 0,\n      'kab': 5,\n      'kaj': 3,\n      'kcg': 3,\n      'kde': 0,\n      'kea': 0,\n      'kk': 3,\n      'kl': 3,\n      'km': 0,\n      'kn': 0,\n      'ko': 0,\n      'ksb': 3,\n      'ksh': 21,\n      'ku': 3,\n      'kw': 7,\n      'lag': 18,\n      'lb': 3,\n      'lg': 3,\n      'ln': 4,\n      'lo': 0,\n      'lt': 10,\n      'lv': 6,\n      'mas': 3,\n      'mg': 4,\n      'mk': 16,\n      'ml': 3,\n      'mn': 3,\n      'mo': 9,\n      'mr': 3,\n      'ms': 0,\n      'mt': 15,\n      'my': 0,\n      'nah': 3,\n      'naq': 7,\n      'nb': 3,\n      'nd': 3,\n      'ne': 3,\n      'nl': 3,\n      'nn': 3,\n      'no': 3,\n      'nr': 3,\n      'nso': 4,\n      'ny': 3,\n      'nyn': 3,\n      'om': 3,\n      'or': 3,\n      'pa': 3,\n      'pap': 3,\n      'pl': 13,\n      'ps': 3,\n      'pt': 3,\n      'rm': 3,\n      'ro': 9,\n      'rof': 3,\n      'ru': 11,\n      'rwk': 3,\n      'sah': 0,\n      'saq': 3,\n      'se': 7,\n      'seh': 3,\n      'ses': 0,\n      'sg': 0,\n      'sh': 11,\n      'shi': 19,\n      'sk': 12,\n      'sl': 14,\n      'sma': 7,\n      'smi': 7,\n      'smj': 7,\n      'smn': 7,\n      'sms': 7,\n      'sn': 3,\n      'so': 3,\n      'sq': 3,\n      'sr': 11,\n      'ss': 3,\n      'ssy': 3,\n      'st': 3,\n      'sv': 3,\n      'sw': 3,\n      'syr': 3,\n      'ta': 3,\n      'te': 3,\n      'teo': 3,\n      'th': 0,\n      'ti': 4,\n      'tig': 3,\n      'tk': 3,\n      'tl': 4,\n      'tn': 3,\n      'to': 0,\n      'tr': 0,\n      'ts': 3,\n      'tzm': 22,\n      'uk': 11,\n      'ur': 3,\n      've': 3,\n      'vi': 0,\n      'vun': 3,\n      'wa': 4,\n      'wae': 3,\n      'wo': 0,\n      'xh': 3,\n      'xog': 3,\n      'yo': 0,\n      'zh': 0,\n      'zu': 3\n    };\n\n    // utility functions for plural rules methods\n    function isIn(n, list) {\n      return list.indexOf(n) !== -1;\n    }\n    function isBetween(n, start, end) {\n      return start <= n && n <= end;\n    }\n\n    // list of all plural rules methods:\n    // map an integer to the plural form name to use\n    var pluralRules = {\n      '0': function(n) {\n        return 'other';\n      },\n      '1': function(n) {\n        if ((isBetween((n % 100), 3, 10)))\n          return 'few';\n        if (n === 0)\n          return 'zero';\n        if ((isBetween((n % 100), 11, 99)))\n          return 'many';\n        if (n == 2)\n          return 'two';\n        if (n == 1)\n          return 'one';\n        return 'other';\n      },\n      '2': function(n) {\n        if (n !== 0 && (n % 10) === 0)\n          return 'many';\n        if (n == 2)\n          return 'two';\n        if (n == 1)\n          return 'one';\n        return 'other';\n      },\n      '3': function(n) {\n        if (n == 1)\n          return 'one';\n        return 'other';\n      },\n      '4': function(n) {\n        if ((isBetween(n, 0, 1)))\n          return 'one';\n        return 'other';\n      },\n      '5': function(n) {\n        if ((isBetween(n, 0, 2)) && n != 2)\n          return 'one';\n        return 'other';\n      },\n      '6': function(n) {\n        if (n === 0)\n          return 'zero';\n        if ((n % 10) == 1 && (n % 100) != 11)\n          return 'one';\n        return 'other';\n      },\n      '7': function(n) {\n        if (n == 2)\n          return 'two';\n        if (n == 1)\n          return 'one';\n        return 'other';\n      },\n      '8': function(n) {\n        if ((isBetween(n, 3, 6)))\n          return 'few';\n        if ((isBetween(n, 7, 10)))\n          return 'many';\n        if (n == 2)\n          return 'two';\n        if (n == 1)\n          return 'one';\n        return 'other';\n      },\n      '9': function(n) {\n        if (n === 0 || n != 1 && (isBetween((n % 100), 1, 19)))\n          return 'few';\n        if (n == 1)\n          return 'one';\n        return 'other';\n      },\n      '10': function(n) {\n        if ((isBetween((n % 10), 2, 9)) && !(isBetween((n % 100), 11, 19)))\n          return 'few';\n        if ((n % 10) == 1 && !(isBetween((n % 100), 11, 19)))\n          return 'one';\n        return 'other';\n      },\n      '11': function(n) {\n        if ((isBetween((n % 10), 2, 4)) && !(isBetween((n % 100), 12, 14)))\n          return 'few';\n        if ((n % 10) === 0 ||\n            (isBetween((n % 10), 5, 9)) ||\n            (isBetween((n % 100), 11, 14)))\n          return 'many';\n        if ((n % 10) == 1 && (n % 100) != 11)\n          return 'one';\n        return 'other';\n      },\n      '12': function(n) {\n        if ((isBetween(n, 2, 4)))\n          return 'few';\n        if (n == 1)\n          return 'one';\n        return 'other';\n      },\n      '13': function(n) {\n        if ((isBetween((n % 10), 2, 4)) && !(isBetween((n % 100), 12, 14)))\n          return 'few';\n        if (n != 1 && (isBetween((n % 10), 0, 1)) ||\n            (isBetween((n % 10), 5, 9)) ||\n            (isBetween((n % 100), 12, 14)))\n          return 'many';\n        if (n == 1)\n          return 'one';\n        return 'other';\n      },\n      '14': function(n) {\n        if ((isBetween((n % 100), 3, 4)))\n          return 'few';\n        if ((n % 100) == 2)\n          return 'two';\n        if ((n % 100) == 1)\n          return 'one';\n        return 'other';\n      },\n      '15': function(n) {\n        if (n === 0 || (isBetween((n % 100), 2, 10)))\n          return 'few';\n        if ((isBetween((n % 100), 11, 19)))\n          return 'many';\n        if (n == 1)\n          return 'one';\n        return 'other';\n      },\n      '16': function(n) {\n        if ((n % 10) == 1 && n != 11)\n          return 'one';\n        return 'other';\n      },\n      '17': function(n) {\n        if (n == 3)\n          return 'few';\n        if (n === 0)\n          return 'zero';\n        if (n == 6)\n          return 'many';\n        if (n == 2)\n          return 'two';\n        if (n == 1)\n          return 'one';\n        return 'other';\n      },\n      '18': function(n) {\n        if (n === 0)\n          return 'zero';\n        if ((isBetween(n, 0, 2)) && n !== 0 && n != 2)\n          return 'one';\n        return 'other';\n      },\n      '19': function(n) {\n        if ((isBetween(n, 2, 10)))\n          return 'few';\n        if ((isBetween(n, 0, 1)))\n          return 'one';\n        return 'other';\n      },\n      '20': function(n) {\n        if ((isBetween((n % 10), 3, 4) || ((n % 10) == 9)) && !(\n            isBetween((n % 100), 10, 19) ||\n            isBetween((n % 100), 70, 79) ||\n            isBetween((n % 100), 90, 99)\n            ))\n          return 'few';\n        if ((n % 1000000) === 0 && n !== 0)\n          return 'many';\n        if ((n % 10) == 2 && !isIn((n % 100), [12, 72, 92]))\n          return 'two';\n        if ((n % 10) == 1 && !isIn((n % 100), [11, 71, 91]))\n          return 'one';\n        return 'other';\n      },\n      '21': function(n) {\n        if (n === 0)\n          return 'zero';\n        if (n == 1)\n          return 'one';\n        return 'other';\n      },\n      '22': function(n) {\n        if ((isBetween(n, 0, 1)) || (isBetween(n, 11, 99)))\n          return 'one';\n        return 'other';\n      },\n      '23': function(n) {\n        if ((isBetween((n % 10), 1, 2)) || (n % 20) === 0)\n          return 'one';\n        return 'other';\n      },\n      '24': function(n) {\n        if ((isBetween(n, 3, 10) || isBetween(n, 13, 19)))\n          return 'few';\n        if (isIn(n, [2, 12]))\n          return 'two';\n        if (isIn(n, [1, 11]))\n          return 'one';\n        return 'other';\n      }\n    };\n\n    // return a function that gives the plural form name for a given integer\n    var index = locales2rules[lang.replace(/-.*$/, '')];\n    if (!(index in pluralRules)) {\n      console.warn('plural form unknown for [' + lang + ']');\n      return function() { return 'other'; };\n    }\n    return pluralRules[index];\n  }\n\n  // pre-defined 'plural' macro\n  gMacros.plural = function(str, param, key, prop) {\n    var n = parseFloat(param);\n    if (isNaN(n))\n      return str;\n\n    // TODO: support other properties (l20n still doesn't...)\n    if (prop != gTextProp)\n      return str;\n\n    // initialize _pluralRules\n    if (!gMacros._pluralRules) {\n      gMacros._pluralRules = getPluralRules(gLanguage);\n    }\n    var index = '[' + gMacros._pluralRules(n) + ']';\n\n    // try to find a [zero|one|two] key if it's defined\n    if (n === 0 && (key + '[zero]') in gL10nData) {\n      str = gL10nData[key + '[zero]'][prop];\n    } else if (n == 1 && (key + '[one]') in gL10nData) {\n      str = gL10nData[key + '[one]'][prop];\n    } else if (n == 2 && (key + '[two]') in gL10nData) {\n      str = gL10nData[key + '[two]'][prop];\n    } else if ((key + index) in gL10nData) {\n      str = gL10nData[key + index][prop];\n    } else if ((key + '[other]') in gL10nData) {\n      str = gL10nData[key + '[other]'][prop];\n    }\n\n    return str;\n  };\n\n\n  /**\n   * l10n dictionary functions\n   */\n\n  // fetch an l10n object, warn if not found, apply `args' if possible\n  function getL10nData(key, args, fallback) {\n    var data = gL10nData[key];\n    if (!data) {\n      console.warn('#' + key + ' is undefined.');\n      if (!fallback) {\n        return null;\n      }\n      data = fallback;\n    }\n\n    /** This is where l10n expressions should be processed.\n      * The plan is to support C-style expressions from the l20n project;\n      * until then, only two kinds of simple expressions are supported:\n      *   {[ index ]} and {{ arguments }}.\n      */\n    var rv = {};\n    for (var prop in data) {\n      var str = data[prop];\n      str = substIndexes(str, args, key, prop);\n      str = substArguments(str, args, key);\n      rv[prop] = str;\n    }\n    return rv;\n  }\n\n  // replace {[macros]} with their values\n  function substIndexes(str, args, key, prop) {\n    var reIndex = /\\{\\[\\s*([a-zA-Z]+)\\(([a-zA-Z]+)\\)\\s*\\]\\}/;\n    var reMatch = reIndex.exec(str);\n    if (!reMatch || !reMatch.length)\n      return str;\n\n    // an index/macro has been found\n    // Note: at the moment, only one parameter is supported\n    var macroName = reMatch[1];\n    var paramName = reMatch[2];\n    var param;\n    if (args && paramName in args) {\n      param = args[paramName];\n    } else if (paramName in gL10nData) {\n      param = gL10nData[paramName];\n    }\n\n    // there's no macro parser yet: it has to be defined in gMacros\n    if (macroName in gMacros) {\n      var macro = gMacros[macroName];\n      str = macro(str, param, key, prop);\n    }\n    return str;\n  }\n\n  // replace {{arguments}} with their values\n  function substArguments(str, args, key) {\n    var reArgs = /\\{\\{\\s*(.+?)\\s*\\}\\}/g;\n    return str.replace(reArgs, function(matched_text, arg) {\n      if (args && arg in args) {\n        return args[arg];\n      }\n      if (arg in gL10nData) {\n        return gL10nData[arg];\n      }\n      console.log('argument {{' + arg + '}} for #' + key + ' is undefined.');\n      return matched_text;\n    });\n  }\n\n  // translate an HTML element\n  function translateElement(element) {\n    var l10n = getL10nAttributes(element);\n    if (!l10n.id)\n      return;\n\n    // get the related l10n object\n    var data = getL10nData(l10n.id, l10n.args);\n    if (!data) {\n      console.warn('#' + l10n.id + ' is undefined.');\n      return;\n    }\n\n    // translate element (TODO: security checks?)\n    if (data[gTextProp]) { // XXX\n      if (getChildElementCount(element) === 0) {\n        element[gTextProp] = data[gTextProp];\n      } else {\n        // this element has element children: replace the content of the first\n        // (non-empty) child textNode and clear other child textNodes\n        var children = element.childNodes;\n        var found = false;\n        for (var i = 0, l = children.length; i < l; i++) {\n          if (children[i].nodeType === 3 && /\\S/.test(children[i].nodeValue)) {\n            if (found) {\n              children[i].nodeValue = '';\n            } else {\n              children[i].nodeValue = data[gTextProp];\n              found = true;\n            }\n          }\n        }\n        // if no (non-empty) textNode is found, insert a textNode before the\n        // first element child.\n        if (!found) {\n          var textNode = document.createTextNode(data[gTextProp]);\n          element.insertBefore(textNode, element.firstChild);\n        }\n      }\n      delete data[gTextProp];\n    }\n\n    for (var k in data) {\n      element[k] = data[k];\n    }\n  }\n\n  // webkit browsers don't currently support 'children' on SVG elements...\n  function getChildElementCount(element) {\n    if (element.children) {\n      return element.children.length;\n    }\n    if (typeof element.childElementCount !== 'undefined') {\n      return element.childElementCount;\n    }\n    var count = 0;\n    for (var i = 0; i < element.childNodes.length; i++) {\n      count += element.nodeType === 1 ? 1 : 0;\n    }\n    return count;\n  }\n\n  // translate an HTML subtree\n  function translateFragment(element) {\n    element = element || document.documentElement;\n\n    // check all translatable children (= w/ a `data-l10n-id' attribute)\n    var children = getTranslatableChildren(element);\n    var elementCount = children.length;\n    for (var i = 0; i < elementCount; i++) {\n      translateElement(children[i]);\n    }\n\n    // translate element itself if necessary\n    translateElement(element);\n  }\n\n  return {\n    // get a localized string\n    get: function(key, args, fallbackString) {\n      var index = key.lastIndexOf('.');\n      var prop = gTextProp;\n      if (index > 0) { // An attribute has been specified\n        prop = key.substring(index + 1);\n        key = key.substring(0, index);\n      }\n      var fallback;\n      if (fallbackString) {\n        fallback = {};\n        fallback[prop] = fallbackString;\n      }\n      var data = getL10nData(key, args, fallback);\n      if (data && prop in data) {\n        return data[prop];\n      }\n      return '{{' + key + '}}';\n    },\n\n    // debug\n    getData: function() { return gL10nData; },\n    getText: function() { return gTextData; },\n\n    // get|set the document language\n    getLanguage: function() { return gLanguage; },\n    setLanguage: function(lang, callback) {\n      loadLocale(lang, function() {\n        if (callback)\n          callback();\n      });\n    },\n\n    // get the direction (ltr|rtl) of the current language\n    getDirection: function() {\n      // http://www.w3.org/International/questions/qa-scripts\n      // Arabic, Hebrew, Farsi, Pashto, Urdu\n      var rtlList = ['ar', 'he', 'fa', 'ps', 'ur'];\n      var shortCode = gLanguage.split('-', 1)[0];\n      return (rtlList.indexOf(shortCode) >= 0) ? 'rtl' : 'ltr';\n    },\n\n    // translate an element or document fragment\n    translate: translateFragment,\n\n    // this can be used to prevent race conditions\n    getReadyState: function() { return gReadyState; },\n    ready: function(callback) {\n      if (!callback) {\n        return;\n      } else if (gReadyState == 'complete' || gReadyState == 'interactive') {\n        window.setTimeout(function() {\n          callback();\n        });\n      } else if (document.addEventListener) {\n        document.addEventListener('localized', function once() {\n          document.removeEventListener('localized', once);\n          callback();\n        });\n      }\n    }\n  };\n}) (window, document);\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { createPromiseCapability } from \"pdfjs-lib\";\nimport { getCharacterType } from \"./pdf_find_utils.js\";\nimport { scrollIntoView } from \"./ui_utils.js\";\n\nconst FindState = {\n  FOUND: 0,\n  NOT_FOUND: 1,\n  WRAPPED: 2,\n  PENDING: 3,\n};\n\nconst FIND_TIMEOUT = 250; // ms\nconst MATCH_SCROLL_OFFSET_TOP = -50; // px\nconst MATCH_SCROLL_OFFSET_LEFT = -400; // px\n\nconst CHARACTERS_TO_NORMALIZE = {\n  \"\\u2018\": \"'\", // Left single quotation mark\n  \"\\u2019\": \"'\", // Right single quotation mark\n  \"\\u201A\": \"'\", // Single low-9 quotation mark\n  \"\\u201B\": \"'\", // Single high-reversed-9 quotation mark\n  \"\\u201C\": '\"', // Left double quotation mark\n  \"\\u201D\": '\"', // Right double quotation mark\n  \"\\u201E\": '\"', // Double low-9 quotation mark\n  \"\\u201F\": '\"', // Double high-reversed-9 quotation mark\n  \"\\u00BC\": \"1/4\", // Vulgar fraction one quarter\n  \"\\u00BD\": \"1/2\", // Vulgar fraction one half\n  \"\\u00BE\": \"3/4\", // Vulgar fraction three quarters\n};\n\nlet normalizationRegex = null;\nfunction normalize(text) {\n  if (!normalizationRegex) {\n    // Compile the regular expression for text normalization once.\n    const replace = Object.keys(CHARACTERS_TO_NORMALIZE).join(\"\");\n    normalizationRegex = new RegExp(`[${replace}]`, \"g\");\n  }\n  return text.replace(normalizationRegex, function (ch) {\n    return CHARACTERS_TO_NORMALIZE[ch];\n  });\n}\n\n/**\n * @typedef {Object} PDFFindControllerOptions\n * @property {IPDFLinkService} linkService - The navigation/linking service.\n * @property {EventBus} eventBus - The application event bus.\n */\n\n/**\n * Provides search functionality to find a given string in a PDF document.\n */\nclass PDFFindController {\n  /**\n   * @param {PDFFindControllerOptions} options\n   */\n  constructor({ linkService, eventBus }) {\n    this._linkService = linkService;\n    this._eventBus = eventBus;\n\n    this._reset();\n    eventBus._on(\"findbarclose\", this._onFindBarClose.bind(this));\n  }\n\n  get highlightMatches() {\n    return this._highlightMatches;\n  }\n\n  get pageMatches() {\n    return this._pageMatches;\n  }\n\n  get pageMatchesLength() {\n    return this._pageMatchesLength;\n  }\n\n  get selected() {\n    return this._selected;\n  }\n\n  get state() {\n    return this._state;\n  }\n\n  /**\n   * Set a reference to the PDF document in order to search it.\n   * Note that searching is not possible if this method is not called.\n   *\n   * @param {PDFDocumentProxy} pdfDocument - The PDF document to search.\n   */\n  setDocument(pdfDocument) {\n    if (this._pdfDocument) {\n      this._reset();\n    }\n    if (!pdfDocument) {\n      return;\n    }\n    this._pdfDocument = pdfDocument;\n    this._firstPageCapability.resolve();\n  }\n\n  executeCommand(cmd, state) {\n    if (!state) {\n      return;\n    }\n    const pdfDocument = this._pdfDocument;\n\n    if (this._state === null || this._shouldDirtyMatch(cmd, state)) {\n      this._dirtyMatch = true;\n    }\n    this._state = state;\n    if (cmd !== \"findhighlightallchange\") {\n      this._updateUIState(FindState.PENDING);\n    }\n\n    this._firstPageCapability.promise.then(() => {\n      // If the document was closed before searching began, or if the search\n      // operation was relevant for a previously opened document, do nothing.\n      if (\n        !this._pdfDocument ||\n        (pdfDocument && this._pdfDocument !== pdfDocument)\n      ) {\n        return;\n      }\n      this._extractText();\n\n      const findbarClosed = !this._highlightMatches;\n      const pendingTimeout = !!this._findTimeout;\n\n      if (this._findTimeout) {\n        clearTimeout(this._findTimeout);\n        this._findTimeout = null;\n      }\n      if (cmd === \"find\") {\n        // Trigger the find action with a small delay to avoid starting the\n        // search when the user is still typing (saving resources).\n        this._findTimeout = setTimeout(() => {\n          this._nextMatch();\n          this._findTimeout = null;\n        }, FIND_TIMEOUT);\n      } else if (this._dirtyMatch) {\n        // Immediately trigger searching for non-'find' operations, when the\n        // current state needs to be reset and matches re-calculated.\n        this._nextMatch();\n      } else if (cmd === \"findagain\") {\n        this._nextMatch();\n\n        // When the findbar was previously closed, and `highlightAll` is set,\n        // ensure that the matches on all active pages are highlighted again.\n        if (findbarClosed && this._state.highlightAll) {\n          this._updateAllPages();\n        }\n      } else if (cmd === \"findhighlightallchange\") {\n        // If there was a pending search operation, synchronously trigger a new\n        // search *first* to ensure that the correct matches are highlighted.\n        if (pendingTimeout) {\n          this._nextMatch();\n        } else {\n          this._highlightMatches = true;\n        }\n        this._updateAllPages(); // Update the highlighting on all active pages.\n      } else {\n        this._nextMatch();\n      }\n    });\n  }\n\n  scrollMatchIntoView({ element = null, pageIndex = -1, matchIndex = -1 }) {\n    if (!this._scrollMatches || !element) {\n      return;\n    } else if (matchIndex === -1 || matchIndex !== this._selected.matchIdx) {\n      return;\n    } else if (pageIndex === -1 || pageIndex !== this._selected.pageIdx) {\n      return;\n    }\n    this._scrollMatches = false; // Ensure that scrolling only happens once.\n\n    const spot = {\n      top: MATCH_SCROLL_OFFSET_TOP,\n      left: MATCH_SCROLL_OFFSET_LEFT,\n    };\n    scrollIntoView(element, spot, /* skipOverflowHiddenElements = */ true);\n  }\n\n  _reset() {\n    this._highlightMatches = false;\n    this._scrollMatches = false;\n    this._pdfDocument = null;\n    this._pageMatches = [];\n    this._pageMatchesLength = [];\n    this._state = null;\n    // Currently selected match.\n    this._selected = {\n      pageIdx: -1,\n      matchIdx: -1,\n    };\n    // Where the find algorithm currently is in the document.\n    this._offset = {\n      pageIdx: null,\n      matchIdx: null,\n      wrapped: false,\n    };\n    this._extractTextPromises = [];\n    this._pageContents = []; // Stores the normalized text for each page.\n    this._matchesCountTotal = 0;\n    this._pagesToSearch = null;\n    this._pendingFindMatches = Object.create(null);\n    this._resumePageIdx = null;\n    this._dirtyMatch = false;\n    clearTimeout(this._findTimeout);\n    this._findTimeout = null;\n\n    this._firstPageCapability = createPromiseCapability();\n  }\n\n  /**\n   * @type {string} The (current) normalized search query.\n   */\n  get _query() {\n    if (this._state.query !== this._rawQuery) {\n      this._rawQuery = this._state.query;\n      this._normalizedQuery = normalize(this._state.query);\n    }\n    return this._normalizedQuery;\n  }\n\n  _shouldDirtyMatch(cmd, state) {\n    // When the search query changes, regardless of the actual search command\n    // used, always re-calculate matches to avoid errors (fixes bug 1030622).\n    if (state.query !== this._state.query) {\n      return true;\n    }\n    switch (cmd) {\n      case \"findagain\":\n        const pageNumber = this._selected.pageIdx + 1;\n        const linkService = this._linkService;\n        // Only treat a 'findagain' event as a new search operation when it's\n        // *absolutely* certain that the currently selected match is no longer\n        // visible, e.g. as a result of the user scrolling in the document.\n        //\n        // NOTE: If only a simple `this._linkService.page` check was used here,\n        // there's a risk that consecutive 'findagain' operations could \"skip\"\n        // over matches at the top/bottom of pages thus making them completely\n        // inaccessible when there's multiple pages visible in the viewer.\n        if (\n          pageNumber >= 1 &&\n          pageNumber <= linkService.pagesCount &&\n          pageNumber !== linkService.page &&\n          !linkService.isPageVisible(pageNumber)\n        ) {\n          return true;\n        }\n        return false;\n      case \"findhighlightallchange\":\n        return false;\n    }\n    return true;\n  }\n\n  /**\n   * Helper for multi-term search that fills the `matchesWithLength` array\n   * and handles cases where one search term includes another search term (for\n   * example, \"tamed tame\" or \"this is\"). It looks for intersecting terms in\n   * the `matches` and keeps elements with a longer match length.\n   */\n  _prepareMatches(matchesWithLength, matches, matchesLength) {\n    function isSubTerm(currentIndex) {\n      const currentElem = matchesWithLength[currentIndex];\n      const nextElem = matchesWithLength[currentIndex + 1];\n\n      // Check for cases like \"TAMEd TAME\".\n      if (\n        currentIndex < matchesWithLength.length - 1 &&\n        currentElem.match === nextElem.match\n      ) {\n        currentElem.skipped = true;\n        return true;\n      }\n\n      // Check for cases like \"thIS IS\".\n      for (let i = currentIndex - 1; i >= 0; i--) {\n        const prevElem = matchesWithLength[i];\n        if (prevElem.skipped) {\n          continue;\n        }\n        if (prevElem.match + prevElem.matchLength < currentElem.match) {\n          break;\n        }\n        if (\n          prevElem.match + prevElem.matchLength >=\n          currentElem.match + currentElem.matchLength\n        ) {\n          currentElem.skipped = true;\n          return true;\n        }\n      }\n      return false;\n    }\n\n    // Sort the array of `{ match: <match>, matchLength: <matchLength> }`\n    // objects on increasing index first and on the length otherwise.\n    matchesWithLength.sort(function (a, b) {\n      return a.match === b.match\n        ? a.matchLength - b.matchLength\n        : a.match - b.match;\n    });\n    for (let i = 0, len = matchesWithLength.length; i < len; i++) {\n      if (isSubTerm(i)) {\n        continue;\n      }\n      matches.push(matchesWithLength[i].match);\n      matchesLength.push(matchesWithLength[i].matchLength);\n    }\n  }\n\n  /**\n   * Determine if the search query constitutes a \"whole word\", by comparing the\n   * first/last character type with the preceding/following character type.\n   */\n  _isEntireWord(content, startIdx, length) {\n    if (startIdx > 0) {\n      const first = content.charCodeAt(startIdx);\n      const limit = content.charCodeAt(startIdx - 1);\n      if (getCharacterType(first) === getCharacterType(limit)) {\n        return false;\n      }\n    }\n    const endIdx = startIdx + length - 1;\n    if (endIdx < content.length - 1) {\n      const last = content.charCodeAt(endIdx);\n      const limit = content.charCodeAt(endIdx + 1);\n      if (getCharacterType(last) === getCharacterType(limit)) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  _calculatePhraseMatch(query, pageIndex, pageContent, entireWord) {\n    const matches = [];\n    const queryLen = query.length;\n\n    let matchIdx = -queryLen;\n    while (true) {\n      matchIdx = pageContent.indexOf(query, matchIdx + queryLen);\n      if (matchIdx === -1) {\n        break;\n      }\n      if (entireWord && !this._isEntireWord(pageContent, matchIdx, queryLen)) {\n        continue;\n      }\n      matches.push(matchIdx);\n    }\n    this._pageMatches[pageIndex] = matches;\n  }\n\n  _calculateWordMatch(query, pageIndex, pageContent, entireWord) {\n    const matchesWithLength = [];\n\n    // Divide the query into pieces and search for text in each piece.\n    const queryArray = query.match(/\\S+/g);\n    for (let i = 0, len = queryArray.length; i < len; i++) {\n      const subquery = queryArray[i];\n      const subqueryLen = subquery.length;\n\n      let matchIdx = -subqueryLen;\n      while (true) {\n        matchIdx = pageContent.indexOf(subquery, matchIdx + subqueryLen);\n        if (matchIdx === -1) {\n          break;\n        }\n        if (\n          entireWord &&\n          !this._isEntireWord(pageContent, matchIdx, subqueryLen)\n        ) {\n          continue;\n        }\n        // Other searches do not, so we store the length.\n        matchesWithLength.push({\n          match: matchIdx,\n          matchLength: subqueryLen,\n          skipped: false,\n        });\n      }\n    }\n\n    // Prepare arrays for storing the matches.\n    this._pageMatchesLength[pageIndex] = [];\n    this._pageMatches[pageIndex] = [];\n\n    // Sort `matchesWithLength`, remove intersecting terms and put the result\n    // into the two arrays.\n    this._prepareMatches(\n      matchesWithLength,\n      this._pageMatches[pageIndex],\n      this._pageMatchesLength[pageIndex]\n    );\n  }\n\n  _calculateMatch(pageIndex) {\n    let pageContent = this._pageContents[pageIndex];\n    let query = this._query;\n    const { caseSensitive, entireWord, phraseSearch } = this._state;\n\n    if (query.length === 0) {\n      // Do nothing: the matches should be wiped out already.\n      return;\n    }\n\n    if (!caseSensitive) {\n      pageContent = pageContent.toLowerCase();\n      query = query.toLowerCase();\n    }\n\n    if (phraseSearch) {\n      this._calculatePhraseMatch(query, pageIndex, pageContent, entireWord);\n    } else {\n      this._calculateWordMatch(query, pageIndex, pageContent, entireWord);\n    }\n\n    // When `highlightAll` is set, ensure that the matches on previously\n    // rendered (and still active) pages are correctly highlighted.\n    if (this._state.highlightAll) {\n      this._updatePage(pageIndex);\n    }\n    if (this._resumePageIdx === pageIndex) {\n      this._resumePageIdx = null;\n      this._nextPageMatch();\n    }\n\n    // Update the match count.\n    const pageMatchesCount = this._pageMatches[pageIndex].length;\n    if (pageMatchesCount > 0) {\n      this._matchesCountTotal += pageMatchesCount;\n      this._updateUIResultsCount();\n    }\n  }\n\n  _extractText() {\n    // Perform text extraction once if this method is called multiple times.\n    if (this._extractTextPromises.length > 0) {\n      return;\n    }\n\n    let promise = Promise.resolve();\n    for (let i = 0, ii = this._linkService.pagesCount; i < ii; i++) {\n      const extractTextCapability = createPromiseCapability();\n      this._extractTextPromises[i] = extractTextCapability.promise;\n\n      promise = promise.then(() => {\n        return this._pdfDocument\n          .getPage(i + 1)\n          .then(pdfPage => {\n            return pdfPage.getTextContent({\n              normalizeWhitespace: true,\n            });\n          })\n          .then(\n            textContent => {\n              const textItems = textContent.items;\n              const strBuf = [];\n\n              for (let j = 0, jj = textItems.length; j < jj; j++) {\n                strBuf.push(textItems[j].str);\n              }\n\n              // Store the normalized page content (text items) as one string.\n              this._pageContents[i] = normalize(strBuf.join(\"\"));\n              extractTextCapability.resolve(i);\n            },\n            reason => {\n              console.error(\n                `Unable to get text content for page ${i + 1}`,\n                reason\n              );\n              // Page error -- assuming no text content.\n              this._pageContents[i] = \"\";\n              extractTextCapability.resolve(i);\n            }\n          );\n      });\n    }\n  }\n\n  _updatePage(index) {\n    if (this._scrollMatches && this._selected.pageIdx === index) {\n      // If the page is selected, scroll the page into view, which triggers\n      // rendering the page, which adds the text layer. Once the text layer\n      // is built, it will attempt to scroll the selected match into view.\n      this._linkService.page = index + 1;\n    }\n\n    this._eventBus.dispatch(\"updatetextlayermatches\", {\n      source: this,\n      pageIndex: index,\n    });\n  }\n\n  _updateAllPages() {\n    this._eventBus.dispatch(\"updatetextlayermatches\", {\n      source: this,\n      pageIndex: -1,\n    });\n  }\n\n  _nextMatch() {\n    const previous = this._state.findPrevious;\n    const currentPageIndex = this._linkService.page - 1;\n    const numPages = this._linkService.pagesCount;\n\n    this._highlightMatches = true;\n\n    if (this._dirtyMatch) {\n      // Need to recalculate the matches, reset everything.\n      this._dirtyMatch = false;\n      this._selected.pageIdx = this._selected.matchIdx = -1;\n      this._offset.pageIdx = currentPageIndex;\n      this._offset.matchIdx = null;\n      this._offset.wrapped = false;\n      this._resumePageIdx = null;\n      this._pageMatches.length = 0;\n      this._pageMatchesLength.length = 0;\n      this._matchesCountTotal = 0;\n\n      this._updateAllPages(); // Wipe out any previously highlighted matches.\n\n      for (let i = 0; i < numPages; i++) {\n        // Start finding the matches as soon as the text is extracted.\n        if (this._pendingFindMatches[i] === true) {\n          continue;\n        }\n        this._pendingFindMatches[i] = true;\n        this._extractTextPromises[i].then(pageIdx => {\n          delete this._pendingFindMatches[pageIdx];\n          this._calculateMatch(pageIdx);\n        });\n      }\n    }\n\n    // If there's no query there's no point in searching.\n    if (this._query === \"\") {\n      this._updateUIState(FindState.FOUND);\n      return;\n    }\n    // If we're waiting on a page, we return since we can't do anything else.\n    if (this._resumePageIdx) {\n      return;\n    }\n\n    const offset = this._offset;\n    // Keep track of how many pages we should maximally iterate through.\n    this._pagesToSearch = numPages;\n    // If there's already a `matchIdx` that means we are iterating through a\n    // page's matches.\n    if (offset.matchIdx !== null) {\n      const numPageMatches = this._pageMatches[offset.pageIdx].length;\n      if (\n        (!previous && offset.matchIdx + 1 < numPageMatches) ||\n        (previous && offset.matchIdx > 0)\n      ) {\n        // The simple case; we just have advance the matchIdx to select\n        // the next match on the page.\n        offset.matchIdx = previous ? offset.matchIdx - 1 : offset.matchIdx + 1;\n        this._updateMatch(/* found = */ true);\n        return;\n      }\n      // We went beyond the current page's matches, so we advance to\n      // the next page.\n      this._advanceOffsetPage(previous);\n    }\n    // Start searching through the page.\n    this._nextPageMatch();\n  }\n\n  _matchesReady(matches) {\n    const offset = this._offset;\n    const numMatches = matches.length;\n    const previous = this._state.findPrevious;\n\n    if (numMatches) {\n      // There were matches for the page, so initialize `matchIdx`.\n      offset.matchIdx = previous ? numMatches - 1 : 0;\n      this._updateMatch(/* found = */ true);\n      return true;\n    }\n    // No matches, so attempt to search the next page.\n    this._advanceOffsetPage(previous);\n    if (offset.wrapped) {\n      offset.matchIdx = null;\n      if (this._pagesToSearch < 0) {\n        // No point in wrapping again, there were no matches.\n        this._updateMatch(/* found = */ false);\n        // While matches were not found, searching for a page\n        // with matches should nevertheless halt.\n        return true;\n      }\n    }\n    // Matches were not found (and searching is not done).\n    return false;\n  }\n\n  _nextPageMatch() {\n    if (this._resumePageIdx !== null) {\n      console.error(\"There can only be one pending page.\");\n    }\n\n    let matches = null;\n    do {\n      const pageIdx = this._offset.pageIdx;\n      matches = this._pageMatches[pageIdx];\n      if (!matches) {\n        // The matches don't exist yet for processing by `_matchesReady`,\n        // so set a resume point for when they do exist.\n        this._resumePageIdx = pageIdx;\n        break;\n      }\n    } while (!this._matchesReady(matches));\n  }\n\n  _advanceOffsetPage(previous) {\n    const offset = this._offset;\n    const numPages = this._linkService.pagesCount;\n    offset.pageIdx = previous ? offset.pageIdx - 1 : offset.pageIdx + 1;\n    offset.matchIdx = null;\n\n    this._pagesToSearch--;\n\n    if (offset.pageIdx >= numPages || offset.pageIdx < 0) {\n      offset.pageIdx = previous ? numPages - 1 : 0;\n      offset.wrapped = true;\n    }\n  }\n\n  _updateMatch(found = false) {\n    let state = FindState.NOT_FOUND;\n    const wrapped = this._offset.wrapped;\n    this._offset.wrapped = false;\n\n    if (found) {\n      const previousPage = this._selected.pageIdx;\n      this._selected.pageIdx = this._offset.pageIdx;\n      this._selected.matchIdx = this._offset.matchIdx;\n      state = wrapped ? FindState.WRAPPED : FindState.FOUND;\n\n      // Update the currently selected page to wipe out any selected matches.\n      if (previousPage !== -1 && previousPage !== this._selected.pageIdx) {\n        this._updatePage(previousPage);\n      }\n    }\n\n    this._updateUIState(state, this._state.findPrevious);\n    if (this._selected.pageIdx !== -1) {\n      // Ensure that the match will be scrolled into view.\n      this._scrollMatches = true;\n\n      this._updatePage(this._selected.pageIdx);\n    }\n  }\n\n  _onFindBarClose(evt) {\n    const pdfDocument = this._pdfDocument;\n    // Since searching is asynchronous, ensure that the removal of highlighted\n    // matches (from the UI) is async too such that the 'updatetextlayermatches'\n    // events will always be dispatched in the expected order.\n    this._firstPageCapability.promise.then(() => {\n      // Only update the UI if the document is open, and is the current one.\n      if (\n        !this._pdfDocument ||\n        (pdfDocument && this._pdfDocument !== pdfDocument)\n      ) {\n        return;\n      }\n      // Ensure that a pending, not yet started, search operation is aborted.\n      if (this._findTimeout) {\n        clearTimeout(this._findTimeout);\n        this._findTimeout = null;\n      }\n      // Abort any long running searches, to avoid a match being scrolled into\n      // view *after* the findbar has been closed. In this case `this._offset`\n      // will most likely differ from `this._selected`, hence we also ensure\n      // that any new search operation will always start with a clean slate.\n      if (this._resumePageIdx) {\n        this._resumePageIdx = null;\n        this._dirtyMatch = true;\n      }\n      // Avoid the UI being in a pending state when the findbar is re-opened.\n      this._updateUIState(FindState.FOUND);\n\n      this._highlightMatches = false;\n      this._updateAllPages(); // Wipe out any previously highlighted matches.\n    });\n  }\n\n  _requestMatchesCount() {\n    const { pageIdx, matchIdx } = this._selected;\n    let current = 0,\n      total = this._matchesCountTotal;\n    if (matchIdx !== -1) {\n      for (let i = 0; i < pageIdx; i++) {\n        current += (this._pageMatches[i] && this._pageMatches[i].length) || 0;\n      }\n      current += matchIdx + 1;\n    }\n    // When searching starts, this method may be called before the `pageMatches`\n    // have been counted (in `_calculateMatch`). Ensure that the UI won't show\n    // temporarily broken state when the active find result doesn't make sense.\n    if (current < 1 || current > total) {\n      current = total = 0;\n    }\n    return { current, total };\n  }\n\n  _updateUIResultsCount() {\n    this._eventBus.dispatch(\"updatefindmatchescount\", {\n      source: this,\n      matchesCount: this._requestMatchesCount(),\n    });\n  }\n\n  _updateUIState(state, previous) {\n    this._eventBus.dispatch(\"updatefindcontrolstate\", {\n      source: this,\n      state,\n      previous,\n      matchesCount: this._requestMatchesCount(),\n    });\n  }\n}\n\nexport { FindState, PDFFindController };\n","/* Copyright 2018 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst CharacterType = {\n  SPACE: 0,\n  ALPHA_LETTER: 1,\n  PUNCT: 2,\n  HAN_LETTER: 3,\n  KATAKANA_LETTER: 4,\n  HIRAGANA_LETTER: 5,\n  HALFWIDTH_KATAKANA_LETTER: 6,\n  THAI_LETTER: 7,\n};\n\nfunction isAlphabeticalScript(charCode) {\n  return charCode < 0x2e80;\n}\n\nfunction isAscii(charCode) {\n  return (charCode & 0xff80) === 0;\n}\n\nfunction isAsciiAlpha(charCode) {\n  return (\n    (charCode >= /* a = */ 0x61 && charCode <= /* z = */ 0x7a) ||\n    (charCode >= /* A = */ 0x41 && charCode <= /* Z = */ 0x5a)\n  );\n}\n\nfunction isAsciiDigit(charCode) {\n  return charCode >= /* 0 = */ 0x30 && charCode <= /* 9 = */ 0x39;\n}\n\nfunction isAsciiSpace(charCode) {\n  return (\n    charCode === /* SPACE = */ 0x20 ||\n    charCode === /* TAB = */ 0x09 ||\n    charCode === /* CR = */ 0x0d ||\n    charCode === /* LF = */ 0x0a\n  );\n}\n\nfunction isHan(charCode) {\n  return (\n    (charCode >= 0x3400 && charCode <= 0x9fff) ||\n    (charCode >= 0xf900 && charCode <= 0xfaff)\n  );\n}\n\nfunction isKatakana(charCode) {\n  return charCode >= 0x30a0 && charCode <= 0x30ff;\n}\n\nfunction isHiragana(charCode) {\n  return charCode >= 0x3040 && charCode <= 0x309f;\n}\n\nfunction isHalfwidthKatakana(charCode) {\n  return charCode >= 0xff60 && charCode <= 0xff9f;\n}\n\nfunction isThai(charCode) {\n  return (charCode & 0xff80) === 0x0e00;\n}\n\n/**\n * This function is based on the word-break detection implemented in:\n * https://hg.mozilla.org/mozilla-central/file/tip/intl/lwbrk/WordBreaker.cpp\n */\nfunction getCharacterType(charCode) {\n  if (isAlphabeticalScript(charCode)) {\n    if (isAscii(charCode)) {\n      if (isAsciiSpace(charCode)) {\n        return CharacterType.SPACE;\n      } else if (\n        isAsciiAlpha(charCode) ||\n        isAsciiDigit(charCode) ||\n        charCode === /* UNDERSCORE = */ 0x5f\n      ) {\n        return CharacterType.ALPHA_LETTER;\n      }\n      return CharacterType.PUNCT;\n    } else if (isThai(charCode)) {\n      return CharacterType.THAI_LETTER;\n    } else if (charCode === /* NBSP = */ 0xa0) {\n      return CharacterType.SPACE;\n    }\n    return CharacterType.ALPHA_LETTER;\n  }\n\n  if (isHan(charCode)) {\n    return CharacterType.HAN_LETTER;\n  } else if (isKatakana(charCode)) {\n    return CharacterType.KATAKANA_LETTER;\n  } else if (isHiragana(charCode)) {\n    return CharacterType.HIRAGANA_LETTER;\n  } else if (isHalfwidthKatakana(charCode)) {\n    return CharacterType.HALFWIDTH_KATAKANA_LETTER;\n  }\n  return CharacterType.ALPHA_LETTER;\n}\n\nexport { CharacterType, getCharacterType };\n","/* Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  isValidRotation,\n  parseQueryString,\n  waitOnEventOrTimeout,\n} from \"./ui_utils.js\";\n\n// Heuristic value used when force-resetting `this._blockHashChange`.\nconst HASH_CHANGE_TIMEOUT = 1000; // milliseconds\n// Heuristic value used when adding the current position to the browser history.\nconst POSITION_UPDATED_THRESHOLD = 50;\n// Heuristic value used when adding a temporary position to the browser history.\nconst UPDATE_VIEWAREA_TIMEOUT = 1000; // milliseconds\n\n/**\n * @typedef {Object} PDFHistoryOptions\n * @property {IPDFLinkService} linkService - The navigation/linking service.\n * @property {EventBus} eventBus - The application event bus.\n */\n\n/**\n * @typedef {Object} InitializeParameters\n * @property {string} fingerprint - The PDF document's unique fingerprint.\n * @property {boolean} [resetHistory] - Reset the browsing history.\n * @property {boolean} [updateUrl] - Attempt to update the document URL, with\n *   the current hash, when pushing/replacing browser history entries.\n */\n\n/**\n * @typedef {Object} PushParameters\n * @property {string} [namedDest] - The named destination. If absent, a\n *   stringified version of `explicitDest` is used.\n * @property {Array} explicitDest - The explicit destination array.\n * @property {number} pageNumber - The page to which the destination points.\n */\n\nfunction getCurrentHash() {\n  return document.location.hash;\n}\n\nclass PDFHistory {\n  /**\n   * @param {PDFHistoryOptions} options\n   */\n  constructor({ linkService, eventBus }) {\n    this.linkService = linkService;\n    this.eventBus = eventBus;\n\n    this._initialized = false;\n    this._fingerprint = \"\";\n    this.reset();\n\n    this._boundEvents = null;\n    this._isViewerInPresentationMode = false;\n    // Ensure that we don't miss either a 'presentationmodechanged' or a\n    // 'pagesinit' event, by registering the listeners immediately.\n    this.eventBus._on(\"presentationmodechanged\", evt => {\n      this._isViewerInPresentationMode = evt.active || evt.switchInProgress;\n    });\n    this.eventBus._on(\"pagesinit\", () => {\n      this._isPagesLoaded = false;\n\n      const onPagesLoaded = evt => {\n        this.eventBus._off(\"pagesloaded\", onPagesLoaded);\n        this._isPagesLoaded = !!evt.pagesCount;\n      };\n      this.eventBus._on(\"pagesloaded\", onPagesLoaded);\n    });\n  }\n\n  /**\n   * Initialize the history for the PDF document, using either the current\n   * browser history entry or the document hash, whichever is present.\n   * @param {InitializeParameters} params\n   */\n  initialize({ fingerprint, resetHistory = false, updateUrl = false }) {\n    if (!fingerprint || typeof fingerprint !== \"string\") {\n      console.error(\n        'PDFHistory.initialize: The \"fingerprint\" must be a non-empty string.'\n      );\n      return;\n    }\n    // Ensure that any old state is always reset upon initialization.\n    if (this._initialized) {\n      this.reset();\n    }\n    const reInitialized =\n      this._fingerprint !== \"\" && this._fingerprint !== fingerprint;\n    this._fingerprint = fingerprint;\n    this._updateUrl = updateUrl === true;\n\n    this._initialized = true;\n    this._bindEvents();\n    const state = window.history.state;\n\n    this._popStateInProgress = false;\n    this._blockHashChange = 0;\n    this._currentHash = getCurrentHash();\n    this._numPositionUpdates = 0;\n\n    this._uid = this._maxUid = 0;\n    this._destination = null;\n    this._position = null;\n\n    if (!this._isValidState(state, /* checkReload = */ true) || resetHistory) {\n      const { hash, page, rotation } = this._parseCurrentHash(\n        /* checkNameddest = */ true\n      );\n\n      if (!hash || reInitialized || resetHistory) {\n        // Ensure that the browser history is reset on PDF document load.\n        this._pushOrReplaceState(null, /* forceReplace = */ true);\n        return;\n      }\n      // Ensure that the browser history is initialized correctly when\n      // the document hash is present on PDF document load.\n      this._pushOrReplaceState(\n        { hash, page, rotation },\n        /* forceReplace = */ true\n      );\n      return;\n    }\n\n    // The browser history contains a valid entry, ensure that the history is\n    // initialized correctly on PDF document load.\n    const destination = state.destination;\n    this._updateInternalState(\n      destination,\n      state.uid,\n      /* removeTemporary = */ true\n    );\n    if (this._uid > this._maxUid) {\n      this._maxUid = this._uid;\n    }\n\n    if (destination.rotation !== undefined) {\n      this._initialRotation = destination.rotation;\n    }\n    if (destination.dest) {\n      this._initialBookmark = JSON.stringify(destination.dest);\n\n      // If the history is updated, e.g. through the user changing the hash,\n      // before the initial destination has become visible, then we do *not*\n      // want to potentially add `this._position` to the browser history.\n      this._destination.page = null;\n    } else if (destination.hash) {\n      this._initialBookmark = destination.hash;\n    } else if (destination.page) {\n      // Fallback case; shouldn't be necessary, but better safe than sorry.\n      this._initialBookmark = `page=${destination.page}`;\n    }\n  }\n\n  /**\n   * Reset the current `PDFHistory` instance, and consequently prevent any\n   * further updates and/or navigation of the browser history.\n   */\n  reset() {\n    if (this._initialized) {\n      this._pageHide(); // Simulate a 'pagehide' event when resetting.\n\n      this._initialized = false;\n      this._unbindEvents();\n    }\n    if (this._updateViewareaTimeout) {\n      clearTimeout(this._updateViewareaTimeout);\n      this._updateViewareaTimeout = null;\n    }\n    this._initialBookmark = null;\n    this._initialRotation = null;\n  }\n\n  /**\n   * Push an internal destination to the browser history.\n   * @param {PushParameters}\n   */\n  push({ namedDest = null, explicitDest, pageNumber }) {\n    if (!this._initialized) {\n      return;\n    }\n    if (namedDest && typeof namedDest !== \"string\") {\n      console.error(\n        \"PDFHistory.push: \" +\n          `\"${namedDest}\" is not a valid namedDest parameter.`\n      );\n      return;\n    } else if (!Array.isArray(explicitDest)) {\n      console.error(\n        \"PDFHistory.push: \" +\n          `\"${explicitDest}\" is not a valid explicitDest parameter.`\n      );\n      return;\n    } else if (\n      !(\n        Number.isInteger(pageNumber) &&\n        pageNumber > 0 &&\n        pageNumber <= this.linkService.pagesCount\n      )\n    ) {\n      // Allow an unset `pageNumber` if and only if the history is still empty;\n      // please refer to the `this._destination.page = null;` comment above.\n      if (pageNumber !== null || this._destination) {\n        console.error(\n          \"PDFHistory.push: \" +\n            `\"${pageNumber}\" is not a valid pageNumber parameter.`\n        );\n        return;\n      }\n    }\n\n    const hash = namedDest || JSON.stringify(explicitDest);\n    if (!hash) {\n      // The hash *should* never be undefined, but if that were to occur,\n      // avoid any possible issues by not updating the browser history.\n      return;\n    }\n\n    let forceReplace = false;\n    if (\n      this._destination &&\n      (isDestHashesEqual(this._destination.hash, hash) ||\n        isDestArraysEqual(this._destination.dest, explicitDest))\n    ) {\n      // When the new destination is identical to `this._destination`, and\n      // its `page` is undefined, replace the current browser history entry.\n      // NOTE: This can only occur if `this._destination` was set either:\n      //  - through the document hash being specified on load.\n      //  - through the user changing the hash of the document.\n      if (this._destination.page) {\n        return;\n      }\n      forceReplace = true;\n    }\n    if (this._popStateInProgress && !forceReplace) {\n      return;\n    }\n\n    this._pushOrReplaceState(\n      {\n        dest: explicitDest,\n        hash,\n        page: pageNumber,\n        rotation: this.linkService.rotation,\n      },\n      forceReplace\n    );\n\n    if (!this._popStateInProgress) {\n      // Prevent the browser history from updating while the new destination is\n      // being scrolled into view, to avoid potentially inconsistent state.\n      this._popStateInProgress = true;\n      // We defer the resetting of `this._popStateInProgress`, to account for\n      // e.g. zooming occuring when the new destination is being navigated to.\n      Promise.resolve().then(() => {\n        this._popStateInProgress = false;\n      });\n    }\n  }\n\n  /**\n   * Push the current position to the browser history.\n   */\n  pushCurrentPosition() {\n    if (!this._initialized || this._popStateInProgress) {\n      return;\n    }\n    this._tryPushCurrentPosition();\n  }\n\n  /**\n   * Go back one step in the browser history.\n   * NOTE: Avoids navigating away from the document, useful for \"named actions\".\n   */\n  back() {\n    if (!this._initialized || this._popStateInProgress) {\n      return;\n    }\n    const state = window.history.state;\n    if (this._isValidState(state) && state.uid > 0) {\n      window.history.back();\n    }\n  }\n\n  /**\n   * Go forward one step in the browser history.\n   * NOTE: Avoids navigating away from the document, useful for \"named actions\".\n   */\n  forward() {\n    if (!this._initialized || this._popStateInProgress) {\n      return;\n    }\n    const state = window.history.state;\n    if (this._isValidState(state) && state.uid < this._maxUid) {\n      window.history.forward();\n    }\n  }\n\n  /**\n   * @type {boolean} Indicating if the user is currently moving through the\n   *   browser history, useful e.g. for skipping the next 'hashchange' event.\n   */\n  get popStateInProgress() {\n    return (\n      this._initialized &&\n      (this._popStateInProgress || this._blockHashChange > 0)\n    );\n  }\n\n  get initialBookmark() {\n    return this._initialized ? this._initialBookmark : null;\n  }\n\n  get initialRotation() {\n    return this._initialized ? this._initialRotation : null;\n  }\n\n  /**\n   * @private\n   */\n  _pushOrReplaceState(destination, forceReplace = false) {\n    const shouldReplace = forceReplace || !this._destination;\n    const newState = {\n      fingerprint: this._fingerprint,\n      uid: shouldReplace ? this._uid : this._uid + 1,\n      destination,\n    };\n\n    if (\n      typeof PDFJSDev !== \"undefined\" &&\n      PDFJSDev.test(\"CHROME\") &&\n      window.history.state &&\n      window.history.state.chromecomState\n    ) {\n      // history.state.chromecomState is managed by chromecom.js.\n      newState.chromecomState = window.history.state.chromecomState;\n    }\n    this._updateInternalState(destination, newState.uid);\n\n    let newUrl;\n    if (this._updateUrl && destination && destination.hash) {\n      const baseUrl = document.location.href.split(\"#\")[0];\n      // Prevent errors in Firefox.\n      if (!baseUrl.startsWith(\"file://\")) {\n        newUrl = `${baseUrl}#${destination.hash}`;\n      }\n    }\n    if (shouldReplace) {\n      window.history.replaceState(newState, \"\", newUrl);\n    } else {\n      this._maxUid = this._uid;\n      window.history.pushState(newState, \"\", newUrl);\n    }\n\n    if (\n      typeof PDFJSDev !== \"undefined\" &&\n      PDFJSDev.test(\"CHROME\") &&\n      top === window\n    ) {\n      // eslint-disable-next-line no-undef\n      chrome.runtime.sendMessage(\"showPageAction\");\n    }\n  }\n\n  /**\n   * @private\n   */\n  _tryPushCurrentPosition(temporary = false) {\n    if (!this._position) {\n      return;\n    }\n    let position = this._position;\n    if (temporary) {\n      position = Object.assign(Object.create(null), this._position);\n      position.temporary = true;\n    }\n\n    if (!this._destination) {\n      this._pushOrReplaceState(position);\n      return;\n    }\n    if (this._destination.temporary) {\n      // Always replace a previous *temporary* position.\n      this._pushOrReplaceState(position, /* forceReplace = */ true);\n      return;\n    }\n    if (this._destination.hash === position.hash) {\n      return; // The current document position has not changed.\n    }\n    if (\n      !this._destination.page &&\n      (POSITION_UPDATED_THRESHOLD <= 0 ||\n        this._numPositionUpdates <= POSITION_UPDATED_THRESHOLD)\n    ) {\n      // `this._destination` was set through the user changing the hash of\n      // the document. Do not add `this._position` to the browser history,\n      // to avoid \"flooding\" it with lots of (nearly) identical entries,\n      // since we cannot ensure that the document position has changed.\n      return;\n    }\n\n    let forceReplace = false;\n    if (\n      this._destination.page >= position.first &&\n      this._destination.page <= position.page\n    ) {\n      // When the `page` of `this._destination` is still visible, do not\n      // update the browsing history when `this._destination` either:\n      //  - contains an internal destination, since in this case we\n      //    cannot ensure that the document position has actually changed.\n      //  - was set through the user changing the hash of the document.\n      if (this._destination.dest || !this._destination.first) {\n        return;\n      }\n      // To avoid \"flooding\" the browser history, replace the current entry.\n      forceReplace = true;\n    }\n    this._pushOrReplaceState(position, forceReplace);\n  }\n\n  /**\n   * @private\n   */\n  _isValidState(state, checkReload = false) {\n    if (!state) {\n      return false;\n    }\n    if (state.fingerprint !== this._fingerprint) {\n      if (checkReload) {\n        // Potentially accept the history entry, even if the fingerprints don't\n        // match, when the viewer was reloaded (see issue 6847).\n        if (\n          typeof state.fingerprint !== \"string\" ||\n          state.fingerprint.length !== this._fingerprint.length\n        ) {\n          return false;\n        }\n        const [perfEntry] = performance.getEntriesByType(\"navigation\");\n        if (!perfEntry || perfEntry.type !== \"reload\") {\n          return false;\n        }\n      } else {\n        // This should only occur in viewers with support for opening more than\n        // one PDF document, e.g. the GENERIC viewer.\n        return false;\n      }\n    }\n    if (!Number.isInteger(state.uid) || state.uid < 0) {\n      return false;\n    }\n    if (state.destination === null || typeof state.destination !== \"object\") {\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * @private\n   */\n  _updateInternalState(destination, uid, removeTemporary = false) {\n    if (this._updateViewareaTimeout) {\n      // When updating `this._destination`, make sure that we always wait for\n      // the next 'updateviewarea' event before (potentially) attempting to\n      // push the current position to the browser history.\n      clearTimeout(this._updateViewareaTimeout);\n      this._updateViewareaTimeout = null;\n    }\n    if (removeTemporary && destination && destination.temporary) {\n      // When the `destination` comes from the browser history,\n      // we no longer treat it as a *temporary* position.\n      delete destination.temporary;\n    }\n    this._destination = destination;\n    this._uid = uid;\n    // This should always be reset when `this._destination` is updated.\n    this._numPositionUpdates = 0;\n  }\n\n  /**\n   * @private\n   */\n  _parseCurrentHash(checkNameddest = false) {\n    const hash = unescape(getCurrentHash()).substring(1);\n    const params = parseQueryString(hash);\n\n    const nameddest = params.nameddest || \"\";\n    let page = params.page | 0;\n\n    if (\n      !(\n        Number.isInteger(page) &&\n        page > 0 &&\n        page <= this.linkService.pagesCount\n      ) ||\n      (checkNameddest && nameddest.length > 0)\n    ) {\n      page = null;\n    }\n    return { hash, page, rotation: this.linkService.rotation };\n  }\n\n  /**\n   * @private\n   */\n  _updateViewarea({ location }) {\n    if (this._updateViewareaTimeout) {\n      clearTimeout(this._updateViewareaTimeout);\n      this._updateViewareaTimeout = null;\n    }\n\n    this._position = {\n      hash: this._isViewerInPresentationMode\n        ? `page=${location.pageNumber}`\n        : location.pdfOpenParams.substring(1),\n      page: this.linkService.page,\n      first: location.pageNumber,\n      rotation: location.rotation,\n    };\n\n    if (this._popStateInProgress) {\n      return;\n    }\n\n    if (\n      POSITION_UPDATED_THRESHOLD > 0 &&\n      this._isPagesLoaded &&\n      this._destination &&\n      !this._destination.page\n    ) {\n      // If the current destination was set through the user changing the hash\n      // of the document, we will usually not try to push the current position\n      // to the browser history; see `this._tryPushCurrentPosition()`.\n      //\n      // To prevent `this._tryPushCurrentPosition()` from effectively being\n      // reduced to a no-op in this case, we will assume that the position\n      // *did* in fact change if the 'updateviewarea' event was dispatched\n      // more than `POSITION_UPDATED_THRESHOLD` times.\n      this._numPositionUpdates++;\n    }\n\n    if (UPDATE_VIEWAREA_TIMEOUT > 0) {\n      // When closing the browser, a 'pagehide' event will be dispatched which\n      // *should* allow us to push the current position to the browser history.\n      // In practice, it seems that the event is arriving too late in order for\n      // the session history to be successfully updated.\n      // (For additional details, please refer to the discussion in\n      //  https://bugzilla.mozilla.org/show_bug.cgi?id=1153393.)\n      //\n      // To workaround this we attempt to *temporarily* add the current position\n      // to the browser history only when the viewer is *idle*,\n      // i.e. when scrolling and/or zooming does not occur.\n      //\n      // PLEASE NOTE: It's absolutely imperative that the browser history is\n      // *not* updated too often, since that would render the viewer more or\n      // less unusable. Hence the use of a timeout to delay the update until\n      // the viewer has been idle for `UPDATE_VIEWAREA_TIMEOUT` milliseconds.\n      this._updateViewareaTimeout = setTimeout(() => {\n        if (!this._popStateInProgress) {\n          this._tryPushCurrentPosition(/* temporary = */ true);\n        }\n        this._updateViewareaTimeout = null;\n      }, UPDATE_VIEWAREA_TIMEOUT);\n    }\n  }\n\n  /**\n   * @private\n   */\n  _popState({ state }) {\n    const newHash = getCurrentHash(),\n      hashChanged = this._currentHash !== newHash;\n    this._currentHash = newHash;\n\n    if (\n      (typeof PDFJSDev !== \"undefined\" &&\n        PDFJSDev.test(\"CHROME\") &&\n        state &&\n        state.chromecomState &&\n        !this._isValidState(state)) ||\n      !state\n    ) {\n      // This case corresponds to the user changing the hash of the document.\n      this._uid++;\n\n      const { hash, page, rotation } = this._parseCurrentHash();\n      this._pushOrReplaceState(\n        { hash, page, rotation },\n        /* forceReplace = */ true\n      );\n      return;\n    }\n    if (!this._isValidState(state)) {\n      // This should only occur in viewers with support for opening more than\n      // one PDF document, e.g. the GENERIC viewer.\n      return;\n    }\n\n    // Prevent the browser history from updating until the new destination,\n    // as stored in the browser history, has been scrolled into view.\n    this._popStateInProgress = true;\n\n    if (hashChanged) {\n      // When the hash changed, implying that the 'popstate' event will be\n      // followed by a 'hashchange' event, then we do *not* want to update the\n      // browser history when handling the 'hashchange' event (in web/app.js)\n      // since that would *overwrite* the new destination navigated to below.\n      //\n      // To avoid accidentally disabling all future user-initiated hash changes,\n      // if there's e.g. another 'hashchange' listener that stops the event\n      // propagation, we make sure to always force-reset `this._blockHashChange`\n      // after `HASH_CHANGE_TIMEOUT` milliseconds have passed.\n      this._blockHashChange++;\n      waitOnEventOrTimeout({\n        target: window,\n        name: \"hashchange\",\n        delay: HASH_CHANGE_TIMEOUT,\n      }).then(() => {\n        this._blockHashChange--;\n      });\n    }\n\n    // Navigate to the new destination.\n    const destination = state.destination;\n    this._updateInternalState(\n      destination,\n      state.uid,\n      /* removeTemporary = */ true\n    );\n    if (this._uid > this._maxUid) {\n      this._maxUid = this._uid;\n    }\n\n    if (isValidRotation(destination.rotation)) {\n      this.linkService.rotation = destination.rotation;\n    }\n    if (destination.dest) {\n      this.linkService.navigateTo(destination.dest);\n    } else if (destination.hash) {\n      this.linkService.setHash(destination.hash);\n    } else if (destination.page) {\n      // Fallback case; shouldn't be necessary, but better safe than sorry.\n      this.linkService.page = destination.page;\n    }\n\n    // Since `PDFLinkService.navigateTo` is asynchronous, we thus defer the\n    // resetting of `this._popStateInProgress` slightly.\n    Promise.resolve().then(() => {\n      this._popStateInProgress = false;\n    });\n  }\n\n  /**\n   * @private\n   */\n  _pageHide() {\n    // Attempt to push the `this._position` into the browser history when\n    // navigating away from the document. This is *only* done if the history\n    // is empty/temporary, since otherwise an existing browser history entry\n    // will end up being overwritten (given that new entries cannot be pushed\n    // into the browser history when the 'unload' event has already fired).\n    if (!this._destination || this._destination.temporary) {\n      this._tryPushCurrentPosition();\n    }\n  }\n\n  /**\n   * @private\n   */\n  _bindEvents() {\n    if (this._boundEvents) {\n      return; // The event listeners were already added.\n    }\n    this._boundEvents = {\n      updateViewarea: this._updateViewarea.bind(this),\n      popState: this._popState.bind(this),\n      pageHide: this._pageHide.bind(this),\n    };\n\n    this.eventBus._on(\"updateviewarea\", this._boundEvents.updateViewarea);\n    window.addEventListener(\"popstate\", this._boundEvents.popState);\n    window.addEventListener(\"pagehide\", this._boundEvents.pageHide);\n  }\n\n  /**\n   * @private\n   */\n  _unbindEvents() {\n    if (!this._boundEvents) {\n      return; // The event listeners were already removed.\n    }\n    this.eventBus._off(\"updateviewarea\", this._boundEvents.updateViewarea);\n    window.removeEventListener(\"popstate\", this._boundEvents.popState);\n    window.removeEventListener(\"pagehide\", this._boundEvents.pageHide);\n\n    this._boundEvents = null;\n  }\n}\n\nfunction isDestHashesEqual(destHash, pushHash) {\n  if (typeof destHash !== \"string\" || typeof pushHash !== \"string\") {\n    return false;\n  }\n  if (destHash === pushHash) {\n    return true;\n  }\n  const { nameddest } = parseQueryString(destHash);\n  if (nameddest === pushHash) {\n    return true;\n  }\n  return false;\n}\n\nfunction isDestArraysEqual(firstDest, secondDest) {\n  function isEntryEqual(first, second) {\n    if (typeof first !== typeof second) {\n      return false;\n    }\n    if (Array.isArray(first) || Array.isArray(second)) {\n      return false;\n    }\n    if (first !== null && typeof first === \"object\" && second !== null) {\n      if (Object.keys(first).length !== Object.keys(second).length) {\n        return false;\n      }\n      for (const key in first) {\n        if (!isEntryEqual(first[key], second[key])) {\n          return false;\n        }\n      }\n      return true;\n    }\n    return first === second || (Number.isNaN(first) && Number.isNaN(second));\n  }\n\n  if (!(Array.isArray(firstDest) && Array.isArray(secondDest))) {\n    return false;\n  }\n  if (firstDest.length !== secondDest.length) {\n    return false;\n  }\n  for (let i = 0, ii = firstDest.length; i < ii; i++) {\n    if (!isEntryEqual(firstDest[i], secondDest[i])) {\n      return false;\n    }\n  }\n  return true;\n}\n\nexport { PDFHistory, isDestHashesEqual, isDestArraysEqual };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  approximateFraction,\n  CSS_UNITS,\n  DEFAULT_SCALE,\n  getOutputScale,\n  NullL10n,\n  RendererType,\n  roundToDivide,\n  TextLayerMode,\n} from \"./ui_utils.js\";\nimport {\n  createPromiseCapability,\n  RenderingCancelledException,\n  SVGGraphics,\n} from \"pdfjs-lib\";\nimport { RenderingStates } from \"./pdf_rendering_queue.js\";\nimport { viewerCompatibilityParams } from \"./viewer_compatibility.js\";\n\n/**\n * @typedef {Object} PDFPageViewOptions\n * @property {HTMLDivElement} container - The viewer element.\n * @property {EventBus} eventBus - The application event bus.\n * @property {number} id - The page unique ID (normally its number).\n * @property {number} scale - The page scale display.\n * @property {PageViewport} defaultViewport - The page viewport.\n * @property {PDFRenderingQueue} renderingQueue - The rendering queue object.\n * @property {IPDFTextLayerFactory} textLayerFactory\n * @property {number} [textLayerMode] - Controls if the text layer used for\n *   selection and searching is created, and if the improved text selection\n *   behaviour is enabled. The constants from {TextLayerMode} should be used.\n *   The default value is `TextLayerMode.ENABLE`.\n * @property {IPDFAnnotationLayerFactory} annotationLayerFactory\n * @property {string} [imageResourcesPath] - Path for image resources, mainly\n *   for annotation icons. Include trailing slash.\n * @property {boolean} renderInteractiveForms - Turns on rendering of\n *   interactive form elements. The default is `false`.\n * @property {string} renderer - 'canvas' or 'svg'. The default is 'canvas'.\n * @property {boolean} [enableWebGL] - Enables WebGL accelerated rendering for\n *   some operations. The default value is `false`.\n * @property {boolean} [useOnlyCssZoom] - Enables CSS only zooming. The default\n *   value is `false`.\n * @property {number} [maxCanvasPixels] - The maximum supported canvas size in\n *   total pixels, i.e. width * height. Use -1 for no limit. The default value\n *   is 4096 * 4096 (16 mega-pixels).\n * @property {IL10n} l10n - Localization service.\n */\n\nconst MAX_CANVAS_PIXELS = viewerCompatibilityParams.maxCanvasPixels || 16777216;\n\n/**\n * @implements {IRenderableView}\n */\nclass PDFPageView {\n  /**\n   * @param {PDFPageViewOptions} options\n   */\n  constructor(options) {\n    const container = options.container;\n    const defaultViewport = options.defaultViewport;\n\n    this.id = options.id;\n    this.renderingId = \"page\" + this.id;\n\n    this.pdfPage = null;\n    this.pageLabel = null;\n    this.rotation = 0;\n    this.scale = options.scale || DEFAULT_SCALE;\n    this.viewport = defaultViewport;\n    this.pdfPageRotate = defaultViewport.rotation;\n    this.hasRestrictedScaling = false;\n    this.textLayerMode = Number.isInteger(options.textLayerMode)\n      ? options.textLayerMode\n      : TextLayerMode.ENABLE;\n    this.imageResourcesPath = options.imageResourcesPath || \"\";\n    this.renderInteractiveForms = options.renderInteractiveForms || false;\n    this.useOnlyCssZoom = options.useOnlyCssZoom || false;\n    this.maxCanvasPixels = options.maxCanvasPixels || MAX_CANVAS_PIXELS;\n\n    this.eventBus = options.eventBus;\n    this.renderingQueue = options.renderingQueue;\n    this.textLayerFactory = options.textLayerFactory;\n    this.annotationLayerFactory = options.annotationLayerFactory;\n    this.renderer = options.renderer || RendererType.CANVAS;\n    this.enableWebGL = options.enableWebGL || false;\n    this.l10n = options.l10n || NullL10n;\n\n    this.paintTask = null;\n    this.paintedViewportMap = new WeakMap();\n    this.renderingState = RenderingStates.INITIAL;\n    this.resume = null;\n    this.error = null;\n\n    this.annotationLayer = null;\n    this.textLayer = null;\n    this.zoomLayer = null;\n\n    const div = document.createElement(\"div\");\n    div.className = \"page\";\n    div.style.width = Math.floor(this.viewport.width) + \"px\";\n    div.style.height = Math.floor(this.viewport.height) + \"px\";\n    div.setAttribute(\"data-page-number\", this.id);\n    this.div = div;\n\n    container.appendChild(div);\n  }\n\n  setPdfPage(pdfPage) {\n    this.pdfPage = pdfPage;\n    this.pdfPageRotate = pdfPage.rotate;\n\n    const totalRotation = (this.rotation + this.pdfPageRotate) % 360;\n    this.viewport = pdfPage.getViewport({\n      scale: this.scale * CSS_UNITS,\n      rotation: totalRotation,\n    });\n    this.stats = pdfPage.stats;\n    this.reset();\n  }\n\n  destroy() {\n    this.reset();\n    if (this.pdfPage) {\n      this.pdfPage.cleanup();\n    }\n  }\n\n  /**\n   * @private\n   */\n  _resetZoomLayer(removeFromDOM = false) {\n    if (!this.zoomLayer) {\n      return;\n    }\n    const zoomLayerCanvas = this.zoomLayer.firstChild;\n    this.paintedViewportMap.delete(zoomLayerCanvas);\n    // Zeroing the width and height causes Firefox to release graphics\n    // resources immediately, which can greatly reduce memory consumption.\n    zoomLayerCanvas.width = 0;\n    zoomLayerCanvas.height = 0;\n\n    if (removeFromDOM) {\n      // Note: `ChildNode.remove` doesn't throw if the parent node is undefined.\n      this.zoomLayer.remove();\n    }\n    this.zoomLayer = null;\n  }\n\n  reset(keepZoomLayer = false, keepAnnotations = false) {\n    this.cancelRendering(keepAnnotations);\n    this.renderingState = RenderingStates.INITIAL;\n\n    const div = this.div;\n    div.style.width = Math.floor(this.viewport.width) + \"px\";\n    div.style.height = Math.floor(this.viewport.height) + \"px\";\n\n    const childNodes = div.childNodes;\n    const currentZoomLayerNode = (keepZoomLayer && this.zoomLayer) || null;\n    const currentAnnotationNode =\n      (keepAnnotations && this.annotationLayer && this.annotationLayer.div) ||\n      null;\n    for (let i = childNodes.length - 1; i >= 0; i--) {\n      const node = childNodes[i];\n      if (currentZoomLayerNode === node || currentAnnotationNode === node) {\n        continue;\n      }\n      div.removeChild(node);\n    }\n    div.removeAttribute(\"data-loaded\");\n\n    if (currentAnnotationNode) {\n      // Hide the annotation layer until all elements are resized\n      // so they are not displayed on the already resized page.\n      this.annotationLayer.hide();\n    } else if (this.annotationLayer) {\n      this.annotationLayer.cancel();\n      this.annotationLayer = null;\n    }\n\n    if (!currentZoomLayerNode) {\n      if (this.canvas) {\n        this.paintedViewportMap.delete(this.canvas);\n        // Zeroing the width and height causes Firefox to release graphics\n        // resources immediately, which can greatly reduce memory consumption.\n        this.canvas.width = 0;\n        this.canvas.height = 0;\n        delete this.canvas;\n      }\n      this._resetZoomLayer();\n    }\n    if (this.svg) {\n      this.paintedViewportMap.delete(this.svg);\n      delete this.svg;\n    }\n\n    this.loadingIconDiv = document.createElement(\"div\");\n    this.loadingIconDiv.className = \"loadingIcon\";\n    div.appendChild(this.loadingIconDiv);\n  }\n\n  update(scale, rotation) {\n    this.scale = scale || this.scale;\n    // The rotation may be zero.\n    if (typeof rotation !== \"undefined\") {\n      this.rotation = rotation;\n    }\n\n    const totalRotation = (this.rotation + this.pdfPageRotate) % 360;\n    this.viewport = this.viewport.clone({\n      scale: this.scale * CSS_UNITS,\n      rotation: totalRotation,\n    });\n\n    if (this.svg) {\n      this.cssTransform(this.svg, true);\n\n      this.eventBus.dispatch(\"pagerendered\", {\n        source: this,\n        pageNumber: this.id,\n        cssTransform: true,\n        timestamp: performance.now(),\n      });\n      return;\n    }\n\n    let isScalingRestricted = false;\n    if (this.canvas && this.maxCanvasPixels > 0) {\n      const outputScale = this.outputScale;\n      if (\n        ((Math.floor(this.viewport.width) * outputScale.sx) | 0) *\n          ((Math.floor(this.viewport.height) * outputScale.sy) | 0) >\n        this.maxCanvasPixels\n      ) {\n        isScalingRestricted = true;\n      }\n    }\n\n    if (this.canvas) {\n      if (\n        this.useOnlyCssZoom ||\n        (this.hasRestrictedScaling && isScalingRestricted)\n      ) {\n        this.cssTransform(this.canvas, true);\n\n        this.eventBus.dispatch(\"pagerendered\", {\n          source: this,\n          pageNumber: this.id,\n          cssTransform: true,\n          timestamp: performance.now(),\n        });\n        return;\n      }\n      if (!this.zoomLayer && !this.canvas.hasAttribute(\"hidden\")) {\n        this.zoomLayer = this.canvas.parentNode;\n        this.zoomLayer.style.position = \"absolute\";\n      }\n    }\n    if (this.zoomLayer) {\n      this.cssTransform(this.zoomLayer.firstChild);\n    }\n    this.reset(/* keepZoomLayer = */ true, /* keepAnnotations = */ true);\n  }\n\n  /**\n   * PLEASE NOTE: Most likely you want to use the `this.reset()` method,\n   *              rather than calling this one directly.\n   */\n  cancelRendering(keepAnnotations = false) {\n    if (this.paintTask) {\n      this.paintTask.cancel();\n      this.paintTask = null;\n    }\n    this.resume = null;\n\n    if (this.textLayer) {\n      this.textLayer.cancel();\n      this.textLayer = null;\n    }\n    if (!keepAnnotations && this.annotationLayer) {\n      this.annotationLayer.cancel();\n      this.annotationLayer = null;\n    }\n  }\n\n  cssTransform(target, redrawAnnotations = false) {\n    // Scale target (canvas or svg), its wrapper and page container.\n    const width = this.viewport.width;\n    const height = this.viewport.height;\n    const div = this.div;\n    target.style.width = target.parentNode.style.width = div.style.width =\n      Math.floor(width) + \"px\";\n    target.style.height = target.parentNode.style.height = div.style.height =\n      Math.floor(height) + \"px\";\n    // The canvas may have been originally rotated; rotate relative to that.\n    const relativeRotation =\n      this.viewport.rotation - this.paintedViewportMap.get(target).rotation;\n    const absRotation = Math.abs(relativeRotation);\n    let scaleX = 1,\n      scaleY = 1;\n    if (absRotation === 90 || absRotation === 270) {\n      // Scale x and y because of the rotation.\n      scaleX = height / width;\n      scaleY = width / height;\n    }\n    const cssTransform =\n      \"rotate(\" +\n      relativeRotation +\n      \"deg) \" +\n      \"scale(\" +\n      scaleX +\n      \",\" +\n      scaleY +\n      \")\";\n    target.style.transform = cssTransform;\n\n    if (this.textLayer) {\n      // Rotating the text layer is more complicated since the divs inside the\n      // the text layer are rotated.\n      // TODO: This could probably be simplified by drawing the text layer in\n      // one orientation and then rotating overall.\n      const textLayerViewport = this.textLayer.viewport;\n      const textRelativeRotation =\n        this.viewport.rotation - textLayerViewport.rotation;\n      const textAbsRotation = Math.abs(textRelativeRotation);\n      let scale = width / textLayerViewport.width;\n      if (textAbsRotation === 90 || textAbsRotation === 270) {\n        scale = width / textLayerViewport.height;\n      }\n      const textLayerDiv = this.textLayer.textLayerDiv;\n      let transX, transY;\n      switch (textAbsRotation) {\n        case 0:\n          transX = transY = 0;\n          break;\n        case 90:\n          transX = 0;\n          transY = \"-\" + textLayerDiv.style.height;\n          break;\n        case 180:\n          transX = \"-\" + textLayerDiv.style.width;\n          transY = \"-\" + textLayerDiv.style.height;\n          break;\n        case 270:\n          transX = \"-\" + textLayerDiv.style.width;\n          transY = 0;\n          break;\n        default:\n          console.error(\"Bad rotation value.\");\n          break;\n      }\n\n      textLayerDiv.style.transform =\n        \"rotate(\" +\n        textAbsRotation +\n        \"deg) \" +\n        \"scale(\" +\n        scale +\n        \", \" +\n        scale +\n        \") \" +\n        \"translate(\" +\n        transX +\n        \", \" +\n        transY +\n        \")\";\n      textLayerDiv.style.transformOrigin = \"0% 0%\";\n    }\n\n    if (redrawAnnotations && this.annotationLayer) {\n      this.annotationLayer.render(this.viewport, \"display\");\n    }\n  }\n\n  get width() {\n    return this.viewport.width;\n  }\n\n  get height() {\n    return this.viewport.height;\n  }\n\n  getPagePoint(x, y) {\n    return this.viewport.convertToPdfPoint(x, y);\n  }\n\n  draw() {\n    if (this.renderingState !== RenderingStates.INITIAL) {\n      console.error(\"Must be in new state before drawing\");\n      this.reset(); // Ensure that we reset all state to prevent issues.\n    }\n    const { div, pdfPage } = this;\n\n    if (!pdfPage) {\n      this.renderingState = RenderingStates.FINISHED;\n\n      if (this.loadingIconDiv) {\n        div.removeChild(this.loadingIconDiv);\n        delete this.loadingIconDiv;\n      }\n      return Promise.reject(new Error(\"pdfPage is not loaded\"));\n    }\n\n    this.renderingState = RenderingStates.RUNNING;\n\n    // Wrap the canvas so that if it has a CSS transform for high DPI the\n    // overflow will be hidden in Firefox.\n    const canvasWrapper = document.createElement(\"div\");\n    canvasWrapper.style.width = div.style.width;\n    canvasWrapper.style.height = div.style.height;\n    canvasWrapper.classList.add(\"canvasWrapper\");\n\n    if (this.annotationLayer && this.annotationLayer.div) {\n      // The annotation layer needs to stay on top.\n      div.insertBefore(canvasWrapper, this.annotationLayer.div);\n    } else {\n      div.appendChild(canvasWrapper);\n    }\n\n    let textLayer = null;\n    if (this.textLayerMode !== TextLayerMode.DISABLE && this.textLayerFactory) {\n      const textLayerDiv = document.createElement(\"div\");\n      textLayerDiv.className = \"textLayer\";\n      textLayerDiv.style.width = canvasWrapper.style.width;\n      textLayerDiv.style.height = canvasWrapper.style.height;\n      if (this.annotationLayer && this.annotationLayer.div) {\n        // The annotation layer needs to stay on top.\n        div.insertBefore(textLayerDiv, this.annotationLayer.div);\n      } else {\n        div.appendChild(textLayerDiv);\n      }\n\n      textLayer = this.textLayerFactory.createTextLayerBuilder(\n        textLayerDiv,\n        this.id - 1,\n        this.viewport,\n        this.textLayerMode === TextLayerMode.ENABLE_ENHANCE,\n        this.eventBus\n      );\n    }\n    this.textLayer = textLayer;\n\n    let renderContinueCallback = null;\n    if (this.renderingQueue) {\n      renderContinueCallback = cont => {\n        if (!this.renderingQueue.isHighestPriority(this)) {\n          this.renderingState = RenderingStates.PAUSED;\n          this.resume = () => {\n            this.renderingState = RenderingStates.RUNNING;\n            cont();\n          };\n          return;\n        }\n        cont();\n      };\n    }\n\n    const finishPaintTask = async error => {\n      // The paintTask may have been replaced by a new one, so only remove\n      // the reference to the paintTask if it matches the one that is\n      // triggering this callback.\n      if (paintTask === this.paintTask) {\n        this.paintTask = null;\n      }\n\n      if (error instanceof RenderingCancelledException) {\n        this.error = null;\n        return;\n      }\n\n      this.renderingState = RenderingStates.FINISHED;\n\n      if (this.loadingIconDiv) {\n        div.removeChild(this.loadingIconDiv);\n        delete this.loadingIconDiv;\n      }\n      this._resetZoomLayer(/* removeFromDOM = */ true);\n\n      this.error = error;\n      this.stats = pdfPage.stats;\n\n      this.eventBus.dispatch(\"pagerendered\", {\n        source: this,\n        pageNumber: this.id,\n        cssTransform: false,\n        timestamp: performance.now(),\n      });\n\n      if (error) {\n        throw error;\n      }\n    };\n\n    const paintTask =\n      this.renderer === RendererType.SVG\n        ? this.paintOnSvg(canvasWrapper)\n        : this.paintOnCanvas(canvasWrapper);\n    paintTask.onRenderContinue = renderContinueCallback;\n    this.paintTask = paintTask;\n\n    const resultPromise = paintTask.promise.then(\n      function () {\n        return finishPaintTask(null).then(function () {\n          if (textLayer) {\n            const readableStream = pdfPage.streamTextContent({\n              normalizeWhitespace: true,\n            });\n            textLayer.setTextContentStream(readableStream);\n            textLayer.render();\n          }\n        });\n      },\n      function (reason) {\n        return finishPaintTask(reason);\n      }\n    );\n\n    if (this.annotationLayerFactory) {\n      if (!this.annotationLayer) {\n        this.annotationLayer = this.annotationLayerFactory.createAnnotationLayerBuilder(\n          div,\n          pdfPage,\n          this.imageResourcesPath,\n          this.renderInteractiveForms,\n          this.l10n\n        );\n      }\n      this.annotationLayer.render(this.viewport, \"display\");\n    }\n    div.setAttribute(\"data-loaded\", true);\n\n    this.eventBus.dispatch(\"pagerender\", {\n      source: this,\n      pageNumber: this.id,\n    });\n    return resultPromise;\n  }\n\n  paintOnCanvas(canvasWrapper) {\n    const renderCapability = createPromiseCapability();\n    const result = {\n      promise: renderCapability.promise,\n      onRenderContinue(cont) {\n        cont();\n      },\n      cancel() {\n        renderTask.cancel();\n      },\n    };\n\n    const viewport = this.viewport;\n    const canvas = document.createElement(\"canvas\");\n    this.l10n\n      .get(\"page_canvas\", { page: this.id }, \"Page {{page}}\")\n      .then(msg => {\n        canvas.setAttribute(\"aria-label\", msg);\n      });\n\n    // Keep the canvas hidden until the first draw callback, or until drawing\n    // is complete when `!this.renderingQueue`, to prevent black flickering.\n    canvas.setAttribute(\"hidden\", \"hidden\");\n    let isCanvasHidden = true;\n    const showCanvas = function () {\n      if (isCanvasHidden) {\n        canvas.removeAttribute(\"hidden\");\n        isCanvasHidden = false;\n      }\n    };\n\n    canvasWrapper.appendChild(canvas);\n    this.canvas = canvas;\n\n    if (\n      typeof PDFJSDev === \"undefined\" ||\n      PDFJSDev.test(\"MOZCENTRAL || GENERIC\")\n    ) {\n      canvas.mozOpaque = true;\n    }\n\n    const ctx = canvas.getContext(\"2d\", { alpha: false });\n    const outputScale = getOutputScale(ctx);\n    this.outputScale = outputScale;\n\n    if (this.useOnlyCssZoom) {\n      const actualSizeViewport = viewport.clone({ scale: CSS_UNITS });\n      // Use a scale that makes the canvas have the originally intended size\n      // of the page.\n      outputScale.sx *= actualSizeViewport.width / viewport.width;\n      outputScale.sy *= actualSizeViewport.height / viewport.height;\n      outputScale.scaled = true;\n    }\n\n    if (this.maxCanvasPixels > 0) {\n      const pixelsInViewport = viewport.width * viewport.height;\n      const maxScale = Math.sqrt(this.maxCanvasPixels / pixelsInViewport);\n      if (outputScale.sx > maxScale || outputScale.sy > maxScale) {\n        outputScale.sx = maxScale;\n        outputScale.sy = maxScale;\n        outputScale.scaled = true;\n        this.hasRestrictedScaling = true;\n      } else {\n        this.hasRestrictedScaling = false;\n      }\n    }\n\n    const sfx = approximateFraction(outputScale.sx);\n    const sfy = approximateFraction(outputScale.sy);\n    canvas.width = roundToDivide(viewport.width * outputScale.sx, sfx[0]);\n    canvas.height = roundToDivide(viewport.height * outputScale.sy, sfy[0]);\n    canvas.style.width = roundToDivide(viewport.width, sfx[1]) + \"px\";\n    canvas.style.height = roundToDivide(viewport.height, sfy[1]) + \"px\";\n    // Add the viewport so it's known what it was originally drawn with.\n    this.paintedViewportMap.set(canvas, viewport);\n\n    // Rendering area\n    const transform = !outputScale.scaled\n      ? null\n      : [outputScale.sx, 0, 0, outputScale.sy, 0, 0];\n    const renderContext = {\n      canvasContext: ctx,\n      transform,\n      viewport: this.viewport,\n      enableWebGL: this.enableWebGL,\n      renderInteractiveForms: this.renderInteractiveForms,\n    };\n    const renderTask = this.pdfPage.render(renderContext);\n    renderTask.onContinue = function (cont) {\n      showCanvas();\n      if (result.onRenderContinue) {\n        result.onRenderContinue(cont);\n      } else {\n        cont();\n      }\n    };\n\n    renderTask.promise.then(\n      function () {\n        showCanvas();\n        renderCapability.resolve(undefined);\n      },\n      function (error) {\n        showCanvas();\n        renderCapability.reject(error);\n      }\n    );\n    return result;\n  }\n\n  paintOnSvg(wrapper) {\n    if (\n      typeof PDFJSDev !== \"undefined\" &&\n      PDFJSDev.test(\"MOZCENTRAL || CHROME\")\n    ) {\n      // Return a mock object, to prevent errors such as e.g.\n      // \"TypeError: paintTask.promise is undefined\".\n      return {\n        promise: Promise.reject(new Error(\"SVG rendering is not supported.\")),\n        onRenderContinue(cont) {},\n        cancel() {},\n      };\n    }\n\n    let cancelled = false;\n    const ensureNotCancelled = () => {\n      if (cancelled) {\n        throw new RenderingCancelledException(\n          `Rendering cancelled, page ${this.id}`,\n          \"svg\"\n        );\n      }\n    };\n\n    const pdfPage = this.pdfPage;\n    const actualSizeViewport = this.viewport.clone({ scale: CSS_UNITS });\n    const promise = pdfPage.getOperatorList().then(opList => {\n      ensureNotCancelled();\n      const svgGfx = new SVGGraphics(pdfPage.commonObjs, pdfPage.objs);\n      return svgGfx.getSVG(opList, actualSizeViewport).then(svg => {\n        ensureNotCancelled();\n        this.svg = svg;\n        this.paintedViewportMap.set(svg, actualSizeViewport);\n\n        svg.style.width = wrapper.style.width;\n        svg.style.height = wrapper.style.height;\n        this.renderingState = RenderingStates.FINISHED;\n        wrapper.appendChild(svg);\n      });\n    });\n\n    return {\n      promise,\n      onRenderContinue(cont) {\n        cont();\n      },\n      cancel() {\n        cancelled = true;\n      },\n    };\n  }\n\n  /**\n   * @param {string|null} label\n   */\n  setPageLabel(label) {\n    this.pageLabel = typeof label === \"string\" ? label : null;\n\n    if (this.pageLabel !== null) {\n      this.div.setAttribute(\"data-page-label\", this.pageLabel);\n    } else {\n      this.div.removeAttribute(\"data-page-label\");\n    }\n  }\n}\n\nexport { PDFPageView };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst CLEANUP_TIMEOUT = 30000;\n\nconst RenderingStates = {\n  INITIAL: 0,\n  RUNNING: 1,\n  PAUSED: 2,\n  FINISHED: 3,\n};\n\n/**\n * Controls rendering of the views for pages and thumbnails.\n */\nclass PDFRenderingQueue {\n  constructor() {\n    this.pdfViewer = null;\n    this.pdfThumbnailViewer = null;\n    this.onIdle = null;\n    this.highestPriorityPage = null;\n    this.idleTimeout = null;\n    this.printing = false;\n    this.isThumbnailViewEnabled = false;\n  }\n\n  /**\n   * @param {PDFViewer} pdfViewer\n   */\n  setViewer(pdfViewer) {\n    this.pdfViewer = pdfViewer;\n  }\n\n  /**\n   * @param {PDFThumbnailViewer} pdfThumbnailViewer\n   */\n  setThumbnailViewer(pdfThumbnailViewer) {\n    this.pdfThumbnailViewer = pdfThumbnailViewer;\n  }\n\n  /**\n   * @param {IRenderableView} view\n   * @returns {boolean}\n   */\n  isHighestPriority(view) {\n    return this.highestPriorityPage === view.renderingId;\n  }\n\n  /**\n   * @param {Object} currentlyVisiblePages\n   */\n  renderHighestPriority(currentlyVisiblePages) {\n    if (this.idleTimeout) {\n      clearTimeout(this.idleTimeout);\n      this.idleTimeout = null;\n    }\n\n    // Pages have a higher priority than thumbnails, so check them first.\n    if (this.pdfViewer.forceRendering(currentlyVisiblePages)) {\n      return;\n    }\n    // No pages needed rendering, so check thumbnails.\n    if (this.pdfThumbnailViewer && this.isThumbnailViewEnabled) {\n      if (this.pdfThumbnailViewer.forceRendering()) {\n        return;\n      }\n    }\n\n    if (this.printing) {\n      // If printing is currently ongoing do not reschedule cleanup.\n      return;\n    }\n\n    if (this.onIdle) {\n      this.idleTimeout = setTimeout(this.onIdle.bind(this), CLEANUP_TIMEOUT);\n    }\n  }\n\n  /**\n   * @param {Object} visible\n   * @param {Array} views\n   * @param {boolean} scrolledDown\n   */\n  getHighestPriority(visible, views, scrolledDown) {\n    /**\n     * The state has changed. Figure out which page has the highest priority to\n     * render next (if any).\n     *\n     * Priority:\n     * 1. visible pages\n     * 2. if last scrolled down, the page after the visible pages, or\n     *    if last scrolled up, the page before the visible pages\n     */\n    const visibleViews = visible.views;\n\n    const numVisible = visibleViews.length;\n    if (numVisible === 0) {\n      return null;\n    }\n    for (let i = 0; i < numVisible; ++i) {\n      const view = visibleViews[i].view;\n      if (!this.isViewFinished(view)) {\n        return view;\n      }\n    }\n\n    // All the visible views have rendered; try to render next/previous pages.\n    if (scrolledDown) {\n      const nextPageIndex = visible.last.id;\n      // IDs start at 1, so no need to add 1.\n      if (views[nextPageIndex] && !this.isViewFinished(views[nextPageIndex])) {\n        return views[nextPageIndex];\n      }\n    } else {\n      const previousPageIndex = visible.first.id - 2;\n      if (\n        views[previousPageIndex] &&\n        !this.isViewFinished(views[previousPageIndex])\n      ) {\n        return views[previousPageIndex];\n      }\n    }\n    // Everything that needs to be rendered has been.\n    return null;\n  }\n\n  /**\n   * @param {IRenderableView} view\n   * @returns {boolean}\n   */\n  isViewFinished(view) {\n    return view.renderingState === RenderingStates.FINISHED;\n  }\n\n  /**\n   * Render a page or thumbnail view. This calls the appropriate function\n   * based on the views state. If the view is already rendered it will return\n   * `false`.\n   *\n   * @param {IRenderableView} view\n   */\n  renderView(view) {\n    switch (view.renderingState) {\n      case RenderingStates.FINISHED:\n        return false;\n      case RenderingStates.PAUSED:\n        this.highestPriorityPage = view.renderingId;\n        view.resume();\n        break;\n      case RenderingStates.RUNNING:\n        this.highestPriorityPage = view.renderingId;\n        break;\n      case RenderingStates.INITIAL:\n        this.highestPriorityPage = view.renderingId;\n        view\n          .draw()\n          .finally(() => {\n            this.renderHighestPriority();\n          })\n          .catch(reason => {\n            console.error(`renderView: \"${reason}\"`);\n          });\n        break;\n    }\n    return true;\n  }\n}\n\nexport { RenderingStates, PDFRenderingQueue };\n","/* Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { BaseViewer } from \"./base_viewer.js\";\nimport { shadow } from \"pdfjs-lib\";\n\nclass PDFSinglePageViewer extends BaseViewer {\n  constructor(options) {\n    super(options);\n\n    this.eventBus._on(\"pagesinit\", evt => {\n      // Since the pages are placed in a `DocumentFragment`, make sure that\n      // the current page becomes visible upon loading of the document.\n      this._ensurePageViewVisible();\n    });\n  }\n\n  get _viewerElement() {\n    // Since we only want to display *one* page at a time when using the\n    // `PDFSinglePageViewer`, we cannot append them to the `viewer` DOM element.\n    // Instead, they are placed in a `DocumentFragment`, and only the current\n    // page is displayed in the viewer (refer to `this._ensurePageViewVisible`).\n    return shadow(this, \"_viewerElement\", this._shadowViewer);\n  }\n\n  _resetView() {\n    super._resetView();\n    this._previousPageNumber = 1;\n    this._shadowViewer = document.createDocumentFragment();\n    this._updateScrollDown = null;\n  }\n\n  _ensurePageViewVisible() {\n    const pageView = this._pages[this._currentPageNumber - 1];\n    const previousPageView = this._pages[this._previousPageNumber - 1];\n\n    const viewerNodes = this.viewer.childNodes;\n    switch (viewerNodes.length) {\n      case 0: // Should *only* occur on initial loading.\n        this.viewer.appendChild(pageView.div);\n        break;\n      case 1: // The normal page-switching case.\n        if (viewerNodes[0] !== previousPageView.div) {\n          throw new Error(\n            \"_ensurePageViewVisible: Unexpected previously visible page.\"\n          );\n        }\n        if (pageView === previousPageView) {\n          break; // The correct page is already visible.\n        }\n        // Switch visible pages, and reset the viewerContainer scroll position.\n        this._shadowViewer.appendChild(previousPageView.div);\n        this.viewer.appendChild(pageView.div);\n\n        this.container.scrollTop = 0;\n        break;\n      default:\n        throw new Error(\n          \"_ensurePageViewVisible: Only one page should be visible at a time.\"\n        );\n    }\n    this._previousPageNumber = this._currentPageNumber;\n  }\n\n  _scrollUpdate() {\n    if (this._updateScrollDown) {\n      this._updateScrollDown();\n    }\n    super._scrollUpdate();\n  }\n\n  _scrollIntoView({ pageDiv, pageSpot = null, pageNumber = null }) {\n    if (pageNumber) {\n      // Ensure that `this._currentPageNumber` is correct.\n      this._setCurrentPageNumber(pageNumber);\n    }\n    const scrolledDown = this._currentPageNumber >= this._previousPageNumber;\n\n    this._ensurePageViewVisible();\n    // Ensure that rendering always occurs, to avoid showing a blank page,\n    // even if the current position doesn't change when the page is scrolled.\n    this.update();\n\n    super._scrollIntoView({ pageDiv, pageSpot, pageNumber });\n\n    // Since scrolling is tracked using `requestAnimationFrame`, update the\n    // scroll direction during the next `this._scrollUpdate` invocation.\n    this._updateScrollDown = () => {\n      this.scroll.down = scrolledDown;\n      this._updateScrollDown = null;\n    };\n  }\n\n  _getVisiblePages() {\n    return this._getCurrentVisiblePage();\n  }\n\n  _updateHelper(visiblePages) {}\n\n  get _isScrollModeHorizontal() {\n    // The Scroll/Spread modes are never used in `PDFSinglePageViewer`.\n    return shadow(this, \"_isScrollModeHorizontal\", false);\n  }\n\n  _updateScrollMode() {}\n\n  _updateSpreadMode() {}\n}\n\nexport { PDFSinglePageViewer };\n","/* Copyright 2014 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  CSS_UNITS,\n  DEFAULT_SCALE,\n  DEFAULT_SCALE_VALUE,\n  getVisibleElements,\n  isPortraitOrientation,\n  isValidRotation,\n  isValidScrollMode,\n  isValidSpreadMode,\n  MAX_AUTO_SCALE,\n  moveToEndOfArray,\n  NullL10n,\n  PresentationModeState,\n  RendererType,\n  SCROLLBAR_PADDING,\n  scrollIntoView,\n  ScrollMode,\n  SpreadMode,\n  TextLayerMode,\n  UNKNOWN_SCALE,\n  VERTICAL_PADDING,\n  watchScroll,\n} from \"./ui_utils.js\";\nimport { PDFRenderingQueue, RenderingStates } from \"./pdf_rendering_queue.js\";\nimport { AnnotationLayerBuilder } from \"./annotation_layer_builder.js\";\nimport { createPromiseCapability } from \"pdfjs-lib\";\nimport { PDFPageView } from \"./pdf_page_view.js\";\nimport { SimpleLinkService } from \"./pdf_link_service.js\";\nimport { TextLayerBuilder } from \"./text_layer_builder.js\";\n\nconst DEFAULT_CACHE_SIZE = 10;\n\n/**\n * @typedef {Object} PDFViewerOptions\n * @property {HTMLDivElement} container - The container for the viewer element.\n * @property {HTMLDivElement} [viewer] - The viewer element.\n * @property {EventBus} eventBus - The application event bus.\n * @property {IPDFLinkService} linkService - The navigation/linking service.\n * @property {DownloadManager} [downloadManager] - The download manager\n *   component.\n * @property {PDFFindController} [findController] - The find controller\n *   component.\n * @property {PDFRenderingQueue} [renderingQueue] - The rendering queue object.\n * @property {boolean} [removePageBorders] - Removes the border shadow around\n *   the pages. The default value is `false`.\n * @property {number} [textLayerMode] - Controls if the text layer used for\n *   selection and searching is created, and if the improved text selection\n *   behaviour is enabled. The constants from {TextLayerMode} should be used.\n *   The default value is `TextLayerMode.ENABLE`.\n * @property {string} [imageResourcesPath] - Path for image resources, mainly\n *   mainly for annotation icons. Include trailing slash.\n * @property {boolean} [renderInteractiveForms] - Enables rendering of\n *   interactive form elements. The default is `false`.\n * @property {boolean} [enablePrintAutoRotate] - Enables automatic rotation of\n *   pages whose orientation differ from the first page upon printing. The\n *   default is `false`.\n * @property {string} renderer - 'canvas' or 'svg'. The default is 'canvas'.\n * @property {boolean} [enableWebGL] - Enables WebGL accelerated rendering for\n *   some operations. The default value is `false`.\n * @property {boolean} [useOnlyCssZoom] - Enables CSS only zooming. The default\n *   value is `false`.\n * @property {number} [maxCanvasPixels] - The maximum supported canvas size in\n *   total pixels, i.e. width * height. Use -1 for no limit. The default value\n *   is 4096 * 4096 (16 mega-pixels).\n * @property {IL10n} l10n - Localization service.\n */\n\nfunction PDFPageViewBuffer(size) {\n  const data = [];\n  this.push = function (view) {\n    const i = data.indexOf(view);\n    if (i >= 0) {\n      data.splice(i, 1);\n    }\n    data.push(view);\n    if (data.length > size) {\n      data.shift().destroy();\n    }\n  };\n  /**\n   * After calling resize, the size of the buffer will be newSize. The optional\n   * parameter pagesToKeep is, if present, an array of pages to push to the back\n   * of the buffer, delaying their destruction. The size of pagesToKeep has no\n   * impact on the final size of the buffer; if pagesToKeep has length larger\n   * than newSize, some of those pages will be destroyed anyway.\n   */\n  this.resize = function (newSize, pagesToKeep) {\n    size = newSize;\n    if (pagesToKeep) {\n      const pageIdsToKeep = new Set();\n      for (let i = 0, iMax = pagesToKeep.length; i < iMax; ++i) {\n        pageIdsToKeep.add(pagesToKeep[i].id);\n      }\n      moveToEndOfArray(data, function (page) {\n        return pageIdsToKeep.has(page.id);\n      });\n    }\n    while (data.length > size) {\n      data.shift().destroy();\n    }\n  };\n}\n\nfunction isSameScale(oldScale, newScale) {\n  if (newScale === oldScale) {\n    return true;\n  }\n  if (Math.abs(newScale - oldScale) < 1e-15) {\n    // Prevent unnecessary re-rendering of all pages when the scale\n    // changes only because of limited numerical precision.\n    return true;\n  }\n  return false;\n}\n\n/**\n * Simple viewer control to display PDF content/pages.\n * @implements {IRenderableView}\n */\nclass BaseViewer {\n  /**\n   * @param {PDFViewerOptions} options\n   */\n  constructor(options) {\n    if (this.constructor === BaseViewer) {\n      throw new Error(\"Cannot initialize BaseViewer.\");\n    }\n    this._name = this.constructor.name;\n\n    this.container = options.container;\n    this.viewer = options.viewer || options.container.firstElementChild;\n    this.eventBus = options.eventBus;\n    this.linkService = options.linkService || new SimpleLinkService();\n    this.downloadManager = options.downloadManager || null;\n    this.findController = options.findController || null;\n    this.removePageBorders = options.removePageBorders || false;\n    this.textLayerMode = Number.isInteger(options.textLayerMode)\n      ? options.textLayerMode\n      : TextLayerMode.ENABLE;\n    this.imageResourcesPath = options.imageResourcesPath || \"\";\n    this.renderInteractiveForms = options.renderInteractiveForms || false;\n    this.enablePrintAutoRotate = options.enablePrintAutoRotate || false;\n    this.renderer = options.renderer || RendererType.CANVAS;\n    this.enableWebGL = options.enableWebGL || false;\n    this.useOnlyCssZoom = options.useOnlyCssZoom || false;\n    this.maxCanvasPixels = options.maxCanvasPixels;\n    this.l10n = options.l10n || NullL10n;\n\n    this.defaultRenderingQueue = !options.renderingQueue;\n    if (this.defaultRenderingQueue) {\n      // Custom rendering queue is not specified, using default one\n      this.renderingQueue = new PDFRenderingQueue();\n      this.renderingQueue.setViewer(this);\n    } else {\n      this.renderingQueue = options.renderingQueue;\n    }\n\n    this.scroll = watchScroll(this.container, this._scrollUpdate.bind(this));\n    this.presentationModeState = PresentationModeState.UNKNOWN;\n    this._onBeforeDraw = this._onAfterDraw = null;\n    this._resetView();\n\n    if (this.removePageBorders) {\n      this.viewer.classList.add(\"removePageBorders\");\n    }\n    // Defer the dispatching of this event, to give other viewer components\n    // time to initialize *and* register 'baseviewerinit' event listeners.\n    Promise.resolve().then(() => {\n      this.eventBus.dispatch(\"baseviewerinit\", { source: this });\n    });\n  }\n\n  get pagesCount() {\n    return this._pages.length;\n  }\n\n  getPageView(index) {\n    return this._pages[index];\n  }\n\n  /**\n   * @type {boolean} - True if all {PDFPageView} objects are initialized.\n   */\n  get pageViewsReady() {\n    if (!this._pagesCapability.settled) {\n      return false;\n    }\n    // Prevent printing errors when 'disableAutoFetch' is set, by ensuring\n    // that *all* pages have in fact been completely loaded.\n    return this._pages.every(function (pageView) {\n      return pageView && pageView.pdfPage;\n    });\n  }\n\n  /**\n   * @type {number}\n   */\n  get currentPageNumber() {\n    return this._currentPageNumber;\n  }\n\n  /**\n   * @param {number} val - The page number.\n   */\n  set currentPageNumber(val) {\n    if (!Number.isInteger(val)) {\n      throw new Error(\"Invalid page number.\");\n    }\n    if (!this.pdfDocument) {\n      return;\n    }\n    // The intent can be to just reset a scroll position and/or scale.\n    if (!this._setCurrentPageNumber(val, /* resetCurrentPageView = */ true)) {\n      console.error(\n        `${this._name}.currentPageNumber: \"${val}\" is not a valid page.`\n      );\n    }\n  }\n\n  /**\n   * @returns {boolean} Whether the pageNumber is valid (within bounds).\n   * @private\n   */\n  _setCurrentPageNumber(val, resetCurrentPageView = false) {\n    if (this._currentPageNumber === val) {\n      if (resetCurrentPageView) {\n        this._resetCurrentPageView();\n      }\n      return true;\n    }\n\n    if (!(0 < val && val <= this.pagesCount)) {\n      return false;\n    }\n    this._currentPageNumber = val;\n\n    this.eventBus.dispatch(\"pagechanging\", {\n      source: this,\n      pageNumber: val,\n      pageLabel: this._pageLabels && this._pageLabels[val - 1],\n    });\n\n    if (resetCurrentPageView) {\n      this._resetCurrentPageView();\n    }\n    return true;\n  }\n\n  /**\n   * @type {string|null} Returns the current page label, or `null` if no page\n   *   labels exist.\n   */\n  get currentPageLabel() {\n    return this._pageLabels && this._pageLabels[this._currentPageNumber - 1];\n  }\n\n  /**\n   * @param {string} val - The page label.\n   */\n  set currentPageLabel(val) {\n    if (!this.pdfDocument) {\n      return;\n    }\n    let page = val | 0; // Fallback page number.\n    if (this._pageLabels) {\n      const i = this._pageLabels.indexOf(val);\n      if (i >= 0) {\n        page = i + 1;\n      }\n    }\n    // The intent can be to just reset a scroll position and/or scale.\n    if (!this._setCurrentPageNumber(page, /* resetCurrentPageView = */ true)) {\n      console.error(\n        `${this._name}.currentPageLabel: \"${val}\" is not a valid page.`\n      );\n    }\n  }\n\n  /**\n   * @type {number}\n   */\n  get currentScale() {\n    return this._currentScale !== UNKNOWN_SCALE\n      ? this._currentScale\n      : DEFAULT_SCALE;\n  }\n\n  /**\n   * @param {number} val - Scale of the pages in percents.\n   */\n  set currentScale(val) {\n    if (isNaN(val)) {\n      throw new Error(\"Invalid numeric scale.\");\n    }\n    if (!this.pdfDocument) {\n      return;\n    }\n    this._setScale(val, false);\n  }\n\n  /**\n   * @type {string}\n   */\n  get currentScaleValue() {\n    return this._currentScaleValue;\n  }\n\n  /**\n   * @param val - The scale of the pages (in percent or predefined value).\n   */\n  set currentScaleValue(val) {\n    if (!this.pdfDocument) {\n      return;\n    }\n    this._setScale(val, false);\n  }\n\n  /**\n   * @type {number}\n   */\n  get pagesRotation() {\n    return this._pagesRotation;\n  }\n\n  /**\n   * @param {number} rotation - The rotation of the pages (0, 90, 180, 270).\n   */\n  set pagesRotation(rotation) {\n    if (!isValidRotation(rotation)) {\n      throw new Error(\"Invalid pages rotation angle.\");\n    }\n    if (!this.pdfDocument) {\n      return;\n    }\n    if (this._pagesRotation === rotation) {\n      return; // The rotation didn't change.\n    }\n    this._pagesRotation = rotation;\n\n    const pageNumber = this._currentPageNumber;\n\n    for (let i = 0, ii = this._pages.length; i < ii; i++) {\n      const pageView = this._pages[i];\n      pageView.update(pageView.scale, rotation);\n    }\n    // Prevent errors in case the rotation changes *before* the scale has been\n    // set to a non-default value.\n    if (this._currentScaleValue) {\n      this._setScale(this._currentScaleValue, true);\n    }\n\n    this.eventBus.dispatch(\"rotationchanging\", {\n      source: this,\n      pagesRotation: rotation,\n      pageNumber,\n    });\n\n    if (this.defaultRenderingQueue) {\n      this.update();\n    }\n  }\n\n  get firstPagePromise() {\n    return this.pdfDocument ? this._firstPageCapability.promise : null;\n  }\n\n  get onePageRendered() {\n    return this.pdfDocument ? this._onePageRenderedCapability.promise : null;\n  }\n\n  get pagesPromise() {\n    return this.pdfDocument ? this._pagesCapability.promise : null;\n  }\n\n  /**\n   * @private\n   */\n  get _viewerElement() {\n    // In most viewers, e.g. `PDFViewer`, this should return `this.viewer`.\n    throw new Error(\"Not implemented: _viewerElement\");\n  }\n\n  /**\n   * @private\n   */\n  _onePageRenderedOrForceFetch() {\n    // Unless the viewer *and* its pages are visible, rendering won't start and\n    // `this._onePageRenderedCapability` thus won't be resolved.\n    // To ensure that automatic printing, on document load, still works even in\n    // those cases we force-allow fetching of all pages when:\n    //  - The viewer is hidden in the DOM, e.g. in a `display: none` <iframe>\n    //    element; fixes bug 1618621.\n    //  - The viewer is visible, but none of the pages are (e.g. if the\n    //    viewer is very small); fixes bug 1618955.\n    if (\n      !this.container.offsetParent ||\n      this._getVisiblePages().views.length === 0\n    ) {\n      return Promise.resolve();\n    }\n    return this._onePageRenderedCapability.promise;\n  }\n\n  /**\n   * @param pdfDocument {PDFDocument}\n   */\n  setDocument(pdfDocument) {\n    if (this.pdfDocument) {\n      this._cancelRendering();\n      this._resetView();\n\n      if (this.findController) {\n        this.findController.setDocument(null);\n      }\n    }\n\n    this.pdfDocument = pdfDocument;\n    if (!pdfDocument) {\n      return;\n    }\n    const pagesCount = pdfDocument.numPages;\n    const firstPagePromise = pdfDocument.getPage(1);\n\n    this._pagesCapability.promise.then(() => {\n      this.eventBus.dispatch(\"pagesloaded\", {\n        source: this,\n        pagesCount,\n      });\n    });\n\n    this._onBeforeDraw = evt => {\n      const pageView = this._pages[evt.pageNumber - 1];\n      if (!pageView) {\n        return;\n      }\n      // Add the page to the buffer at the start of drawing. That way it can be\n      // evicted from the buffer and destroyed even if we pause its rendering.\n      this._buffer.push(pageView);\n    };\n    this.eventBus._on(\"pagerender\", this._onBeforeDraw);\n\n    this._onAfterDraw = evt => {\n      if (evt.cssTransform || this._onePageRenderedCapability.settled) {\n        return;\n      }\n      this._onePageRenderedCapability.resolve();\n\n      this.eventBus._off(\"pagerendered\", this._onAfterDraw);\n      this._onAfterDraw = null;\n    };\n    this.eventBus._on(\"pagerendered\", this._onAfterDraw);\n\n    // Fetch a single page so we can get a viewport that will be the default\n    // viewport for all pages\n    firstPagePromise\n      .then(firstPdfPage => {\n        this._firstPageCapability.resolve(firstPdfPage);\n\n        const scale = this.currentScale;\n        const viewport = firstPdfPage.getViewport({ scale: scale * CSS_UNITS });\n        const textLayerFactory =\n          this.textLayerMode !== TextLayerMode.DISABLE ? this : null;\n\n        for (let pageNum = 1; pageNum <= pagesCount; ++pageNum) {\n          const pageView = new PDFPageView({\n            container: this._viewerElement,\n            eventBus: this.eventBus,\n            id: pageNum,\n            scale,\n            defaultViewport: viewport.clone(),\n            renderingQueue: this.renderingQueue,\n            textLayerFactory,\n            textLayerMode: this.textLayerMode,\n            annotationLayerFactory: this,\n            imageResourcesPath: this.imageResourcesPath,\n            renderInteractiveForms: this.renderInteractiveForms,\n            renderer: this.renderer,\n            enableWebGL: this.enableWebGL,\n            useOnlyCssZoom: this.useOnlyCssZoom,\n            maxCanvasPixels: this.maxCanvasPixels,\n            l10n: this.l10n,\n          });\n          this._pages.push(pageView);\n        }\n        // Set the first `pdfPage` immediately, since it's already loaded,\n        // rather than having to repeat the `PDFDocumentProxy.getPage` call in\n        // the `this._ensurePdfPageLoaded` method before rendering can start.\n        const firstPageView = this._pages[0];\n        if (firstPageView) {\n          firstPageView.setPdfPage(firstPdfPage);\n          this.linkService.cachePageRef(1, firstPdfPage.ref);\n        }\n        if (this._spreadMode !== SpreadMode.NONE) {\n          this._updateSpreadMode();\n        }\n\n        // Fetch all the pages since the viewport is needed before printing\n        // starts to create the correct size canvas. Wait until one page is\n        // rendered so we don't tie up too many resources early on.\n        this._onePageRenderedOrForceFetch().then(() => {\n          if (this.findController) {\n            this.findController.setDocument(pdfDocument); // Enable searching.\n          }\n\n          // In addition to 'disableAutoFetch' being set, also attempt to reduce\n          // resource usage when loading *very* long/large documents.\n          if (pdfDocument.loadingParams.disableAutoFetch || pagesCount > 7500) {\n            // XXX: Printing is semi-broken with auto fetch disabled.\n            this._pagesCapability.resolve();\n            return;\n          }\n          let getPagesLeft = pagesCount - 1; // The first page was already loaded.\n\n          if (getPagesLeft <= 0) {\n            this._pagesCapability.resolve();\n            return;\n          }\n          for (let pageNum = 2; pageNum <= pagesCount; ++pageNum) {\n            pdfDocument.getPage(pageNum).then(\n              pdfPage => {\n                const pageView = this._pages[pageNum - 1];\n                if (!pageView.pdfPage) {\n                  pageView.setPdfPage(pdfPage);\n                }\n                this.linkService.cachePageRef(pageNum, pdfPage.ref);\n                if (--getPagesLeft === 0) {\n                  this._pagesCapability.resolve();\n                }\n              },\n              reason => {\n                console.error(\n                  `Unable to get page ${pageNum} to initialize viewer`,\n                  reason\n                );\n                if (--getPagesLeft === 0) {\n                  this._pagesCapability.resolve();\n                }\n              }\n            );\n          }\n        });\n\n        this.eventBus.dispatch(\"pagesinit\", { source: this });\n\n        if (this.defaultRenderingQueue) {\n          this.update();\n        }\n      })\n      .catch(reason => {\n        console.error(\"Unable to initialize viewer\", reason);\n      });\n  }\n\n  /**\n   * @param {Array|null} labels\n   */\n  setPageLabels(labels) {\n    if (!this.pdfDocument) {\n      return;\n    }\n    if (!labels) {\n      this._pageLabels = null;\n    } else if (\n      !(Array.isArray(labels) && this.pdfDocument.numPages === labels.length)\n    ) {\n      this._pageLabels = null;\n      console.error(`${this._name}.setPageLabels: Invalid page labels.`);\n    } else {\n      this._pageLabels = labels;\n    }\n    // Update all the `PDFPageView` instances.\n    for (let i = 0, ii = this._pages.length; i < ii; i++) {\n      const pageView = this._pages[i];\n      const label = this._pageLabels && this._pageLabels[i];\n      pageView.setPageLabel(label);\n    }\n  }\n\n  _resetView() {\n    this._pages = [];\n    this._currentPageNumber = 1;\n    this._currentScale = UNKNOWN_SCALE;\n    this._currentScaleValue = null;\n    this._pageLabels = null;\n    this._buffer = new PDFPageViewBuffer(DEFAULT_CACHE_SIZE);\n    this._location = null;\n    this._pagesRotation = 0;\n    this._pagesRequests = new WeakMap();\n    this._firstPageCapability = createPromiseCapability();\n    this._onePageRenderedCapability = createPromiseCapability();\n    this._pagesCapability = createPromiseCapability();\n    this._scrollMode = ScrollMode.VERTICAL;\n    this._spreadMode = SpreadMode.NONE;\n\n    if (this._onBeforeDraw) {\n      this.eventBus._off(\"pagerender\", this._onBeforeDraw);\n      this._onBeforeDraw = null;\n    }\n    if (this._onAfterDraw) {\n      this.eventBus._off(\"pagerendered\", this._onAfterDraw);\n      this._onAfterDraw = null;\n    }\n    // Remove the pages from the DOM...\n    this.viewer.textContent = \"\";\n    // ... and reset the Scroll mode CSS class(es) afterwards.\n    this._updateScrollMode();\n  }\n\n  _scrollUpdate() {\n    if (this.pagesCount === 0) {\n      return;\n    }\n    this.update();\n  }\n\n  _scrollIntoView({ pageDiv, pageSpot = null, pageNumber = null }) {\n    scrollIntoView(pageDiv, pageSpot);\n  }\n\n  _setScaleUpdatePages(newScale, newValue, noScroll = false, preset = false) {\n    this._currentScaleValue = newValue.toString();\n\n    if (isSameScale(this._currentScale, newScale)) {\n      if (preset) {\n        this.eventBus.dispatch(\"scalechanging\", {\n          source: this,\n          scale: newScale,\n          presetValue: newValue,\n        });\n      }\n      return;\n    }\n\n    for (let i = 0, ii = this._pages.length; i < ii; i++) {\n      this._pages[i].update(newScale);\n    }\n    this._currentScale = newScale;\n\n    if (!noScroll) {\n      let page = this._currentPageNumber,\n        dest;\n      if (\n        this._location &&\n        !(this.isInPresentationMode || this.isChangingPresentationMode)\n      ) {\n        page = this._location.pageNumber;\n        dest = [\n          null,\n          { name: \"XYZ\" },\n          this._location.left,\n          this._location.top,\n          null,\n        ];\n      }\n      this.scrollPageIntoView({\n        pageNumber: page,\n        destArray: dest,\n        allowNegativeOffset: true,\n      });\n    }\n\n    this.eventBus.dispatch(\"scalechanging\", {\n      source: this,\n      scale: newScale,\n      presetValue: preset ? newValue : undefined,\n    });\n\n    if (this.defaultRenderingQueue) {\n      this.update();\n    }\n  }\n\n  _setScale(value, noScroll = false) {\n    let scale = parseFloat(value);\n\n    if (scale > 0) {\n      this._setScaleUpdatePages(scale, value, noScroll, /* preset = */ false);\n    } else {\n      const currentPage = this._pages[this._currentPageNumber - 1];\n      if (!currentPage) {\n        return;\n      }\n      const noPadding = this.isInPresentationMode || this.removePageBorders;\n      let hPadding = noPadding ? 0 : SCROLLBAR_PADDING;\n      let vPadding = noPadding ? 0 : VERTICAL_PADDING;\n\n      if (!noPadding && this._isScrollModeHorizontal) {\n        [hPadding, vPadding] = [vPadding, hPadding]; // Swap the padding values.\n      }\n      const pageWidthScale =\n        ((this.container.clientWidth - hPadding) / currentPage.width) *\n        currentPage.scale;\n      const pageHeightScale =\n        ((this.container.clientHeight - vPadding) / currentPage.height) *\n        currentPage.scale;\n      switch (value) {\n        case \"page-actual\":\n          scale = 1;\n          break;\n        case \"page-width\":\n          scale = pageWidthScale;\n          break;\n        case \"page-height\":\n          scale = pageHeightScale;\n          break;\n        case \"page-fit\":\n          scale = Math.min(pageWidthScale, pageHeightScale);\n          break;\n        case \"auto\":\n          // For pages in landscape mode, fit the page height to the viewer\n          // *unless* the page would thus become too wide to fit horizontally.\n          const horizontalScale = isPortraitOrientation(currentPage)\n            ? pageWidthScale\n            : Math.min(pageHeightScale, pageWidthScale);\n          scale = Math.min(MAX_AUTO_SCALE, horizontalScale);\n          break;\n        default:\n          console.error(\n            `${this._name}._setScale: \"${value}\" is an unknown zoom value.`\n          );\n          return;\n      }\n      this._setScaleUpdatePages(scale, value, noScroll, /* preset = */ true);\n    }\n  }\n\n  /**\n   * Refreshes page view: scrolls to the current page and updates the scale.\n   * @private\n   */\n  _resetCurrentPageView() {\n    if (this.isInPresentationMode) {\n      // Fixes the case when PDF has different page sizes.\n      this._setScale(this._currentScaleValue, true);\n    }\n\n    const pageView = this._pages[this._currentPageNumber - 1];\n    this._scrollIntoView({ pageDiv: pageView.div });\n  }\n\n  /**\n   * @typedef ScrollPageIntoViewParameters\n   * @property {number} pageNumber - The page number.\n   * @property {Array} [destArray] - The original PDF destination array, in the\n   *   format: <page-ref> </XYZ|/FitXXX> <args..>\n   * @property {boolean} [allowNegativeOffset] - Allow negative page offsets.\n   *   The default value is `false`.\n   * @property {boolean} [ignoreDestinationZoom] - Ignore the zoom argument in\n   *   the destination array. The default value is `false`.\n   */\n\n  /**\n   * Scrolls page into view.\n   * @param {ScrollPageIntoViewParameters} params\n   */\n  scrollPageIntoView({\n    pageNumber,\n    destArray = null,\n    allowNegativeOffset = false,\n    ignoreDestinationZoom = false,\n  }) {\n    if (!this.pdfDocument) {\n      return;\n    }\n    const pageView =\n      Number.isInteger(pageNumber) && this._pages[pageNumber - 1];\n    if (!pageView) {\n      console.error(\n        `${this._name}.scrollPageIntoView: ` +\n          `\"${pageNumber}\" is not a valid pageNumber parameter.`\n      );\n      return;\n    }\n\n    if (this.isInPresentationMode || !destArray) {\n      this._setCurrentPageNumber(pageNumber, /* resetCurrentPageView = */ true);\n      return;\n    }\n    let x = 0,\n      y = 0;\n    let width = 0,\n      height = 0,\n      widthScale,\n      heightScale;\n    const changeOrientation = pageView.rotation % 180 !== 0;\n    const pageWidth =\n      (changeOrientation ? pageView.height : pageView.width) /\n      pageView.scale /\n      CSS_UNITS;\n    const pageHeight =\n      (changeOrientation ? pageView.width : pageView.height) /\n      pageView.scale /\n      CSS_UNITS;\n    let scale = 0;\n    switch (destArray[1].name) {\n      case \"XYZ\":\n        x = destArray[2];\n        y = destArray[3];\n        scale = destArray[4];\n        // If x and/or y coordinates are not supplied, default to\n        // _top_ left of the page (not the obvious bottom left,\n        // since aligning the bottom of the intended page with the\n        // top of the window is rarely helpful).\n        x = x !== null ? x : 0;\n        y = y !== null ? y : pageHeight;\n        break;\n      case \"Fit\":\n      case \"FitB\":\n        scale = \"page-fit\";\n        break;\n      case \"FitH\":\n      case \"FitBH\":\n        y = destArray[2];\n        scale = \"page-width\";\n        // According to the PDF spec, section 12.3.2.2, a `null` value in the\n        // parameter should maintain the position relative to the new page.\n        if (y === null && this._location) {\n          x = this._location.left;\n          y = this._location.top;\n        }\n        break;\n      case \"FitV\":\n      case \"FitBV\":\n        x = destArray[2];\n        width = pageWidth;\n        height = pageHeight;\n        scale = \"page-height\";\n        break;\n      case \"FitR\":\n        x = destArray[2];\n        y = destArray[3];\n        width = destArray[4] - x;\n        height = destArray[5] - y;\n        const hPadding = this.removePageBorders ? 0 : SCROLLBAR_PADDING;\n        const vPadding = this.removePageBorders ? 0 : VERTICAL_PADDING;\n\n        widthScale =\n          (this.container.clientWidth - hPadding) / width / CSS_UNITS;\n        heightScale =\n          (this.container.clientHeight - vPadding) / height / CSS_UNITS;\n        scale = Math.min(Math.abs(widthScale), Math.abs(heightScale));\n        break;\n      default:\n        console.error(\n          `${this._name}.scrollPageIntoView: ` +\n            `\"${destArray[1].name}\" is not a valid destination type.`\n        );\n        return;\n    }\n\n    if (!ignoreDestinationZoom) {\n      if (scale && scale !== this._currentScale) {\n        this.currentScaleValue = scale;\n      } else if (this._currentScale === UNKNOWN_SCALE) {\n        this.currentScaleValue = DEFAULT_SCALE_VALUE;\n      }\n    }\n\n    if (scale === \"page-fit\" && !destArray[4]) {\n      this._scrollIntoView({\n        pageDiv: pageView.div,\n        pageNumber,\n      });\n      return;\n    }\n\n    const boundingRect = [\n      pageView.viewport.convertToViewportPoint(x, y),\n      pageView.viewport.convertToViewportPoint(x + width, y + height),\n    ];\n    let left = Math.min(boundingRect[0][0], boundingRect[1][0]);\n    let top = Math.min(boundingRect[0][1], boundingRect[1][1]);\n\n    if (!allowNegativeOffset) {\n      // Some bad PDF generators will create destinations with e.g. top values\n      // that exceeds the page height. Ensure that offsets are not negative,\n      // to prevent a previous page from becoming visible (fixes bug 874482).\n      left = Math.max(left, 0);\n      top = Math.max(top, 0);\n    }\n    this._scrollIntoView({\n      pageDiv: pageView.div,\n      pageSpot: { left, top },\n      pageNumber,\n    });\n  }\n\n  _updateLocation(firstPage) {\n    const currentScale = this._currentScale;\n    const currentScaleValue = this._currentScaleValue;\n    const normalizedScaleValue =\n      parseFloat(currentScaleValue) === currentScale\n        ? Math.round(currentScale * 10000) / 100\n        : currentScaleValue;\n\n    const pageNumber = firstPage.id;\n    let pdfOpenParams = \"#page=\" + pageNumber;\n    pdfOpenParams += \"&zoom=\" + normalizedScaleValue;\n    const currentPageView = this._pages[pageNumber - 1];\n    const container = this.container;\n    const topLeft = currentPageView.getPagePoint(\n      container.scrollLeft - firstPage.x,\n      container.scrollTop - firstPage.y\n    );\n    const intLeft = Math.round(topLeft[0]);\n    const intTop = Math.round(topLeft[1]);\n    pdfOpenParams += \",\" + intLeft + \",\" + intTop;\n\n    this._location = {\n      pageNumber,\n      scale: normalizedScaleValue,\n      top: intTop,\n      left: intLeft,\n      rotation: this._pagesRotation,\n      pdfOpenParams,\n    };\n  }\n\n  _updateHelper(visiblePages) {\n    throw new Error(\"Not implemented: _updateHelper\");\n  }\n\n  update() {\n    const visible = this._getVisiblePages();\n    const visiblePages = visible.views,\n      numVisiblePages = visiblePages.length;\n\n    if (numVisiblePages === 0) {\n      return;\n    }\n    const newCacheSize = Math.max(DEFAULT_CACHE_SIZE, 2 * numVisiblePages + 1);\n    this._buffer.resize(newCacheSize, visiblePages);\n\n    this.renderingQueue.renderHighestPriority(visible);\n\n    this._updateHelper(visiblePages); // Run any class-specific update code.\n\n    this._updateLocation(visible.first);\n    this.eventBus.dispatch(\"updateviewarea\", {\n      source: this,\n      location: this._location,\n    });\n  }\n\n  containsElement(element) {\n    return this.container.contains(element);\n  }\n\n  focus() {\n    this.container.focus();\n  }\n\n  get _isScrollModeHorizontal() {\n    // Used to ensure that pre-rendering of the next/previous page works\n    // correctly, since Scroll/Spread modes are ignored in Presentation Mode.\n    return this.isInPresentationMode\n      ? false\n      : this._scrollMode === ScrollMode.HORIZONTAL;\n  }\n\n  get isInPresentationMode() {\n    return this.presentationModeState === PresentationModeState.FULLSCREEN;\n  }\n\n  get isChangingPresentationMode() {\n    return this.presentationModeState === PresentationModeState.CHANGING;\n  }\n\n  get isHorizontalScrollbarEnabled() {\n    return this.isInPresentationMode\n      ? false\n      : this.container.scrollWidth > this.container.clientWidth;\n  }\n\n  get isVerticalScrollbarEnabled() {\n    return this.isInPresentationMode\n      ? false\n      : this.container.scrollHeight > this.container.clientHeight;\n  }\n\n  /**\n   * Helper method for `this._getVisiblePages`. Should only ever be used when\n   * the viewer can only display a single page at a time, for example in:\n   *  - `PDFSinglePageViewer`.\n   *  - `PDFViewer` with Presentation Mode active.\n   */\n  _getCurrentVisiblePage() {\n    if (!this.pagesCount) {\n      return { views: [] };\n    }\n    const pageView = this._pages[this._currentPageNumber - 1];\n    // NOTE: Compute the `x` and `y` properties of the current view,\n    // since `this._updateLocation` depends of them being available.\n    const element = pageView.div;\n\n    const view = {\n      id: pageView.id,\n      x: element.offsetLeft + element.clientLeft,\n      y: element.offsetTop + element.clientTop,\n      view: pageView,\n    };\n    return { first: view, last: view, views: [view] };\n  }\n\n  _getVisiblePages() {\n    return getVisibleElements(\n      this.container,\n      this._pages,\n      true,\n      this._isScrollModeHorizontal\n    );\n  }\n\n  /**\n   * @param {number} pageNumber\n   */\n  isPageVisible(pageNumber) {\n    if (!this.pdfDocument) {\n      return false;\n    }\n    if (pageNumber < 1 || pageNumber > this.pagesCount) {\n      console.error(\n        `${this._name}.isPageVisible: \"${pageNumber}\" is out of bounds.`\n      );\n      return false;\n    }\n    return this._getVisiblePages().views.some(function (view) {\n      return view.id === pageNumber;\n    });\n  }\n\n  cleanup() {\n    for (let i = 0, ii = this._pages.length; i < ii; i++) {\n      if (\n        this._pages[i] &&\n        this._pages[i].renderingState !== RenderingStates.FINISHED\n      ) {\n        this._pages[i].reset();\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  _cancelRendering() {\n    for (let i = 0, ii = this._pages.length; i < ii; i++) {\n      if (this._pages[i]) {\n        this._pages[i].cancelRendering();\n      }\n    }\n  }\n\n  /**\n   * @param {PDFPageView} pageView\n   * @returns {Promise} Returns a promise containing a {PDFPageProxy} object.\n   * @private\n   */\n  _ensurePdfPageLoaded(pageView) {\n    if (pageView.pdfPage) {\n      return Promise.resolve(pageView.pdfPage);\n    }\n    if (this._pagesRequests.has(pageView)) {\n      return this._pagesRequests.get(pageView);\n    }\n    const promise = this.pdfDocument\n      .getPage(pageView.id)\n      .then(pdfPage => {\n        if (!pageView.pdfPage) {\n          pageView.setPdfPage(pdfPage);\n        }\n        this._pagesRequests.delete(pageView);\n        return pdfPage;\n      })\n      .catch(reason => {\n        console.error(\"Unable to get page for page view\", reason);\n        // Page error -- there is nothing that can be done.\n        this._pagesRequests.delete(pageView);\n      });\n    this._pagesRequests.set(pageView, promise);\n    return promise;\n  }\n\n  forceRendering(currentlyVisiblePages) {\n    const visiblePages = currentlyVisiblePages || this._getVisiblePages();\n    const scrollAhead = this._isScrollModeHorizontal\n      ? this.scroll.right\n      : this.scroll.down;\n    const pageView = this.renderingQueue.getHighestPriority(\n      visiblePages,\n      this._pages,\n      scrollAhead\n    );\n    if (pageView) {\n      this._ensurePdfPageLoaded(pageView).then(() => {\n        this.renderingQueue.renderView(pageView);\n      });\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * @param {HTMLDivElement} textLayerDiv\n   * @param {number} pageIndex\n   * @param {PageViewport} viewport\n   * @param {boolean} enhanceTextSelection\n   * @param {EventBus} eventBus\n   * @returns {TextLayerBuilder}\n   */\n  createTextLayerBuilder(\n    textLayerDiv,\n    pageIndex,\n    viewport,\n    enhanceTextSelection = false,\n    eventBus\n  ) {\n    return new TextLayerBuilder({\n      textLayerDiv,\n      eventBus,\n      pageIndex,\n      viewport,\n      findController: this.isInPresentationMode ? null : this.findController,\n      enhanceTextSelection: this.isInPresentationMode\n        ? false\n        : enhanceTextSelection,\n    });\n  }\n\n  /**\n   * @param {HTMLDivElement} pageDiv\n   * @param {PDFPage} pdfPage\n   * @param {string} [imageResourcesPath] - Path for image resources, mainly\n   *   for annotation icons. Include trailing slash.\n   * @param {boolean} renderInteractiveForms\n   * @param {IL10n} l10n\n   * @returns {AnnotationLayerBuilder}\n   */\n  createAnnotationLayerBuilder(\n    pageDiv,\n    pdfPage,\n    imageResourcesPath = \"\",\n    renderInteractiveForms = false,\n    l10n = NullL10n\n  ) {\n    return new AnnotationLayerBuilder({\n      pageDiv,\n      pdfPage,\n      imageResourcesPath,\n      renderInteractiveForms,\n      linkService: this.linkService,\n      downloadManager: this.downloadManager,\n      l10n,\n    });\n  }\n\n  /**\n   * @type {boolean} Whether all pages of the PDF document have identical\n   *   widths and heights.\n   */\n  get hasEqualPageSizes() {\n    const firstPageView = this._pages[0];\n    for (let i = 1, ii = this._pages.length; i < ii; ++i) {\n      const pageView = this._pages[i];\n      if (\n        pageView.width !== firstPageView.width ||\n        pageView.height !== firstPageView.height\n      ) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * Returns sizes of the pages.\n   * @returns {Array} Array of objects with width/height/rotation fields.\n   */\n  getPagesOverview() {\n    const pagesOverview = this._pages.map(function (pageView) {\n      const viewport = pageView.pdfPage.getViewport({ scale: 1 });\n      return {\n        width: viewport.width,\n        height: viewport.height,\n        rotation: viewport.rotation,\n      };\n    });\n    if (!this.enablePrintAutoRotate) {\n      return pagesOverview;\n    }\n    const isFirstPagePortrait = isPortraitOrientation(pagesOverview[0]);\n    return pagesOverview.map(function (size) {\n      if (isFirstPagePortrait === isPortraitOrientation(size)) {\n        return size;\n      }\n      return {\n        width: size.height,\n        height: size.width,\n        rotation: (size.rotation + 90) % 360,\n      };\n    });\n  }\n\n  /**\n   * @type {number} One of the values in {ScrollMode}.\n   */\n  get scrollMode() {\n    return this._scrollMode;\n  }\n\n  /**\n   * @param {number} mode - The direction in which the document pages should be\n   *   laid out within the scrolling container.\n   *   The constants from {ScrollMode} should be used.\n   */\n  set scrollMode(mode) {\n    if (this._scrollMode === mode) {\n      return; // The Scroll mode didn't change.\n    }\n    if (!isValidScrollMode(mode)) {\n      throw new Error(`Invalid scroll mode: ${mode}`);\n    }\n    this._scrollMode = mode;\n    this.eventBus.dispatch(\"scrollmodechanged\", { source: this, mode });\n\n    this._updateScrollMode(/* pageNumber = */ this._currentPageNumber);\n  }\n\n  _updateScrollMode(pageNumber = null) {\n    const scrollMode = this._scrollMode,\n      viewer = this.viewer;\n\n    viewer.classList.toggle(\n      \"scrollHorizontal\",\n      scrollMode === ScrollMode.HORIZONTAL\n    );\n    viewer.classList.toggle(\"scrollWrapped\", scrollMode === ScrollMode.WRAPPED);\n\n    if (!this.pdfDocument || !pageNumber) {\n      return;\n    }\n    // Non-numeric scale values can be sensitive to the scroll orientation.\n    // Call this before re-scrolling to the current page, to ensure that any\n    // changes in scale don't move the current page.\n    if (this._currentScaleValue && isNaN(this._currentScaleValue)) {\n      this._setScale(this._currentScaleValue, true);\n    }\n    this._setCurrentPageNumber(pageNumber, /* resetCurrentPageView = */ true);\n    this.update();\n  }\n\n  /**\n   * @type {number} One of the values in {SpreadMode}.\n   */\n  get spreadMode() {\n    return this._spreadMode;\n  }\n\n  /**\n   * @param {number} mode - Group the pages in spreads, starting with odd- or\n   *   even-number pages (unless `SpreadMode.NONE` is used).\n   *   The constants from {SpreadMode} should be used.\n   */\n  set spreadMode(mode) {\n    if (this._spreadMode === mode) {\n      return; // The Spread mode didn't change.\n    }\n    if (!isValidSpreadMode(mode)) {\n      throw new Error(`Invalid spread mode: ${mode}`);\n    }\n    this._spreadMode = mode;\n    this.eventBus.dispatch(\"spreadmodechanged\", { source: this, mode });\n\n    this._updateSpreadMode(/* pageNumber = */ this._currentPageNumber);\n  }\n\n  _updateSpreadMode(pageNumber = null) {\n    if (!this.pdfDocument) {\n      return;\n    }\n    const viewer = this.viewer,\n      pages = this._pages;\n    // Temporarily remove all the pages from the DOM.\n    viewer.textContent = \"\";\n\n    if (this._spreadMode === SpreadMode.NONE) {\n      for (let i = 0, iMax = pages.length; i < iMax; ++i) {\n        viewer.appendChild(pages[i].div);\n      }\n    } else {\n      const parity = this._spreadMode - 1;\n      let spread = null;\n      for (let i = 0, iMax = pages.length; i < iMax; ++i) {\n        if (spread === null) {\n          spread = document.createElement(\"div\");\n          spread.className = \"spread\";\n          viewer.appendChild(spread);\n        } else if (i % 2 === parity) {\n          spread = spread.cloneNode(false);\n          viewer.appendChild(spread);\n        }\n        spread.appendChild(pages[i].div);\n      }\n    }\n\n    if (!pageNumber) {\n      return;\n    }\n    this._setCurrentPageNumber(pageNumber, /* resetCurrentPageView = */ true);\n    this.update();\n  }\n}\n\nexport { BaseViewer };\n","/* Copyright 2014 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { BaseViewer } from \"./base_viewer.js\";\nimport { shadow } from \"pdfjs-lib\";\n\nclass PDFViewer extends BaseViewer {\n  get _viewerElement() {\n    return shadow(this, \"_viewerElement\", this.viewer);\n  }\n\n  _scrollIntoView({ pageDiv, pageSpot = null, pageNumber = null }) {\n    if (!pageSpot && !this.isInPresentationMode) {\n      const left = pageDiv.offsetLeft + pageDiv.clientLeft;\n      const right = left + pageDiv.clientWidth;\n      const { scrollLeft, clientWidth } = this.container;\n      if (\n        this._isScrollModeHorizontal ||\n        left < scrollLeft ||\n        right > scrollLeft + clientWidth\n      ) {\n        pageSpot = { left: 0, top: 0 };\n      }\n    }\n    super._scrollIntoView({ pageDiv, pageSpot, pageNumber });\n  }\n\n  _getVisiblePages() {\n    if (this.isInPresentationMode) {\n      // The algorithm in `getVisibleElements` doesn't work in all browsers and\n      // configurations (e.g. Chrome) when Presentation Mode is active.\n      return this._getCurrentVisiblePage();\n    }\n    return super._getVisiblePages();\n  }\n\n  _updateHelper(visiblePages) {\n    if (this.isInPresentationMode) {\n      return;\n    }\n    let currentId = this._currentPageNumber;\n    let stillFullyVisible = false;\n\n    for (const page of visiblePages) {\n      if (page.percent < 100) {\n        break;\n      }\n      if (page.id === currentId) {\n        stillFullyVisible = true;\n        break;\n      }\n    }\n    if (!stillFullyVisible) {\n      currentId = visiblePages[0].id;\n    }\n    this._setCurrentPageNumber(currentId);\n  }\n}\n\nexport { PDFViewer };\n"]},"metadata":{},"sourceType":"module"}