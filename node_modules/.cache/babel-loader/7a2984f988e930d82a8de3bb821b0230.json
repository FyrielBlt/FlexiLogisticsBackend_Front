{"ast":null,"code":"import Url from \"../Api.js\";\nimport axios from \"axios\";\nconst Token = localStorage.getItem('token');\nexport default {\n  state: {\n    ListeOffres: []\n  },\n  getters: {\n    ListeOffres(state) {\n      return state.ListeOffres;\n    }\n\n  },\n  mutations: {\n    GetListeOffre(state, value) {\n      state.ListeOffres = value;\n    },\n\n    AccepterOffreSeule(state, OffreId) {\n      state.ListeOffres.filter(el => el.idOffre == OffreId.OffreId)[0].idEtat = OffreId.idEtatEnCours;\n      state.ListeOffres.filter(el => el.idOffre == OffreId.OffreId)[0].prixFinale = state.ListeOffres.filter(el => el.idOffre == OffreId.OffreId)[0].prix + 10;\n      console.log(state.ListeOffres.filter(el => el.idOffre == OffreId.OffreId)[0]);\n      axios.put(Url + \"offres/\" + state.ListeOffres.filter(el => el.idOffre == OffreId.OffreId)[0].idOffre, state.ListeOffres.filter(el => el.idOffre == OffreId.OffreId)[0], {\n        headers: {\n          Authorization: 'Bearer ' + Token\n        }\n      }).then(res => {\n        console.log(\"en cour\");\n      });\n      console.log(\"bravo\");\n    },\n\n    AccepterOffre(state, ListeOffresId) {\n      //refuser tout les offres puis accepter juste les choisit s\n      for (var j = 0; j < state.ListeOffres.length; j++) {\n        state.ListeOffres[j].idEtat = ListeOffresId.idEtatRefuser;\n        axios.put(Url + \"offres/\" + state.ListeOffres[j].idOffre, state.ListeOffres[j], {\n          headers: {\n            Authorization: 'Bearer ' + Token\n          }\n        }).then();\n      } //accepter les choisits + donner l'offre au client \n\n\n      for (var i = 0; i < ListeOffresId.ListeOffresId.length; i++) {\n        state.ListeOffres.filter(el => el.idOffre == ListeOffresId.ListeOffresId[i])[0].idEtat = ListeOffresId.idEtatEnCours;\n        state.ListeOffres.filter(el => el.idOffre == ListeOffresId.ListeOffresId[i])[0].prixFinale = state.ListeOffres.filter(el => el.idOffre == ListeOffresId.ListeOffresId[i])[0].prix + 10;\n        console.log(state.ListeOffres.filter(el => el.idOffre == ListeOffresId.ListeOffresId[i])[0]);\n        axios.put(Url + \"offres/\" + state.ListeOffres.filter(el => el.idOffre == ListeOffresId.ListeOffresId[i])[0].idOffre, state.ListeOffres.filter(el => el.idOffre == ListeOffresId.ListeOffresId[i])[0], {\n          headers: {\n            Authorization: 'Bearer ' + Token\n          }\n        }).then(res => {\n          console.log(\"en cour\");\n        });\n      }\n\n      console.log(\"bravo\");\n    },\n\n    AnnulerAccepter(state, annuler) {\n      state.ListeOffres[annuler.index].idEtat = annuler.idEtatRefuser;\n      let offre = state.ListeOffres[annuler.index];\n      axios.put(Url + \"offres/\" + annuler.idOffre, offre, {\n        headers: {\n          Authorization: 'Bearer ' + Token\n        }\n      }).then(res => {\n        console.log(\"AnnulerAccepter\");\n      });\n    },\n\n    ValiderAccepter(state, valider) {\n      //refuser tout les offres puis accepter juste les choisit s\n      for (var j = 0; j < state.ListeOffres.length; j++) {\n        state.ListeOffres[j].idEtat = valider.idEtatRefuser;\n        axios.put(Url + \"offres/\" + state.ListeOffres[j].idOffre, state.ListeOffres[j], {\n          headers: {\n            Authorization: 'Bearer ' + Token\n          }\n        }).then();\n      }\n\n      state.ListeOffres[valider.index].idEtat = valider.idEtatAccepter;\n      let offre = state.ListeOffres[valider.index];\n      axios.put(Url + \"offres/\" + valider.idOffre, offre, {\n        headers: {\n          Authorization: 'Bearer ' + Token\n        }\n      }).then(res => {\n        console.log(\"ValiderAccepter\");\n      });\n    }\n\n  },\n  actions: {\n    Accepter_Offre({\n      commit\n    }, ListeOffresId) {\n      commit('AccepterOffre', ListeOffresId);\n    },\n\n    Accepter_Offre_seule({\n      commit\n    }, ListeOffresId) {\n      commit('AccepterOffreSeule', ListeOffresId);\n    },\n\n    Get_ListeOffre({\n      commit\n    }, value) {\n      commit('GetListeOffre', value);\n    },\n\n    Annuler_Accepter({\n      commit\n    }, annuler) {\n      commit('AnnulerAccepter', annuler);\n    },\n\n    Valider_Accepter({\n      commit\n    }, valider) {\n      commit('ValiderAccepter', valider);\n    }\n\n  }\n};","map":{"version":3,"sources":["C:/Users/Karim Omrane/Desktop/PFE FI/FRONT/src/store/offreRecu/Offre.js"],"names":["Url","axios","Token","localStorage","getItem","state","ListeOffres","getters","mutations","GetListeOffre","value","AccepterOffreSeule","OffreId","filter","el","idOffre","idEtat","idEtatEnCours","prixFinale","prix","console","log","put","headers","Authorization","then","res","AccepterOffre","ListeOffresId","j","length","idEtatRefuser","i","AnnulerAccepter","annuler","index","offre","ValiderAccepter","valider","idEtatAccepter","actions","Accepter_Offre","commit","Accepter_Offre_seule","Get_ListeOffre","Annuler_Accepter","Valider_Accepter"],"mappings":"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","sourcesContent":["import Url from \"../Api.js\";\nimport axios from \"axios\";\nconst Token = localStorage.getItem('token');\nexport default {\n  state: {\n    ListeOffres: [],\n\n  },\n  getters: {\n    ListeOffres(state) {\n      return state.ListeOffres;\n    }\n  },\n  mutations: {\n    GetListeOffre(state, value) {\n      state.ListeOffres = value;\n    },\n    AccepterOffreSeule(state, OffreId) {\n     \n\n        state.ListeOffres.filter(el => el.idOffre == OffreId.OffreId)[0].idEtat = OffreId.idEtatEnCours;\n        state.ListeOffres.filter(el => el.idOffre == OffreId.OffreId)[0].prixFinale =\n          state.ListeOffres.filter(el => el.idOffre == OffreId.OffreId)[0].prix + 10;\n        console.log(state.ListeOffres.filter(el => el.idOffre == OffreId.OffreId)[0])\n        axios.put(Url + \"offres/\" + state.ListeOffres.filter(el => el.idOffre == OffreId.OffreId)[0].idOffre, state.ListeOffres.filter(el => el.idOffre == OffreId.OffreId)[0], {\n          headers: {\n            Authorization: 'Bearer ' + Token\n          }\n        }).then(res => {\n          console.log(\"en cour\")\n        });\n      \n\n      console.log(\"bravo\")\n\n\n\n    },\n\n    AccepterOffre(state, ListeOffresId) {\n      //refuser tout les offres puis accepter juste les choisit s\n      for (var j = 0; j < state.ListeOffres.length; j++) {\n        state.ListeOffres[j].idEtat = ListeOffresId.idEtatRefuser;\n        axios.put(Url + \"offres/\" + state.ListeOffres[j].idOffre, state.ListeOffres[j], {\n          headers: {\n            Authorization: 'Bearer ' + Token\n          }\n        }).then();\n      }\n\n      //accepter les choisits + donner l'offre au client \n      for (var i = 0; i < ListeOffresId.ListeOffresId.length; i++) {\n        state.ListeOffres.filter(el => el.idOffre == ListeOffresId.ListeOffresId[i])[0].idEtat = ListeOffresId.idEtatEnCours;\n        state.ListeOffres.filter(el => el.idOffre == ListeOffresId.ListeOffresId[i])[0].prixFinale =\n          state.ListeOffres.filter(el => el.idOffre == ListeOffresId.ListeOffresId[i])[0].prix + 10;\n        console.log(state.ListeOffres.filter(el => el.idOffre == ListeOffresId.ListeOffresId[i])[0])\n        axios.put(Url + \"offres/\" + state.ListeOffres.filter(el => el.idOffre == ListeOffresId.ListeOffresId[i])[0].idOffre, state.ListeOffres.filter(el => el.idOffre == ListeOffresId.ListeOffresId[i])[0], {\n          headers: {\n            Authorization: 'Bearer ' + Token\n          }\n        }).then(res => {\n          console.log(\"en cour\")\n        });\n      }\n\n      console.log(\"bravo\")\n\n\n\n    },\n    AnnulerAccepter(state, annuler){\n      \n      state.ListeOffres[annuler.index].idEtat=annuler.idEtatRefuser;\n      let offre=state.ListeOffres[annuler.index];\n      axios.put(Url + \"offres/\" +annuler.idOffre ,offre,{\n        headers: {\n          Authorization: 'Bearer ' + Token\n        }\n      }).then(res => {\n        console.log(\"AnnulerAccepter\")\n      });\n    },\n    ValiderAccepter(state, valider){\n       //refuser tout les offres puis accepter juste les choisit s\n       for (var j = 0; j < state.ListeOffres.length; j++) {\n        state.ListeOffres[j].idEtat = valider.idEtatRefuser;\n        axios.put(Url + \"offres/\" + state.ListeOffres[j].idOffre, state.ListeOffres[j], {\n          headers: {\n            Authorization: 'Bearer ' + Token\n          }\n        }).then();\n      }\n\n      state.ListeOffres[valider.index].idEtat=valider.idEtatAccepter;\n      let offre=state.ListeOffres[valider.index];\n      axios.put(Url + \"offres/\" +valider.idOffre ,offre ,{\n        headers: {\n          Authorization: 'Bearer ' + Token\n        }\n      }).then(res => {\n        console.log(\"ValiderAccepter\")\n      });\n    },\n  },\n  actions: {\n\n\n    Accepter_Offre({ commit }, ListeOffresId) {\n      commit('AccepterOffre', ListeOffresId);\n    },\n    Accepter_Offre_seule({ commit }, ListeOffresId) {\n      commit('AccepterOffreSeule', ListeOffresId);\n    },\n    Get_ListeOffre({ commit }, value) {\n      commit('GetListeOffre', value);\n    },\n    Annuler_Accepter({ commit }, annuler) {\n      commit('AnnulerAccepter', annuler);\n    },\n    Valider_Accepter({ commit }, valider) {\n      commit('ValiderAccepter', valider);\n    },\n  },\n};\n\n"]},"metadata":{},"sourceType":"module"}