{"ast":null,"code":"import Url from \"../Api.js\";\nimport axios from \"axios\";\nconst Token = localStorage.getItem('token');\nexport default {\n  state: {\n    //liste de transporteur\n    ListeTransporteursAll: [],\n    ListeTransporteurs: [],\n    currentTransporteur: 1,\n    perPageTransporteur: 1,\n    parPageTransporteur: 3,\n    totalTransporteur: 10,\n    ChercherTransporteur: \"\",\n    // trajet\n    ChercherVille1: \"\",\n    ChercherVille2: \"\"\n  },\n  getters: {\n    //return les transporteurs\n    ListeTransporteursAll(state) {\n      return state.ListeTransporteursAll;\n    },\n\n    ListeTransporteurs(state) {\n      return state.ListeTransporteurs;\n    },\n\n    currentTransporteur(state) {\n      return state.currentTransporteur;\n    },\n\n    perPageTransporteur(state) {\n      return state.perPageTransporteur;\n    },\n\n    parPageTransporteur(state) {\n      return state.parPageTransporteur;\n    },\n\n    totalTransporteur(state) {\n      return state.totalTransporteur;\n    },\n\n    //trajet\n    ListeTrajets(state) {\n      return state.ListeTrajets;\n    },\n\n    ChercherVille1(state) {\n      return state.ChercherVille1;\n    },\n\n    ChercherVille2(state) {\n      return state.ChercherVille2;\n    }\n\n  },\n  mutations: {\n    //trajet\n    GetTrajett(state, value) {\n      //state.ListeTrajets = value.data;\n      state.ListeTransporteurs = value.data.map(el => el.idTransporteurNavigation); // supprimer repetition\n\n      state.ListeTransporteurs = state.ListeTransporteurs.filter((obj, pos, arr) => {\n        return arr.map(mapObj => mapObj.idTransporteur).indexOf(obj.idTransporteur) == pos;\n      }); // supprimer repetition\n\n      state.totalTransporteur = parseInt(value.headers[\"x-wp-total\"]);\n    },\n\n    //   ModifierTransporteurTrajet(state, value) {   \n    //     console.log(value);       \n    //     state.ListeTransporteurs = value;\n    // },\n    // get all d'une page\n    GetTransporteur(state, value) {\n      state.ListeTransporteurs = value.data;\n      state.totalTransporteur = parseInt(value.headers[\"x-wp-total\"]);\n    },\n\n    GetTransporteurAll(state, value) {\n      state.ListeTransporteursAll = value;\n    },\n\n    // supprimer \n    DeleteTransporteur(state, transporteur) {\n      state.ListeTransporteurs.splice(state.ListeTransporteurs.indexOf(transporteur), 1);\n      axios.delete(Url + \"Transporteurs/\" + transporteur.idTransporteur, {\n        headers: {\n          Authorization: 'Bearer ' + Token\n        }\n      }).then();\n      axios.delete(Url + \"Users/\" + transporteur.idUser, {\n        headers: {\n          Authorization: 'Bearer ' + Token\n        }\n      }).then();\n    },\n\n    // Modifier\n    ModifierTransporteur(state, user) {\n      // state.ListeTransporteurs[transporteur.index] = transporteur;\n      // modifier users\n      // console.log(user.get(\"idUser\"));\n      axios.put(Url + \"users/\" + user.idUserNavigation.get(\"idUser\"), user.idUserNavigation, {\n        headers: {\n          Authorization: 'Bearer ' + Token\n        }\n      }).then(res => {\n        user.idUserNavigation = res.data;\n        user.imageSrc = res.data.imageSrc;\n        state.ListeTransporteurs[user.index] = user;\n        console.log(user);\n      }); // .catch((rer) => console.log(rer));\n    },\n\n    // Ajouter\n    AjouterTransporteur(state, transporteur) {\n      axios.post(Url + \"users\", transporteur, {\n        headers: {\n          Authorization: 'Bearer ' + Token\n        }\n      }).then(res => {\n        console.log(res.data);\n        let UserAjouter = res.data;\n        var Transporteur = {\n          \"idUser\": res.data.idUser\n        };\n        axios.post(Url + \"Transporteurs\", Transporteur, {\n          headers: {\n            Authorization: 'Bearer ' + Token\n          }\n        }).then(res => {\n          let TransporteurAjouter = res.data;\n          TransporteurAjouter.imageSrc = UserAjouter.imageSrc;\n          TransporteurAjouter.idUserNavigation = UserAjouter;\n          state.ListeTransporteurs.push(TransporteurAjouter);\n        });\n      });\n    }\n\n  },\n  actions: {\n    //Chercher transporteur a l'aide nom , ville1 ville2 \n    Chercher_Trajet({\n      commit,\n      state\n    }, chercher) {\n      state.ChercherVille1 = chercher.ville1; //supprimer repetition \n      // state.ChercherVille2 = chercher.ville2;\n\n      if (chercher.ville1 != \"\") {\n        state.currentTransporteur = 1;\n      }\n\n      state.ChercherTransporteur = chercher.name;\n      axios.get(Url + `itineraires?page=${state.currentTransporteur}&quantityPage=${state.parPageTransporteur}&ville1=${state.ChercherVille1}&name=${state.ChercherTransporteur}`, {\n        headers: {\n          Authorization: 'Bearer ' + Token\n        }\n      }).then(res => {\n        //  let tot=parseInt(res.headers[\"x-wp-total\"]);\n        commit('GetTrajett', res);\n      });\n    },\n\n    // get noveau page \n    Get_NoveauTrajet({\n      commit,\n      state\n    }, NumPage) {\n      state.currentTransporteur = NumPage;\n      axios.get(Url + `itineraires?page=${state.currentTransporteur}&quantityPage=${state.parPageTransporteur}&ville1=${state.ChercherVille1}&name=${state.ChercherTransporteur}`, {\n        headers: {\n          Authorization: 'Bearer ' + Token\n        }\n      }).then(res => {\n        //  let tot=parseInt(res.headers[\"x-wp-total\"]);\n        commit('GetTrajett', res);\n      });\n    },\n\n    Changer_ParpageTrajet({\n      commit,\n      state\n    }, Parpage) {\n      state.currentTransporteur = 1;\n      state.parPageTransporteur = Parpage;\n      axios.get(Url + `itineraires?page=${state.currentTransporteur}&quantityPage=${state.parPageTransporteur}&ville1=${state.ChercherVille1}&name=${state.ChercherTransporteur}`, {\n        headers: {\n          Authorization: 'Bearer ' + Token\n        }\n      }).then(res => {\n        //  let tot=parseInt(res.headers[\"x-wp-total\"]);\n        commit('GetTrajett', res);\n      });\n    },\n\n    //************************************ */\n    //get page :\n    Get_Transporteur({\n      commit,\n      state\n    }) {\n      axios.get(Url + `Transporteurs?page=${state.currentTransporteur}&quantityPage=${state.parPageTransporteur}&name=${state.ChercherTransporteur}`, {\n        headers: {\n          Authorization: 'Bearer ' + Token\n        }\n      }).then(res => {\n        //  let tot=parseInt(res.headers[\"x-wp-total\"]);\n        commit('GetTransporteur', res);\n      });\n    },\n\n    // get noveau page \n    Get_NoveauTransporteur({\n      commit,\n      state\n    }, NumPage) {\n      state.currentTransporteur = NumPage;\n      axios.get(Url + `Transporteurs?page=${state.currentTransporteur}&quantityPage=${state.parPageTransporteur}&name=${state.ChercherTransporteur}`, {\n        headers: {\n          Authorization: 'Bearer ' + Token\n        }\n      }).then(res => {\n        //  let tot=parseInt(res.headers[\"x-wp-total\"]);\n        commit('GetTransporteur', res);\n      });\n    },\n\n    Changer_ParpageTransporteur({\n      commit,\n      state\n    }, Parpage) {\n      state.currentTransporteur = 1;\n      state.parPageTransporteur = Parpage;\n      axios.get(Url + `Transporteurs?page=${state.currentTransporteur}&quantityPage=${state.parPageTransporteur}&name=${state.ChercherTransporteur}`, {\n        headers: {\n          Authorization: 'Bearer ' + Token\n        }\n      }).then(res => {\n        //  let tot=parseInt(res.headers[\"x-wp-total\"]);\n        commit('GetTransporteur', res);\n      });\n    },\n\n    //recherche\n    Chercher_Transporteur({\n      commit,\n      state\n    }, chercher) {\n      state.currentTransporteur = 1;\n      state.ChercherTransporteur = chercher;\n      axios.get(Url + `Transporteurs?page=${state.currentTransporteur}&quantityPage=${state.parPageTransporteur}&name=${state.ChercherTransporteur}`, {\n        headers: {\n          Authorization: 'Bearer ' + Token\n        }\n      }).then(res => {\n        //  let tot=parseInt(res.headers[\"x-wp-total\"]);\n        commit('GetTransporteur', res);\n      });\n    },\n\n    //get all\n    Get_Transporteur_All({\n      commit\n    }) {\n      axios.get(Url + \"Transporteurs\", {\n        headers: {\n          Authorization: 'Bearer ' + Token\n        }\n      }).then(res => {\n        console.log(res.data);\n        commit('GetTransporteurAll', res.data);\n      });\n    },\n\n    // delete\n    Delete_Transporteur({\n      commit\n    }, transporteur) {\n      commit('DeleteTransporteur', transporteur);\n    },\n\n    // modifier\n    Modifier_Transporteur({\n      commit\n    }, value) {\n      commit('ModifierTransporteur', value);\n    },\n\n    // Ajouter\n    Ajouter_Transporteur({\n      commit\n    }, transporteur) {\n      commit('AjouterTransporteur', transporteur);\n    }\n\n  }\n};","map":{"version":3,"sources":["C:/Users/Karim Omrane/Desktop/PFE FI/FRONT/src/store/users/Transporteur.js"],"names":["Url","axios","Token","localStorage","getItem","state","ListeTransporteursAll","ListeTransporteurs","currentTransporteur","perPageTransporteur","parPageTransporteur","totalTransporteur","ChercherTransporteur","ChercherVille1","ChercherVille2","getters","ListeTrajets","mutations","GetTrajett","value","data","map","el","idTransporteurNavigation","filter","obj","pos","arr","mapObj","idTransporteur","indexOf","parseInt","headers","GetTransporteur","GetTransporteurAll","DeleteTransporteur","transporteur","splice","delete","Authorization","then","idUser","ModifierTransporteur","user","put","idUserNavigation","get","res","imageSrc","index","console","log","AjouterTransporteur","post","UserAjouter","Transporteur","TransporteurAjouter","push","actions","Chercher_Trajet","commit","chercher","ville1","name","Get_NoveauTrajet","NumPage","Changer_ParpageTrajet","Parpage","Get_Transporteur","Get_NoveauTransporteur","Changer_ParpageTransporteur","Chercher_Transporteur","Get_Transporteur_All","Delete_Transporteur","Modifier_Transporteur","Ajouter_Transporteur"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,WAAhB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;AACA,eAAe;AACbC,EAAAA,KAAK,EAAE;AACL;AACAC,IAAAA,qBAAqB,EAAE,EAFlB;AAGLC,IAAAA,kBAAkB,EAAE,EAHf;AAILC,IAAAA,mBAAmB,EAAE,CAJhB;AAKLC,IAAAA,mBAAmB,EAAE,CALhB;AAMLC,IAAAA,mBAAmB,EAAE,CANhB;AAOLC,IAAAA,iBAAiB,EAAE,EAPd;AAQLC,IAAAA,oBAAoB,EAAE,EARjB;AASL;AACAC,IAAAA,cAAc,EAAE,EAVX;AAWLC,IAAAA,cAAc,EAAE;AAXX,GADM;AAebC,EAAAA,OAAO,EAAE;AACP;AACAT,IAAAA,qBAAqB,CAACD,KAAD,EAAQ;AAC3B,aAAOA,KAAK,CAACC,qBAAb;AACD,KAJM;;AAKPC,IAAAA,kBAAkB,CAACF,KAAD,EAAQ;AACxB,aAAOA,KAAK,CAACE,kBAAb;AACD,KAPM;;AAQPC,IAAAA,mBAAmB,CAACH,KAAD,EAAQ;AACzB,aAAOA,KAAK,CAACG,mBAAb;AACD,KAVM;;AAWPC,IAAAA,mBAAmB,CAACJ,KAAD,EAAQ;AACzB,aAAOA,KAAK,CAACI,mBAAb;AACD,KAbM;;AAcPC,IAAAA,mBAAmB,CAACL,KAAD,EAAQ;AACzB,aAAOA,KAAK,CAACK,mBAAb;AACD,KAhBM;;AAiBPC,IAAAA,iBAAiB,CAACN,KAAD,EAAQ;AACvB,aAAOA,KAAK,CAACM,iBAAb;AACD,KAnBM;;AAoBP;AACAK,IAAAA,YAAY,CAACX,KAAD,EAAQ;AAClB,aAAOA,KAAK,CAACW,YAAb;AACD,KAvBM;;AAwBPH,IAAAA,cAAc,CAACR,KAAD,EAAQ;AACpB,aAAOA,KAAK,CAACQ,cAAb;AACD,KA1BM;;AA2BPC,IAAAA,cAAc,CAACT,KAAD,EAAQ;AACpB,aAAOA,KAAK,CAACS,cAAb;AACD;;AA7BM,GAfI;AA+CbG,EAAAA,SAAS,EAAE;AACT;AACAC,IAAAA,UAAU,CAACb,KAAD,EAAQc,KAAR,EAAe;AAEvB;AACAd,MAAAA,KAAK,CAACE,kBAAN,GAA2BY,KAAK,CAACC,IAAN,CACxBC,GADwB,CACpBC,EAAE,IAAIA,EAAE,CAACC,wBADW,CAA3B,CAHuB,CAKpB;;AACAlB,MAAAA,KAAK,CAACE,kBAAN,GAA2BF,KAAK,CAACE,kBAAN,CAAyBiB,MAAzB,CAAgC,CAACC,GAAD,EAAMC,GAAN,EAAWC,GAAX,KAAmB;AAC7E,eAAOA,GAAG,CAACN,GAAJ,CAAQO,MAAM,IACfA,MAAM,CAACC,cADN,EACsBC,OADtB,CAC8BL,GAAG,CAACI,cADlC,KACqDH,GAD5D;AAEC,OAHyB,CAA3B,CANoB,CAWpB;;AACHrB,MAAAA,KAAK,CAACM,iBAAN,GAA0BoB,QAAQ,CAACZ,KAAK,CAACa,OAAN,CAAc,YAAd,CAAD,CAAlC;AAED,KAhBQ;;AAiBT;AACA;AACA;AAEA;AACA;AACAC,IAAAA,eAAe,CAAC5B,KAAD,EAAQc,KAAR,EAAe;AAC5Bd,MAAAA,KAAK,CAACE,kBAAN,GAA2BY,KAAK,CAACC,IAAjC;AACAf,MAAAA,KAAK,CAACM,iBAAN,GAA0BoB,QAAQ,CAACZ,KAAK,CAACa,OAAN,CAAc,YAAd,CAAD,CAAlC;AACD,KA1BQ;;AA2BTE,IAAAA,kBAAkB,CAAC7B,KAAD,EAAQc,KAAR,EAAe;AAC/Bd,MAAAA,KAAK,CAACC,qBAAN,GAA8Ba,KAA9B;AACD,KA7BQ;;AA8BT;AACAgB,IAAAA,kBAAkB,CAAC9B,KAAD,EAAQ+B,YAAR,EAAsB;AACtC/B,MAAAA,KAAK,CAACE,kBAAN,CAAyB8B,MAAzB,CAAgChC,KAAK,CAACE,kBAAN,CAAyBuB,OAAzB,CAAiCM,YAAjC,CAAhC,EAAgF,CAAhF;AACAnC,MAAAA,KAAK,CAACqC,MAAN,CAAatC,GAAG,GAAG,gBAAN,GAAyBoC,YAAY,CAACP,cAAnD,EAAmE;AACjEG,QAAAA,OAAO,EAAE;AACPO,UAAAA,aAAa,EAAE,YAAYrC;AADpB;AADwD,OAAnE,EAIGsC,IAJH;AAKAvC,MAAAA,KAAK,CAACqC,MAAN,CAAatC,GAAG,GAAG,QAAN,GAAiBoC,YAAY,CAACK,MAA3C,EAAmD;AACjDT,QAAAA,OAAO,EAAE;AACPO,UAAAA,aAAa,EAAE,YAAYrC;AADpB;AADwC,OAAnD,EAIGsC,IAJH;AAKD,KA3CQ;;AA4CT;AACAE,IAAAA,oBAAoB,CAACrC,KAAD,EAAQsC,IAAR,EAAc;AAChC;AACA;AACD;AACC1C,MAAAA,KAAK,CACF2C,GADH,CACO5C,GAAG,GAAG,QAAN,GAAiB2C,IAAI,CAACE,gBAAL,CAAsBC,GAAtB,CAA0B,QAA1B,CADxB,EAC6DH,IAAI,CAACE,gBADlE,EACoF;AAChFb,QAAAA,OAAO,EAAE;AACPO,UAAAA,aAAa,EAAE,YAAYrC;AADpB;AADuE,OADpF,EAMGsC,IANH,CAMQO,GAAG,IAAI;AACXJ,QAAAA,IAAI,CAACE,gBAAL,GAAsBE,GAAG,CAAC3B,IAA1B;AACAuB,QAAAA,IAAI,CAACK,QAAL,GAAcD,GAAG,CAAC3B,IAAJ,CAAS4B,QAAvB;AACA3C,QAAAA,KAAK,CAACE,kBAAN,CAAyBoC,IAAI,CAACM,KAA9B,IAAuCN,IAAvC;AACAO,QAAAA,OAAO,CAACC,GAAR,CAAYR,IAAZ;AACD,OAXH,EAJgC,CAgB9B;AAEH,KA/DQ;;AAgET;AACAS,IAAAA,mBAAmB,CAAC/C,KAAD,EAAQ+B,YAAR,EAAsB;AAGvCnC,MAAAA,KAAK,CAACoD,IAAN,CAAWrD,GAAG,GAAG,OAAjB,EAA0BoC,YAA1B,EAAwC;AACtCJ,QAAAA,OAAO,EAAE;AACPO,UAAAA,aAAa,EAAE,YAAYrC;AADpB;AAD6B,OAAxC,EAIGsC,IAJH,CAIQO,GAAG,IAAI;AACbG,QAAAA,OAAO,CAACC,GAAR,CAAYJ,GAAG,CAAC3B,IAAhB;AACA,YAAIkC,WAAW,GAAGP,GAAG,CAAC3B,IAAtB;AACA,YAAImC,YAAY,GAAG;AACjB,oBAAUR,GAAG,CAAC3B,IAAJ,CAASqB;AADF,SAAnB;AAIAxC,QAAAA,KAAK,CAACoD,IAAN,CAAWrD,GAAG,GAAG,eAAjB,EAAkCuD,YAAlC,EAAgD;AAC9CvB,UAAAA,OAAO,EAAE;AACPO,YAAAA,aAAa,EAAE,YAAYrC;AADpB;AADqC,SAAhD,EAIGsC,IAJH,CAIQO,GAAG,IAAI;AACb,cAAIS,mBAAmB,GAAGT,GAAG,CAAC3B,IAA9B;AACAoC,UAAAA,mBAAmB,CAACR,QAApB,GAA+BM,WAAW,CAACN,QAA3C;AACAQ,UAAAA,mBAAmB,CAACX,gBAApB,GAAuCS,WAAvC;AACAjD,UAAAA,KAAK,CAACE,kBAAN,CAAyBkD,IAAzB,CAA8BD,mBAA9B;AAED,SAVD;AAWD,OAtBD;AAyBD;;AA7FQ,GA/CE;AA8IbE,EAAAA,OAAO,EAAE;AACP;AACAC,IAAAA,eAAe,CAAC;AAAEC,MAAAA,MAAF;AAAUvD,MAAAA;AAAV,KAAD,EAAoBwD,QAApB,EAA8B;AAC3CxD,MAAAA,KAAK,CAACQ,cAAN,GAAuBgD,QAAQ,CAACC,MAAhC,CAD2C,CAE3C;AAGD;;AACC,UAAID,QAAQ,CAACC,MAAT,IAAmB,EAAvB,EAA4B;AAAEzD,QAAAA,KAAK,CAACG,mBAAN,GAA4B,CAA5B;AAAgC;;AAC9DH,MAAAA,KAAK,CAACO,oBAAN,GAA6BiD,QAAQ,CAACE,IAAtC;AAEA9D,MAAAA,KAAK,CAAC6C,GAAN,CAAU9C,GAAG,GAAI,oBAAmBK,KAAK,CAACG,mBAAoB,iBAAgBH,KAAK,CAACK,mBAAoB,WAAUL,KAAK,CAACQ,cAAe,SAAQR,KAAK,CAACO,oBAAqB,EAA1K,EAA6K;AAC3KoB,QAAAA,OAAO,EAAE;AACPO,UAAAA,aAAa,EAAE,YAAYrC;AADpB;AADkK,OAA7K,EAKGsC,IALH,CAKQO,GAAG,IAAI;AACX;AACAa,QAAAA,MAAM,CAAC,YAAD,EAAeb,GAAf,CAAN;AACD,OARH;AASD,KApBM;;AAqBP;AACAiB,IAAAA,gBAAgB,CAAC;AAAEJ,MAAAA,MAAF;AAAUvD,MAAAA;AAAV,KAAD,EAAoB4D,OAApB,EAA6B;AAC3C5D,MAAAA,KAAK,CAACG,mBAAN,GAA4ByD,OAA5B;AACAhE,MAAAA,KAAK,CAAC6C,GAAN,CAAU9C,GAAG,GAAI,oBAAmBK,KAAK,CAACG,mBAAoB,iBAAgBH,KAAK,CAACK,mBAAoB,WAAUL,KAAK,CAACQ,cAAe,SAAQR,KAAK,CAACO,oBAAqB,EAA1K,EAA6K;AAC3KoB,QAAAA,OAAO,EAAE;AACPO,UAAAA,aAAa,EAAE,YAAYrC;AADpB;AADkK,OAA7K,EAKGsC,IALH,CAKQO,GAAG,IAAI;AACX;AACAa,QAAAA,MAAM,CAAC,YAAD,EAAeb,GAAf,CAAN;AACD,OARH;AASD,KAjCM;;AAkCPmB,IAAAA,qBAAqB,CAAC;AAAEN,MAAAA,MAAF;AAAUvD,MAAAA;AAAV,KAAD,EAAoB8D,OAApB,EAA6B;AAChD9D,MAAAA,KAAK,CAACG,mBAAN,GAA4B,CAA5B;AACAH,MAAAA,KAAK,CAACK,mBAAN,GAA4ByD,OAA5B;AACAlE,MAAAA,KAAK,CAAC6C,GAAN,CAAU9C,GAAG,GAAI,oBAAmBK,KAAK,CAACG,mBAAoB,iBAAgBH,KAAK,CAACK,mBAAoB,WAAUL,KAAK,CAACQ,cAAe,SAAQR,KAAK,CAACO,oBAAqB,EAA1K,EAA6K;AAC3KoB,QAAAA,OAAO,EAAE;AACPO,UAAAA,aAAa,EAAE,YAAYrC;AADpB;AADkK,OAA7K,EAKGsC,IALH,CAKQO,GAAG,IAAI;AACX;AACAa,QAAAA,MAAM,CAAC,YAAD,EAAeb,GAAf,CAAN;AACD,OARH;AASD,KA9CM;;AA+CP;AACA;AACAqB,IAAAA,gBAAgB,CAAC;AAAER,MAAAA,MAAF;AAAUvD,MAAAA;AAAV,KAAD,EAAoB;AAClCJ,MAAAA,KAAK,CAAC6C,GAAN,CAAU9C,GAAG,GAAI,sBAAqBK,KAAK,CAACG,mBAAoB,iBAAgBH,KAAK,CAACK,mBAAoB,SAAQL,KAAK,CAACO,oBAAqB,EAA7I,EAAgJ;AAC9IoB,QAAAA,OAAO,EAAE;AACPO,UAAAA,aAAa,EAAE,YAAYrC;AADpB;AADqI,OAAhJ,EAKGsC,IALH,CAKQO,GAAG,IAAI;AACX;AACAa,QAAAA,MAAM,CAAC,iBAAD,EAAoBb,GAApB,CAAN;AACD,OARH;AASD,KA3DM;;AA8DP;AACAsB,IAAAA,sBAAsB,CAAC;AAAET,MAAAA,MAAF;AAAUvD,MAAAA;AAAV,KAAD,EAAoB4D,OAApB,EAA6B;AACjD5D,MAAAA,KAAK,CAACG,mBAAN,GAA4ByD,OAA5B;AACAhE,MAAAA,KAAK,CAAC6C,GAAN,CAAU9C,GAAG,GAAI,sBAAqBK,KAAK,CAACG,mBAAoB,iBAAgBH,KAAK,CAACK,mBAAoB,SAAQL,KAAK,CAACO,oBAAqB,EAA7I,EAAgJ;AAC9IoB,QAAAA,OAAO,EAAE;AACPO,UAAAA,aAAa,EAAE,YAAYrC;AADpB;AADqI,OAAhJ,EAKGsC,IALH,CAKQO,GAAG,IAAI;AACX;AACAa,QAAAA,MAAM,CAAC,iBAAD,EAAoBb,GAApB,CAAN;AACD,OARH;AASD,KA1EM;;AA2EPuB,IAAAA,2BAA2B,CAAC;AAAEV,MAAAA,MAAF;AAAUvD,MAAAA;AAAV,KAAD,EAAoB8D,OAApB,EAA6B;AACtD9D,MAAAA,KAAK,CAACG,mBAAN,GAA4B,CAA5B;AACAH,MAAAA,KAAK,CAACK,mBAAN,GAA4ByD,OAA5B;AACAlE,MAAAA,KAAK,CAAC6C,GAAN,CAAU9C,GAAG,GAAI,sBAAqBK,KAAK,CAACG,mBAAoB,iBAAgBH,KAAK,CAACK,mBAAoB,SAAQL,KAAK,CAACO,oBAAqB,EAA7I,EAAgJ;AAC9IoB,QAAAA,OAAO,EAAE;AACPO,UAAAA,aAAa,EAAE,YAAYrC;AADpB;AADqI,OAAhJ,EAKGsC,IALH,CAKQO,GAAG,IAAI;AACX;AACAa,QAAAA,MAAM,CAAC,iBAAD,EAAoBb,GAApB,CAAN;AACD,OARH;AASD,KAvFM;;AAwFP;AACAwB,IAAAA,qBAAqB,CAAC;AAAEX,MAAAA,MAAF;AAAUvD,MAAAA;AAAV,KAAD,EAAoBwD,QAApB,EAA8B;AACjDxD,MAAAA,KAAK,CAACG,mBAAN,GAA4B,CAA5B;AACAH,MAAAA,KAAK,CAACO,oBAAN,GAA6BiD,QAA7B;AACA5D,MAAAA,KAAK,CAAC6C,GAAN,CAAU9C,GAAG,GAAI,sBAAqBK,KAAK,CAACG,mBAAoB,iBAAgBH,KAAK,CAACK,mBAAoB,SAAQL,KAAK,CAACO,oBAAqB,EAA7I,EAAgJ;AAC9IoB,QAAAA,OAAO,EAAE;AACPO,UAAAA,aAAa,EAAE,YAAYrC;AADpB;AADqI,OAAhJ,EAKGsC,IALH,CAKQO,GAAG,IAAI;AACX;AACAa,QAAAA,MAAM,CAAC,iBAAD,EAAoBb,GAApB,CAAN;AACD,OARH;AASD,KArGM;;AAsGP;AACAyB,IAAAA,oBAAoB,CAAC;AAAEZ,MAAAA;AAAF,KAAD,EAAa;AAC/B3D,MAAAA,KAAK,CAAC6C,GAAN,CAAU9C,GAAG,GAAG,eAAhB,EAAiC;AAC/BgC,QAAAA,OAAO,EAAE;AACPO,UAAAA,aAAa,EAAE,YAAYrC;AADpB;AADsB,OAAjC,EAKGsC,IALH,CAKQO,GAAG,IAAI;AACXG,QAAAA,OAAO,CAACC,GAAR,CAAYJ,GAAG,CAAC3B,IAAhB;AACAwC,QAAAA,MAAM,CAAC,oBAAD,EAAuBb,GAAG,CAAC3B,IAA3B,CAAN;AACD,OARH;AASD,KAjHM;;AAkHP;AACAqD,IAAAA,mBAAmB,CAAC;AAAEb,MAAAA;AAAF,KAAD,EAAaxB,YAAb,EAA2B;AAC5CwB,MAAAA,MAAM,CAAC,oBAAD,EAAuBxB,YAAvB,CAAN;AACD,KArHM;;AAsHP;AACAsC,IAAAA,qBAAqB,CAAC;AAAEd,MAAAA;AAAF,KAAD,EAAazC,KAAb,EAAoB;AACvCyC,MAAAA,MAAM,CAAC,sBAAD,EAAyBzC,KAAzB,CAAN;AACD,KAzHM;;AA0HP;AACAwD,IAAAA,oBAAoB,CAAC;AAAEf,MAAAA;AAAF,KAAD,EAAaxB,YAAb,EAA2B;AAC7CwB,MAAAA,MAAM,CAAC,qBAAD,EAAwBxB,YAAxB,CAAN;AACD;;AA7HM;AA9II,CAAf","sourcesContent":["import Url from \"../Api.js\";\nimport axios from \"axios\";\nconst Token = localStorage.getItem('token');\nexport default {\n  state: {\n    //liste de transporteur\n    ListeTransporteursAll: [],\n    ListeTransporteurs: [],\n    currentTransporteur: 1,\n    perPageTransporteur: 1,\n    parPageTransporteur: 3,\n    totalTransporteur: 10,\n    ChercherTransporteur: \"\",\n    // trajet\n    ChercherVille1: \"\",\n    ChercherVille2: \"\"\n\n  },\n  getters: {\n    //return les transporteurs\n    ListeTransporteursAll(state) {\n      return state.ListeTransporteursAll;\n    },\n    ListeTransporteurs(state) {\n      return state.ListeTransporteurs;\n    },\n    currentTransporteur(state) {\n      return state.currentTransporteur;\n    },\n    perPageTransporteur(state) {\n      return state.perPageTransporteur;\n    },\n    parPageTransporteur(state) {\n      return state.parPageTransporteur;\n    },\n    totalTransporteur(state) {\n      return state.totalTransporteur;\n    },\n    //trajet\n    ListeTrajets(state) {\n      return state.ListeTrajets;\n    },\n    ChercherVille1(state) {\n      return state.ChercherVille1;\n    },\n    ChercherVille2(state) {\n      return state.ChercherVille2;\n    },\n\n  },\n  mutations: {\n    //trajet\n    GetTrajett(state, value) {\n     \n      //state.ListeTrajets = value.data;\n      state.ListeTransporteurs = value.data\n        .map(el => el.idTransporteurNavigation);\n         // supprimer repetition\n         state.ListeTransporteurs = state.ListeTransporteurs.filter((obj, pos, arr) => {\n          return arr.map(mapObj =>\n                mapObj.idTransporteur).indexOf(obj.idTransporteur) == pos;\n          });\n        \n         // supprimer repetition\n      state.totalTransporteur = parseInt(value.headers[\"x-wp-total\"]);\n\n    },\n    //   ModifierTransporteurTrajet(state, value) {   \n    //     console.log(value);       \n    //     state.ListeTransporteurs = value;\n\n    // },\n    // get all d'une page\n    GetTransporteur(state, value) {\n      state.ListeTransporteurs = value.data;\n      state.totalTransporteur = parseInt(value.headers[\"x-wp-total\"]);\n    },\n    GetTransporteurAll(state, value) {\n      state.ListeTransporteursAll = value;\n    },\n    // supprimer \n    DeleteTransporteur(state, transporteur) {\n      state.ListeTransporteurs.splice(state.ListeTransporteurs.indexOf(transporteur), 1);\n      axios.delete(Url + \"Transporteurs/\" + transporteur.idTransporteur, {\n        headers: {\n          Authorization: 'Bearer ' + Token\n        }\n      }).then();\n      axios.delete(Url + \"Users/\" + transporteur.idUser, {\n        headers: {\n          Authorization: 'Bearer ' + Token\n        }\n      }).then();\n    },\n    // Modifier\n    ModifierTransporteur(state, user) {\n      // state.ListeTransporteurs[transporteur.index] = transporteur;\n      // modifier users\n     // console.log(user.get(\"idUser\"));\n      axios\n        .put(Url + \"users/\" + user.idUserNavigation.get(\"idUser\"), user.idUserNavigation, {\n          headers: {\n            Authorization: 'Bearer ' + Token\n          }\n        })\n        .then(res => {\n          user.idUserNavigation=res.data;\n          user.imageSrc=res.data.imageSrc;\n          state.ListeTransporteurs[user.index] = user;\n          console.log(user);\n        });\n        // .catch((rer) => console.log(rer));\n\n    },\n    // Ajouter\n    AjouterTransporteur(state, transporteur) {\n    \n    \n      axios.post(Url + \"users\", transporteur, {\n        headers: {\n          Authorization: 'Bearer ' + Token\n        }\n      }).then(res => {\n        console.log(res.data);\n        let UserAjouter = res.data;\n        var Transporteur = {\n          \"idUser\": res.data.idUser,\n        };\n\n        axios.post(Url + \"Transporteurs\", Transporteur, {\n          headers: {\n            Authorization: 'Bearer ' + Token\n          }\n        }).then(res => {\n          let TransporteurAjouter = res.data;\n          TransporteurAjouter.imageSrc = UserAjouter.imageSrc;\n          TransporteurAjouter.idUserNavigation = UserAjouter;\n          state.ListeTransporteurs.push(TransporteurAjouter);\n\n        });\n      });\n\n\n    }\n  },\n  actions: {\n    //Chercher transporteur a l'aide nom , ville1 ville2 \n    Chercher_Trajet({ commit, state }, chercher) {\n      state.ChercherVille1 = chercher.ville1;\n      //supprimer repetition \n\n    \n     // state.ChercherVille2 = chercher.ville2;\n      if (chercher.ville1 != \"\" ) { state.currentTransporteur = 1; }\n      state.ChercherTransporteur = chercher.name;\n\n      axios.get(Url + `itineraires?page=${state.currentTransporteur}&quantityPage=${state.parPageTransporteur}&ville1=${state.ChercherVille1}&name=${state.ChercherTransporteur}`, {\n        headers: {\n          Authorization: 'Bearer ' + Token\n        }\n      })\n        .then(res => {\n          //  let tot=parseInt(res.headers[\"x-wp-total\"]);\n          commit('GetTrajett', res);\n        })\n    },\n    // get noveau page \n    Get_NoveauTrajet({ commit, state }, NumPage) {\n      state.currentTransporteur = NumPage;\n      axios.get(Url + `itineraires?page=${state.currentTransporteur}&quantityPage=${state.parPageTransporteur}&ville1=${state.ChercherVille1}&name=${state.ChercherTransporteur}`, {\n        headers: {\n          Authorization: 'Bearer ' + Token\n        }\n      })\n        .then(res => {\n          //  let tot=parseInt(res.headers[\"x-wp-total\"]);\n          commit('GetTrajett', res);\n        })\n    },\n    Changer_ParpageTrajet({ commit, state }, Parpage) {\n      state.currentTransporteur = 1;\n      state.parPageTransporteur = Parpage;\n      axios.get(Url + `itineraires?page=${state.currentTransporteur}&quantityPage=${state.parPageTransporteur}&ville1=${state.ChercherVille1}&name=${state.ChercherTransporteur}`, {\n        headers: {\n          Authorization: 'Bearer ' + Token\n        }\n      })\n        .then(res => {\n          //  let tot=parseInt(res.headers[\"x-wp-total\"]);\n          commit('GetTrajett', res);\n        })\n    },\n    //************************************ */\n    //get page :\n    Get_Transporteur({ commit, state }) {\n      axios.get(Url + `Transporteurs?page=${state.currentTransporteur}&quantityPage=${state.parPageTransporteur}&name=${state.ChercherTransporteur}`, {\n        headers: {\n          Authorization: 'Bearer ' + Token\n        }\n      })\n        .then(res => {\n          //  let tot=parseInt(res.headers[\"x-wp-total\"]);\n          commit('GetTransporteur', res);\n        })\n    },\n\n\n    // get noveau page \n    Get_NoveauTransporteur({ commit, state }, NumPage) {\n      state.currentTransporteur = NumPage;\n      axios.get(Url + `Transporteurs?page=${state.currentTransporteur}&quantityPage=${state.parPageTransporteur}&name=${state.ChercherTransporteur}`, {\n        headers: {\n          Authorization: 'Bearer ' + Token\n        }\n      })\n        .then(res => {\n          //  let tot=parseInt(res.headers[\"x-wp-total\"]);\n          commit('GetTransporteur', res);\n        })\n    },\n    Changer_ParpageTransporteur({ commit, state }, Parpage) {\n      state.currentTransporteur = 1;\n      state.parPageTransporteur = Parpage;\n      axios.get(Url + `Transporteurs?page=${state.currentTransporteur}&quantityPage=${state.parPageTransporteur}&name=${state.ChercherTransporteur}`, {\n        headers: {\n          Authorization: 'Bearer ' + Token\n        }\n      })\n        .then(res => {\n          //  let tot=parseInt(res.headers[\"x-wp-total\"]);\n          commit('GetTransporteur', res);\n        })\n    },\n    //recherche\n    Chercher_Transporteur({ commit, state }, chercher) {\n      state.currentTransporteur = 1;\n      state.ChercherTransporteur = chercher;\n      axios.get(Url + `Transporteurs?page=${state.currentTransporteur}&quantityPage=${state.parPageTransporteur}&name=${state.ChercherTransporteur}`, {\n        headers: {\n          Authorization: 'Bearer ' + Token\n        }\n      })\n        .then(res => {\n          //  let tot=parseInt(res.headers[\"x-wp-total\"]);\n          commit('GetTransporteur', res);\n        })\n    },\n    //get all\n    Get_Transporteur_All({ commit }) {\n      axios.get(Url + \"Transporteurs\", {\n        headers: {\n          Authorization: 'Bearer ' + Token\n        }\n      })\n        .then(res => {\n          console.log(res.data);\n          commit('GetTransporteurAll', res.data);\n        })\n    },\n    // delete\n    Delete_Transporteur({ commit }, transporteur) {\n      commit('DeleteTransporteur', transporteur);\n    },\n    // modifier\n    Modifier_Transporteur({ commit }, value) {\n      commit('ModifierTransporteur', value);\n    },\n    // Ajouter\n    Ajouter_Transporteur({ commit }, transporteur) {\n      commit('AjouterTransporteur', transporteur);\n    },\n    \n  },\n};\n"]},"metadata":{},"sourceType":"module"}